{"version":3,"sources":["pages/DataMaster/DataJenis/FormModalDataJenis.jsx","pages/DataMaster/DataJenis/MasterJenis.jsx","Validasi/ValidasiMasterJenis.jsx"],"names":["FormModalDataJenis","props","_this","Object","classCallCheck","this","_super","call","state","listgroup","aktif","_this2","getData","then","res","setState","data","catch","err","console","log","setTimeout","isEdit","document","getElementById","focus","_this3","react_default","a","createElement","onSubmit","handleSubmit","onKeyPress","e","key","preventDefault","autoComplete","Fragment","Field","name","component","HiidenFiled","type","readOnly","className","onChange","setIndex","tabIndex","id","label","options","filter","list","undefined","kode_group","map","value","nama_group","disabled","placeholder","ReanderSelect","ReanderField","onBlur","onClick","dispatch","hideModal","isLoading","submitting","loading_default","loading","background","loaderColor","Component","reduxForm","form","enableReinitialize","validate","ValidasiMasterJenis","connect","datamaster","ShowModalJenis","initialValues","kode_dept","nama_dept","hapusDataJenis","kode","params","Swal","fire","html","icon","position","cancelButtonText","showCancelButton","confirmButtonText","showConfirmButton","result","isConfirmed","deleteData","NotifSucces","getDataJenis","ToastNotification","response","MasterJenis","modalDialog","columns","dataField","text","sort","csvExport","headerClasses","formatter","rowcontent","row","dataEdit","_id","fomrEditDataJenis","bind","assertThisInitialized","title","data_edit","data_post","putData","reset","error","postData","ErrorHandling","showModal","react_router_dom","to","panel","tabel","keyField","tambahData","handleClick","exportCsv","DataJenis","empty","textEmpty","ModalGlobal","size","content","DataJenis_FormModalDataJenis","React","event","errors","kode_kategori","kode_jenis","nama_jenis"],"mappings":"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","file":"static/js/65.83bf2ea6.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { hideModal } from \"../../../actions/datamaster_action\";\r\n\r\nimport { HiidenFiled, ReanderField, ReanderSelect } from \"../../../components/helpers/field\";\r\nimport { getData } from \"../../../config/axios\";\r\nimport ValidasiMasterJenis from \"../../../Validasi/ValidasiMasterJenis.jsx\";\r\nimport Loading from 'react-fullscreen-loading';\r\n\r\nconst maptostate = (state) => {\r\n  if (state.datamaster.ShowModalJenis !== null) {\r\n    return {\r\n      initialValues: {\r\n        // DataGroup: state.datamaster.GetDataGroup,\r\n        id: state.datamaster.ShowModalJenis.id,\r\n        kode_group: state.datamaster.ShowModalJenis.kode_group,\r\n        kode_dept: state.datamaster.ShowModalJenis.kode_dept,\r\n        nama_dept: state.datamaster.ShowModalJenis.nama_dept,\r\n      },\r\n    };\r\n  }\r\n};\r\nclass FormModalDataJenis extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      listgroup: [],\r\n      aktif: false\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    getData(\"group/get/all\")\r\n      .then((res) => {\r\n        this.setState({\r\n          listgroup: res.data,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    setTimeout(() => {\r\n      if (this.props.isEdit) {\r\n        document.getElementById('nama_dept').focus()\r\n      } else {\r\n        document.getElementById('kode_group').focus()\r\n      }\r\n    }, 100);\r\n   \r\n  }\r\n  setIndex() {\r\n    document.getElementById('kode_dept').focus()\r\n  }\r\n  render() {\r\n    return (\r\n      <form\r\n        onSubmit={this.props.handleSubmit}\r\n        onKeyPress={(e) => {\r\n          e.key === \"Enter\" && e.preventDefault();\r\n        }}\r\n        autoComplete=\"off\"\r\n      >\r\n        {\r\n          this.props.isEdit ? <>\r\n             <Field\r\n              name=\"id\"\r\n              component={HiidenFiled}\r\n              type=\"hidden\"\r\n              readOnly={this.props.isEdit}\r\n            />\r\n          </> : null\r\n        }\r\n        <div className=\"form-group\">\r\n          <Field\r\n            onChange={()=>this.setIndex()}\r\n            tabIndex=\"1\"\r\n            id=\"kode_group\"\r\n            label=\"Kode Group\"\r\n            name=\"kode_group\"\r\n            options={this.state.listgroup\r\n              .filter((list) => list.kode_group !== undefined)\r\n              .map((list) => {\r\n                let data = {\r\n                  value: list.kode_group,\r\n                  name: list.kode_group + \" - \" + list.nama_group,\r\n                };\r\n                return data;\r\n              })}\r\n            value={this.props.kode_group}\r\n            disabled={this.props.isEdit}\r\n            placeholder={\"Silahkan Pilih Kode Group\"}\r\n            component={ReanderSelect}\r\n          />\r\n        </div>\r\n        <Field\r\n          id=\"kode_dept\"\r\n          tabIndex=\"2\"\r\n          name=\"kode_dept\"\r\n          component={ReanderField}\r\n          type=\"text\"\r\n          label=\"Kode Jenis\"\r\n          readOnly={this.props.isEdit}\r\n          placeholder=\"Masukan Kode Jenis\"\r\n        />\r\n        <Field\r\n          tabIndex=\"3\"\r\n          id=\"nama_dept\"\r\n          name=\"nama_dept\"\r\n          component={ReanderField}\r\n          type=\"text\"\r\n          label=\"Nama Jenis\"\r\n          onBlur={() => this.setState({ aktif: true })}\r\n          placeholder=\"Masukan Nama Jenis\"\r\n        />\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-12 text-right\">\r\n            <button\r\n              className=\"btn btn-white\"\r\n              onClick={() => this.props.dispatch(hideModal())}\r\n              type=\"button\"\r\n              disabled={this.props.isLoading}\r\n            >\r\n              Batal\r\n            </button>\r\n            &nbsp;\r\n            <button\r\n              tabIndex=\"3\"\r\n              className={\r\n                this.state.aktif ? \"btn btn-primary\" : \"btn btn-white\"\r\n              }\r\n              disabled={this.props.submitting}\r\n              type=\"submit\"\r\n            >\r\n              {this.props.isLoading ? (\r\n                <>\r\n                  <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Sedang\r\n                  Menyimpan\r\n                </>\r\n              ) : (\r\n                \"Simpan Data\"\r\n              )}\r\n            </button>\r\n          </div>\r\n        </div>\r\n        {this.props.isLoading ? (\r\n        <Loading \r\n        loading\r\n        background=\"rgba(0, 0, 0, 0.35)\"\r\n         loaderColor=\"rgba(94, 147, 117, 1)\" />\r\n      ) : null}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nFormModalDataJenis = reduxForm({\r\n  form: \"ModalDataJenis\",\r\n  enableReinitialize: true,\r\n  validate: ValidasiMasterJenis,\r\n})(FormModalDataJenis);\r\nexport default connect(maptostate, null)(FormModalDataJenis);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Panel, PanelHeader } from \"../../../components/panel/panel.jsx\";\r\nimport {\r\n  ShowModalJenis,\r\n  showModal,\r\n  getDataJenis,\r\n  hideModal,\r\n} from \"../../../actions/datamaster_action.jsx\";\r\nimport { connect } from \"react-redux\";\r\nimport Swal from \"sweetalert2\";\r\nimport {\r\n  NotifSucces,\r\n  ToastNotification,\r\n} from \"../../../components/helpers/notification.jsx\";\r\nimport { reset } from \"redux-form\";\r\nimport { deleteData, postData, putData } from \"../../../config/axios.jsx\";\r\nimport { ErrorHandling } from \"../../../components/helpers/function.jsx\";\r\nimport Tabel from \"../../../components/helpers/tabel.jsx\";\r\nimport ModalGlobal from \"../../../components/helpers/ModalGlobal.jsx\";\r\nimport FormModalDataJenis from \"./FormModalDataJenis.jsx\";\r\nconst maptostate = (state) => {\r\n  return {\r\n    DataJenis: state.datamaster.getDataJenis,\r\n    hideModal: state.datamaster.modalDialog,\r\n  };\r\n};\r\n\r\nconst hapusDataJenis = (kode,params, dispatch) => {\r\n  Swal.fire({\r\n    // title: 'Anda Yakin !!',\r\n    // text: 'Ingin Menghapus Data Ini ?',\r\n    html:\r\n      \"Apakah Anda Yakin Ingin \" +\r\n      \"Menghapus \" +\r\n      \"<h1><b>Kode Jenis \" +\r\n      kode +\r\n      \"</b> ?</h1>\",\r\n    icon: \"warning\",\r\n    position: \"top-center\",\r\n    cancelButtonText: \"Tidak\",\r\n    showCancelButton: true,\r\n    confirmButtonText: \"OK\",\r\n    showConfirmButton: true,\r\n  }).then((result) => {\r\n    if (result.isConfirmed) {\r\n      deleteData(\"jenis/delete/by-kode-jenis/\" + params, {\r\n        data: {\r\n          kode_group: params,\r\n        },\r\n      }).then(() => {\r\n        NotifSucces(\"Data Berhasil Di Hapus\").then(() =>\r\n          dispatch(getDataJenis())\r\n        );\r\n      }).catch((err) => {\r\n        ToastNotification(\"error\", err.response.data)\r\n      })\r\n    }\r\n  });\r\n};\r\nclass MasterJenis extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isEdit: false,\r\n      modalDialog: false,\r\n      isLoading: false,\r\n      columns: [\r\n        {\r\n          dataField: \"kode_group\",\r\n          text: \"Kode Group\",\r\n        },\r\n        {\r\n          dataField: \"kode_dept\",\r\n          text: \"Kode Dept \",\r\n          sort: true,\r\n        },\r\n        {\r\n          dataField: \"nama_dept\",\r\n          text: \"Nama Dept\",\r\n        },\r\n\r\n        {\r\n          dataField: \"action\",\r\n          text: \"Action\",\r\n          csvExport: false,\r\n          headerClasses: \"text-center\",\r\n          formatter: (rowcontent, row) => {\r\n            let dataEdit = {\r\n              id: row._id,\r\n              kode_dept: row.kode_dept,\r\n              nama_dept: row.nama_dept,\r\n              kode_group: row.kode_group,\r\n            };\r\n            return (\r\n              <div className=\"row text-center\">\r\n                <div className=\"col-12\">\r\n                  <button\r\n                    onClick={() => this.fomrEditDataJenis(dataEdit)}\r\n                    className=\"btn btn-primary mr-3\"\r\n                  >\r\n                    {\" \"}\r\n                    <i className=\"fa fa-edit\"></i>\r\n                  </button>\r\n                  <button\r\n                    onClick={() =>\r\n                      hapusDataJenis(row.kode_dept,row._id, this.props.dispatch)\r\n                    }\r\n                    className=\"btn btn-danger\"\r\n                  >\r\n                    <i className=\"fa fa-trash\"></i>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n      ],\r\n    };\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    this.props.dispatch(getDataJenis());\r\n  }\r\n  handleSubmit(data) {\r\n    this.setState({ isLoading: true });\r\n    // console.log(data);\r\n    if (data.kode_dept === undefined) {\r\n      Swal.fire({\r\n        title: \"Oopss!! \",\r\n        text: \"Kode Group Harus Diisi !!!\",\r\n        icon: \"info\",\r\n      });\r\n      this.setState({ isLoading: false });\r\n      return false;\r\n    }\r\n    let data_edit = {\r\n      nama_dept: data.nama_dept,\r\n    };\r\n    let data_post = {\r\n      kode_dept: data.kode_dept,\r\n      nama_dept: data.nama_dept,\r\n      kode_group: data.kode_group,\r\n    };\r\n    console.log(data);\r\n    console.log(data.id);\r\n    this.state.isEdit\r\n      ? putData(\"jenis/edit/by-kode-jenis/\" + data.id, data_edit)\r\n          .then(() => {\r\n            this.props.dispatch(hideModal());\r\n          })\r\n          .then(() => {\r\n            ToastNotification(\"success\", \"Data Berhasil Diedit\");\r\n          })\r\n          .then(() => {\r\n            this.props.dispatch(getDataJenis());\r\n          })\r\n          .then(() => {\r\n            this.setState({ isLoading: false });\r\n          })\r\n          .then(() => {\r\n            this.props.dispatch(reset(\"ModalDataJenis\"));\r\n          })\r\n        .catch((error) => {\r\n          ToastNotification(\"info\", error.response === undefined ? \"Terjadi Kesalahan Saat Megirim Data \" : error.response.data)\r\n          this.setState({ isLoading: false });\r\n        })\r\n      : postData(\"jenis/add\", data_post)\r\n          .then(() => {\r\n            this.props.dispatch(hideModal());\r\n          })\r\n          .then(() => {\r\n            ToastNotification(\"success\", \"Data Berhasil Disimpan\");\r\n          })\r\n          .then(() => {\r\n            this.props.dispatch(getDataJenis());\r\n          })\r\n          .then(() => {\r\n            this.props.dispatch(reset(\"ModalDataJenis\"));\r\n          })\r\n          .then(() => {\r\n            this.setState({ isLoading: false });\r\n          })\r\n          .catch((error) =>\r\n            ErrorHandling(\r\n              error,\r\n              \"jenis/reactive/by-kode-jenis/\",\r\n              // data.kode_dept,\r\n              data_post,\r\n              this.props.dispatch,\r\n              getDataJenis(),\r\n              hideModal(),\r\n              \"ModalDataJenis\"\r\n            ).then(() => {\r\n              this.setState({ isLoading: false });\r\n            })\r\n          );\r\n  }\r\n\r\n  fomrEditDataJenis(dataEdit) {\r\n    this.props.dispatch(showModal());\r\n    this.props.dispatch(ShowModalJenis(dataEdit));\r\n    this.setState({\r\n      isEdit: true,\r\n    });\r\n  }\r\n  ShowModalJenis() {\r\n    this.props.dispatch(showModal());\r\n    this.props.dispatch(ShowModalJenis(false));\r\n    this.setState({\r\n      isEdit: false,\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ol className=\"breadcrumb float-xl-right\">\r\n          <li className=\"breadcrumb-item\">\r\n            <Link to=\"#\">Data Master</Link>\r\n          </li>\r\n          <li className=\"breadcrumb-item active\">Master Jenis</li>\r\n        </ol>\r\n        <h1 className=\"page-header\">Master Jenis </h1>\r\n        <Panel>\r\n          <PanelHeader>Master Jenis</PanelHeader>\r\n          <br />\r\n\r\n          {/* Master Jenis */}\r\n          <div className=\"container\">\r\n            <Tabel\r\n              keyField=\"kode_dept\"\r\n              tambahData={true}\r\n              handleClick={() => this.ShowModalJenis()}\r\n              exportCsv={true}\r\n              data={this.props.DataJenis}\r\n              columns={this.state.columns}\r\n              empty={this.props.DataJenis}\r\n              textEmpty=\"Data Jenis Kosong\"\r\n            />\r\n          </div>\r\n          <br />\r\n          {/* End Master Jenis */}\r\n          <ModalGlobal\r\n            size=\"P\"\r\n            title={this.state.isEdit ? \"Edit Data Jenis\" : \"Tambah Data Jenis\"}\r\n            content={\r\n              <FormModalDataJenis\r\n                isLoading={this.state.isLoading}\r\n                isEdit={this.state.isEdit}\r\n                onSubmit={(data) => this.handleSubmit(data)}\r\n              />\r\n            }\r\n          />\r\n\r\n          {/* End Tambah Master Jenis  */}\r\n        </Panel>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(maptostate, null)(MasterJenis);\r\n","const ValidasiMasterJenis = (value,event) => {\r\n    const errors = {};\r\n    // console.log(event.charCode==13);\r\n    if (!value.kode_group) {\r\n        errors.kode_kategori = \"Kode Kategori Tidak Boleh Kosong\";\r\n    }\r\n    if (!value.kode_jenis) {\r\n        errors.kode_jenis = \"Kode Jenis Tidak Boleh Kosong\";\r\n    }\r\n    if (!value.nama_jenis) {\r\n        errors.nama_jenis = \"Nama Jenis Tidak Boleh Kosong\";\r\n    }\r\n    // console.log(value.kode_group);\r\n   \r\n    return errors;\r\n}\r\n\r\nexport default ValidasiMasterJenis;"],"sourceRoot":""}