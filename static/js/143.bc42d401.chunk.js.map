{"version":3,"sources":["pages/utility/SettingToko/FormInput.jsx","pages/utility/SettingToko/index.jsx"],"names":["FormInput","props","_this","Object","classCallCheck","this","_super","call","state","isLoading","handleSubmit","bind","assertThisInitialized","library","createElement","onSubmit","onKeyPress","e","key","preventDefault","autoComplete","className","name","label","placeholder","text","component","ReanderField","normalize","NumberOnly","disabled","type","Fragment","React","Component","reduxForm","form","enableReinitialize","connect","initialValues","nama_toko","getUserdata","no_hp","no_telp","alamat","alamat_toko","SettingToko","data","kode_toko","hasil","putData","then","res","row","akses","toUpperCase","level","tgl_system","token","user_id","user_name","localStorageencryp","JSON","stringify","ToastNotification","catch","er","_this2","to","SettingToko_FormInput"],"mappings":"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","file":"static/js/143.bc42d401.chunk.js","sourcesContent":["import { getUserdata } from \"../../../components/helpers/function\";\r\nimport {\r\n  React,\r\n  connect,\r\n  reduxForm,\r\n  ReanderField,\r\n  Field,\r\n  NumberOnly,\r\n} from \"../../../components/helpers/library\";\r\n\r\nconst maptostate = (state) => {\r\n    return {\r\n        initialValues: {\r\n            nama_toko : getUserdata().nama_toko,\r\n            no_hp : getUserdata().no_telp,\r\n            alamat : getUserdata().alamat_toko,\r\n        }\r\n    };\r\n  };\r\nclass FormInput extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n    };\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleSubmit() {}\r\n\r\n  componentDidMount() {}\r\n\r\n  render() {\r\n    return (\r\n      <form\r\n        onSubmit={this.props.handleSubmit}\r\n        onKeyPress={(e) => {\r\n          e.key === \"Enter\" && e.preventDefault();\r\n        }}\r\n        autoComplete=\"off\"\r\n      >\r\n        <div className=\"row\">\r\n          <div className=\"col-4\">\r\n            <Field\r\n              name=\"nama_toko\"\r\n              label=\"Nama Toko\"\r\n              placeholder=\"Masukan Nama Toko\"\r\n              text=\"text\"\r\n              component={ReanderField}\r\n            />\r\n          </div>\r\n          <div className=\"col-4\">\r\n            <Field\r\n              name=\"no_hp\"\r\n              label=\"No Telp\"\r\n              placeholder=\"Masukan No Telp\"\r\n              text=\"text\"\r\n              normalize={NumberOnly}\r\n              component={ReanderField}\r\n            />\r\n          </div>\r\n          <div className=\"col-4\">\r\n            <Field\r\n              name=\"alamat\"\r\n              label=\"Alamat\"\r\n              placeholder=\"Masukan Alamat\"\r\n              text=\"text\"\r\n              component={ReanderField}\r\n            />\r\n          </div>\r\n          <div className=\"col-12 text-right\">\r\n            <label> &nbsp;</label>\r\n            <button\r\n              className=\"btn btn-primary\"\r\n              disabled={this.props.isLoading}\r\n              type=\"submit\"\r\n            >\r\n              {this.props.isLoading ? (\r\n                <>\r\n                  <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Sedang\r\n                  Menyimpan\r\n                </>\r\n              ) : (\r\n                \"Simpan Data\"\r\n              )}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nFormInput = reduxForm({\r\n  form: \"FormInput\",\r\n  enableReinitialize: true,\r\n})(FormInput);\r\nexport default connect(maptostate,null)(FormInput);\r\n","import { getUserdata, localStorageencryp } from \"../../../components/helpers/function\";\r\nimport {\r\n  React,\r\n  connect,\r\n  Link,\r\n  reduxForm,\r\n  Panel,\r\n  PanelHeader,\r\n  ToastNotification,\r\n} from \"../../../components/helpers/library\";\r\nimport { putData } from \"../../../config/axios\";\r\nimport FormInput from \"./FormInput\";\r\n\r\nclass SettingToko extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n    };\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n    handleSubmit(data) {\r\n        let kode_toko = getUserdata().kode_toko;\r\n        let hasil = {\r\n            nama_toko : data.nama_toko,\r\n            no_telp : data.no_hp,\r\n            alamat_toko : data.alamat,\r\n        }\r\n        putData('system/edit/' + kode_toko, hasil).then((res) => {\r\n            let row = {\r\n                akses : getUserdata().akses,\r\n                alamat_toko : data.alamat.toUpperCase(),\r\n                nama_toko : data.nama_toko.toUpperCase(),\r\n                no_telp : data.no_hp,\r\n                kode_toko : getUserdata().kode_toko,\r\n                level : getUserdata().level,\r\n                tgl_system : getUserdata().tgl_system,\r\n                token : getUserdata().token,\r\n                user_id : getUserdata().user_id,\r\n                user_name : getUserdata().user_name,\r\n            }\r\n            localStorageencryp(\"userdata\", JSON.stringify(row));\r\n            ToastNotification('success','Data Berhasil Di Update')\r\n        }).catch((er) => {\r\n            ToastNotification('info','Data Gagal Di Update')\r\n        })\r\n  }\r\n\r\n  componentDidMount() {}\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ol className=\"breadcrumb float-xl-right\">\r\n          <li className=\"breadcrumb-item\">\r\n            <Link to=\"#\">Utility</Link>\r\n          </li>\r\n          <li className=\"breadcrumb-item active\">Setting Toko</li>\r\n        </ol>\r\n        <h1 className=\"page-header\">Setting Toko </h1>\r\n        <Panel>\r\n          <PanelHeader>Setting Toko</PanelHeader>\r\n          <br />\r\n          {/* Setting Toko */}\r\n          <div className=\"container\">\r\n            <FormInput\r\n              isLoading={this.state.isLoading}\r\n              onSubmit={(data) => this.handleSubmit(data)}\r\n            />\r\n          </div>\r\n          <br />\r\n          {/* End Tambah Setting Toko  */}\r\n        </Panel>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nSettingToko = reduxForm({\r\n  form: \"SettingToko\",\r\n  enableReinitialize: true,\r\n})(SettingToko);\r\nexport default connect(null)(SettingToko);\r\n"],"sourceRoot":""}