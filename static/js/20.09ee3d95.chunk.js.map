{"version":3,"sources":["pages/Laporan/LaporanPembelian/LaporanPembelianBarangHistory/pdf/ExportTransaksiPembelianHistory.jsx","pages/Laporan/LaporanPembelian/LaporanPembelianBarangHistory/exel/ExportTransaksiPembelianPdfHistory.jsx","pages/Laporan/LaporanPembelian/LaporanPembelianBarangHistory/HeadFormLaporanPembelianBarangHistory.jsx","../node_modules/react-html-table-to-excel/index.js","Validasi/LaporanKeuangan/ValidasiLaporanKeuangan.jsx"],"names":["ExportTransaksiPembelianHistory","tableColumn","data","arguments","length","undefined","doc","jsPDF","tableRows","footRows","finalY","setFontSize","text","getUserdata","nama_toko","jml_alamat","alamat_toko","slice","setProperties","title","concat","localStoragedecryp","JSON","parse","tgl_awal","tgl_akhir","total_berat","total_berat_nota","total_harga_nota","total_harga","total_harga_rata","total_barang","content","styles","halign","forEach","item","index","detail","rows","no_faktur_beli","kode_sales","kode_member","nama_customer","nama_barang","kondisi","kode_dept","formatGram","berat_nota","berat","parseInt","harga_nota","toLocaleString","harga","harga_rata","status_valid","parseFloat","push","grand","colSpan","fillColor","textColor","toFixed","printed","user_id","getToday","fontStyle","autoTable","head","body","foot","startY","theme","rowPageBreak","margin","top","bodyStyles","fontSize","headStyles","autoTableEndPosY","pages","internal","getNumberOfPages","pageWidth","pageSize","width","pageHeight","height","j","horizontalPos","verticalPos","setPage","align","string","output","x","window","open","document","write","ExportTransaksiPembelianPdfHistory","props","_this","Object","classCallCheck","this","_super","call","state","barang","react_default","a","createElement","Fragment","react_html_table_to_excel_default","id","className","table","filename","sheet","buttonText","style","display","backgroundColor","color","map","row","textAlign","Component","HeadFormLaporanPembelianBarangHistory","date","Date","type","setStartDate","bind","assertThisInitialized","setLastDate","change","dispatch","getKondisiPembelian","GetDataGroup","ExportTransaksiPembelian","LaporanTransaksiPembelian","setState","_this2","value","name","datakondisi","list","kondisi_barang","datagroup","kode_group","databarang","element","ongkos","harga_gram","columns","dataField","footerAttrs","footer","cell","num","headerClasses","formatter","rowIndex","colIndex","onSubmit","handleSubmit","autoComplete","Field","component","InputDate","label","selected","onChange","placeholder","ReanderSelect","options","e","isLoading","tabel","keyField","export","empty","textEmpty","onClick","exportPdf","exel_ExportTransaksiPembelianPdfHistory","loading_default","loading","background","loaderColor","reduxForm","form","enableReinitialize","validate","ValidasiLaporanKeuangan","connect","datamaster","initialValues","getTglSystem","defineProperty","exports","_createClass","defineProperties","target","i","descriptor","enumerable","configurable","writable","key","Constructor","protoProps","staticProps","prototype","_react","__webpack_require__","_react2","_interopRequireDefault","_propTypes2","obj","__esModule","default","propTypes","isRequired","ReactHTMLTableToExcel","_Component","instance","TypeError","_classCallCheck","self","ReferenceError","_possibleConstructorReturn","__proto__","getPrototypeOf","handleDownload","subClass","superClass","create","constructor","setPrototypeOf","_inherits","getElementById","nodeType","nodeName","outerHTML","String","context","worksheet","navigator","msSaveOrOpenBlob","blobObject","Blob","click","href","base64","format","download","appendChild","removeChild","s","btoa","unescape","encodeURIComponent","c","replace","m","p","defaultProps","event","errors","tanggal_awal","type_laporan"],"mappings":"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","file":"static/js/20.09ee3d95.chunk.js","sourcesContent":["import jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\nimport { formatGram, getToday, getUserdata, localStoragedecryp } from \"../../../../../components/helpers/function\";\r\n// Date Fns is used to format the dates we receive\r\n\r\n// define a generatePDF function that accepts a tickets argument\r\nconst ExportTransaksiPembelianHistory = (\r\n  data = \"\",\r\n  username = \"\",\r\n  tanggal_dari = \"\",\r\n  tanggal_sampai = \"\"\r\n) => {\r\n  // initialize jsPDF\r\n  const doc = new jsPDF(\"l\", \"mm\", [297, 210]);\r\n  //   let data = JSON.parse(localStorage.getItem(\"tt_pengeluaran_barang\")) || [];\r\n  let tableRows = [];\r\n  let footRows = [];\r\n  let tableColumn = []\r\n  let finalY = 30;\r\n \r\n\r\n\r\n  doc.setFontSize(15);\r\n  doc.text(\"LAPORAN TRANSAKSI PEMBELIAN\", 14, 15);\r\n  doc.setFontSize(20);\r\n  doc.text(getUserdata().nama_toko, 200, 15);\r\n  doc.setFontSize(8);\r\n  let jml_alamat = getUserdata().alamat_toko.length;\r\n  if (jml_alamat > 20) {\r\n    doc.text(getUserdata().alamat_toko.slice(0,48), 200, 20);\r\n  }\r\n  if (jml_alamat > 50) {\r\n    doc.text(getUserdata().alamat_toko.slice(48,90), 200, 25);\r\n  }\r\n  doc.setFontSize(10);\r\n  doc.setProperties({\r\n    title: \"LAPORAN TRANSAKSI PEMBELIAN\",\r\n  });\r\n  //row 1\r\n  doc.text(\r\n    `PERIODE : ${\r\n      localStoragedecryp(\"tgl_laporan\").length === 0\r\n        ? null\r\n        : JSON.parse(localStoragedecryp(\"tgl_laporan\")).tgl_awal +\r\n          \" s/d \" +\r\n          JSON.parse(localStoragedecryp(\"tgl_laporan\")).tgl_akhir\r\n    }`,\r\n    14,\r\n    25\r\n  );\r\n  let total_berat = 0;\r\n  let total_berat_nota = 0;\r\n  let total_harga_nota = 0;\r\n  let total_harga = 0;\r\n  let total_harga_rata = 0;\r\n  let total_barang = 0;\r\n  tableColumn = [\r\n    // [\r\n    //   {\r\n    //     content: `No Faktur Group : ${item._id.no_faktur_group} \\n${header_detail.jenis}  (${parseInt(header_detail.jumlah_rp).toLocaleString(\"kr-KO\")})`,\r\n    //     colSpan: 13,\r\n    //   },\r\n    // ],\r\n    [\r\n      {\r\n        content: `NO BELI`,\r\n      },\r\n      {\r\n        content: `KODE SALES`,\r\n      },\r\n      {\r\n        content: `KODE MEMNBER`,\r\n      },\r\n      {\r\n        content: `NAMA MEMBER`,\r\n      },\r\n      {\r\n        content: `NAMA BARANG`,\r\n      },\r\n      // {\r\n      //   content: `NO HP`,\r\n      // },\r\n      // {\r\n      //   content: `ALAMAT CUSTOMER`,\r\n      // },\r\n      // {\r\n      //   content: `KODE GUDANG`,\r\n      // },\r\n      {\r\n        content: `KONDISI`,\r\n      },\r\n      {\r\n        content: `KODE DEPT`,\r\n      },\r\n      {\r\n        content: `BERAT NOTA`,\r\n        styles: {\r\n          halign: 'right',\r\n        },\r\n      },\r\n      {\r\n        content: `BERAT`,\r\n        styles: {\r\n          halign: 'right',\r\n        },\r\n      },\r\n      {\r\n        content: `HARGA NOTA`,\r\n        styles: {\r\n          halign: 'right',\r\n        },\r\n      },\r\n      {\r\n        content: `HARGA BELI`,\r\n        styles: {\r\n          halign: 'right',\r\n        },\r\n      },\r\n      {\r\n        content: `HARGA RATA`,\r\n        styles: {\r\n          halign: 'right',\r\n        },\r\n      },\r\n      {\r\n        content: `STATUS`,\r\n        styles: {\r\n          halign: 'left',\r\n        },\r\n      },\r\n    \r\n    ],\r\n    ];\r\n  data.forEach((item, index) => {\r\n    let tot_berat = 0;\r\n    let tot_berat_nota = 0;\r\n    let tot_harga_nota = 0;\r\n    let tot_harga = 0;\r\n    let tot_harga_rata = 0;\r\n  \r\n    // item._id.pembayaran.forEach((header_detail, index) => {\r\n    // // console.log(item._id.pembayaran[0].jenis);\r\n    //   let pembayaran = [\r\n    //     {\r\n    //       content: `${header_detail.jenis}  (${parseInt(header_detail.jumlah_rp).toLocaleString(\"kr-KO\")})`,\r\n    //       colSpan: 13,\r\n    //     },\r\n    //   ]\r\n    //   tableRows.push(pembayaran)\r\n    // });\r\n      \r\n    item.detail.forEach((item, index) => {\r\n      let rows = [\r\n        item.no_faktur_beli,\r\n        item.kode_sales,\r\n        item.kode_member,\r\n        item.nama_customer,\r\n        item.nama_barang,\r\n        // item.no_hp,\r\n        // item.alamat_customer,\r\n        // item.kode_gudang,\r\n        item.kondisi,\r\n        item.kode_dept,\r\n        {\r\n          content: formatGram(item.berat_nota, 3),\r\n          styles: {\r\n            halign: 'right',\r\n          },\r\n        },\r\n        {\r\n          content: formatGram(item.berat, 3),\r\n          styles: {\r\n            halign: 'right',\r\n    \r\n          },\r\n        },\r\n        {\r\n          content: parseInt(item.harga_nota).toLocaleString(\"kr-KO\"),\r\n          styles: {\r\n            halign: 'right',\r\n    \r\n          },\r\n        },\r\n        {\r\n          content: parseInt(item.harga).toLocaleString(\"kr-KO\"),\r\n          styles: {\r\n            halign: 'right',\r\n    \r\n          },\r\n        },\r\n        {\r\n          content:parseInt(item.harga_rata).toLocaleString(\"kr-KO\"),\r\n          styles: {\r\n            halign: 'right',\r\n    \r\n          },\r\n        },\r\n        (item.status_valid === 'CANC') ? \"PEMBATALAN\" : \"PEMBELIAN\"\r\n      ];\r\n      tot_berat = tot_berat + parseFloat(item.berat);\r\n      tot_berat_nota = tot_berat_nota + parseFloat(item.berat_nota);\r\n      tot_harga_nota = tot_harga_nota + parseFloat(item.harga_nota);\r\n      tot_harga = tot_harga + parseFloat(item.harga);\r\n      tot_harga_rata = tot_harga_rata + parseFloat(item.harga_rata);\r\n      \r\n      total_berat = total_berat + parseFloat(item.berat);\r\n      total_berat_nota = total_berat_nota + parseFloat(item.berat_nota);\r\n      total_harga_nota = total_harga_nota + parseFloat(item.harga_nota);\r\n      total_harga = total_harga + parseFloat(item.harga);\r\n      total_harga_rata = total_harga_rata + parseFloat(item.harga_rata);\r\n     \r\n      tableRows.push(rows);\r\n    });\r\n    total_barang = total_barang + item.detail.length;\r\n    // let total = [\r\n    //   {\r\n    //     content: `Subtotal : ${item.detail.length} Transaksi`,\r\n    //     colSpan: 7,\r\n    //     styles: {\r\n    //       halign: 'center',\r\n    //       fillColor: \"#F7F7F6\",\r\n    //       textColor: \"#000\",\r\n    //     },\r\n    //   },\r\n    //   {\r\n    //     content:`${tot_berat_nota.toFixed(3)}`,\r\n    //     styles: {\r\n    //       halign: 'right',\r\n    //       fillColor: \"#F7F7F6\",\r\n    //       textColor: \"#000\",\r\n    //     },\r\n    //   },\r\n    //   {\r\n    //     content:`${tot_berat.toFixed(3)}`,\r\n    //     styles: {\r\n    //       halign: 'right',\r\n    //       fillColor: \"#F7F7F6\",\r\n    //       textColor: \"#000\",\r\n    //     },\r\n    //   },\r\n    //   {\r\n    //     content:`${parseInt(tot_harga_nota).toLocaleString(\"kr-KO\")}`,\r\n    //     styles: {\r\n    //       halign: 'right',\r\n    //       fillColor: \"#F7F7F6\",\r\n    //       textColor: \"#000\",\r\n    //     },\r\n    //   },\r\n    //   {\r\n    //     content:`${parseInt(tot_harga).toLocaleString(\"kr-KO\")}`,\r\n    //     styles: {\r\n    //       halign: 'right',\r\n    //       fillColor: \"#F7F7F6\",\r\n    //       textColor: \"#000\",\r\n    //     },\r\n    //   },\r\n    //   {\r\n    //     content:`${parseInt(tot_harga_rata).toLocaleString(\"kr-KO\")}`,\r\n    //     styles: {\r\n    //       halign: 'right',\r\n    //       fillColor: \"#F7F7F6\",\r\n    //       textColor: \"#000\",\r\n    //     },\r\n    //   },\r\n    //   {\r\n    //     content:``,\r\n    //     styles: {\r\n    //       halign: 'right',\r\n    //       fillColor: \"#F7F7F6\",\r\n    //       textColor: \"#000\",\r\n    //     },\r\n    //   },\r\n    // ];\r\n    // tableRows.push(total);\r\n\r\n  });\r\n  let grand = [\r\n    {\r\n      content: `Grand Total : ${total_barang} Transaksi`,\r\n      colSpan: 7,\r\n      styles: {\r\n        halign: 'center',\r\n        fillColor: \"#E8E5E5\",\r\n        textColor: \"#000\",\r\n      },\r\n    },\r\n    {\r\n      content:`${total_berat_nota.toFixed(3)}`,\r\n      styles: {\r\n        fillColor: \"#E8E5E5\",\r\n        textColor: \"#000\",\r\n        halign: 'right',\r\n\r\n      },\r\n    },\r\n    {\r\n      content:`${total_berat.toFixed(3)}`,\r\n      styles: {\r\n        fillColor: \"#E8E5E5\",\r\n        textColor: \"#000\",\r\n        halign: 'right',\r\n\r\n      },\r\n    },\r\n    {\r\n      content:`${parseInt(total_harga_nota).toLocaleString(\"kr-KO\")}`,\r\n      styles: {\r\n        fillColor: \"#E8E5E5\",\r\n        textColor: \"#000\",\r\n        halign: 'right',\r\n\r\n      },\r\n    },\r\n    {\r\n      content:`${parseInt(total_harga).toLocaleString(\"kr-KO\")}`,\r\n      styles: {\r\n        fillColor: \"#E8E5E5\",\r\n        textColor: \"#000\",\r\n        halign: 'right',\r\n\r\n      },\r\n    },\r\n    {\r\n      content:`${parseInt(total_harga_rata).toLocaleString(\"kr-KO\")}`,\r\n      styles: {\r\n        fillColor: \"#E8E5E5\",\r\n        textColor: \"#000\",\r\n        halign: 'right',\r\n\r\n      },\r\n    },\r\n    {\r\n      content:``,\r\n      styles: {\r\n        fillColor: \"#E8E5E5\",\r\n        textColor: \"#000\",\r\n        halign: 'right',\r\n\r\n      },\r\n    },\r\n  ];\r\n  tableRows.push(grand);\r\n  let printed = [\r\n    {\r\n      colSpan:9,\r\n      content: `Printed By ${JSON.parse(localStoragedecryp(\"userdata\")).user_id} / ${getToday()}`,\r\n      styles: {\r\n        // lineWidth: 0.1,\r\n        fontStyle: \"italic\",\r\n        textColor: \"#000\",\r\n        // fillColor: \"#E8E5E5\"\r\n      },\r\n    },\r\n  ]\r\n  tableRows.push(printed);\r\n  doc.autoTable({\r\n    head: tableColumn,\r\n    body: tableRows,\r\n    foot: footRows,\r\n    startY:  finalY,\r\n    theme: \"plain\",\r\n    rowPageBreak: \"avoid\",\r\n    // pageBreak: \"avoid\",\r\n    margin: { top: 10 },\r\n    bodyStyles: {\r\n      // lineWidth: 0.02,\r\n      // lineColor: \"#000\",\r\n      fontSize: 8,\r\n    },\r\n    headStyles: {\r\n      fontSize: 8,\r\n      // lineWidth: 0.02,\r\n      // lineColor: \"#000\",\r\n      fillColor: \"#E8E5E5\",\r\n      textColor: \"#000\",\r\n    },\r\n \r\n  });\r\n  finalY = doc.autoTableEndPosY() + 3;\r\n  tableRows = [];\r\n  footRows = [];\r\n\r\n  // const date = Date().split(\" \");\r\n  // we use a date string to generate our filename.\r\n  // const dateStr = date[2] + date[3] + date[4];\r\n  // ticket title. and margin-top + margin-left\r\n  // doc.text(`User                           : ${JSON.parse(localStoragedecryp(\"userdata\")).user_id}`, 14, finalY + 10);\r\n  // doc.text(`Cetak                        : ${getToday()}`, 14, finalY + 16);\r\n  const pages = doc.internal.getNumberOfPages();\r\n  const pageWidth = doc.internal.pageSize.width; //Optional\r\n  const pageHeight = doc.internal.pageSize.height; //Optional\r\n  doc.setFontSize(10); //Optional\r\n  for (let j = 1; j < pages + 1; j++) {\r\n    let horizontalPos = pageWidth / 2; //Can be fixed number\r\n    let verticalPos = pageHeight - 10; //Can be fixed number\r\n    doc.setPage(j);\r\n    doc.text(`${j} of ${pages}`, horizontalPos, verticalPos, {\r\n      align: \"center\",\r\n    });\r\n  }\r\n  // doc.autoPrint();\r\n  // doc.save(`LAPORAN TRANSAKSI PEMBELIAN.pdf`);\r\n  var string = doc.output(\"datauristring\");\r\n  // var embed = \"<embed width='100%' height='100%' src='\" + string + \"'/>\";\r\n  var x = window.open();\r\n  x.document.open();\r\n  x.document.write(\r\n    \"<html><head><title>LAPORAN TRANSAKSI PEMBELIAN</title></head><body style='margin:0 !important'><embed width='100%' height='100%'  src=\" +\r\n      string +\r\n      \"></embed></body></html>\"\r\n  );\r\n  // x.document.write(embed);\r\n  // setInterval(() => {\r\n  //   x.close();\r\n  // }, 1000);\r\n};\r\n\r\nexport default ExportTransaksiPembelianHistory;\r\n","import React, { Component } from \"react\";\r\nimport ReactHTMLTableToExcel from \"react-html-table-to-excel\";\r\nimport { formatGram, getUserdata } from \"../../../../../components/helpers/function\";\r\nclass ExportTransaksiPembelianPdfHistory extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  render() {\r\n    let total_berat = 0;\r\n    let total_berat_nota = 0;\r\n    let total_harga_nota = 0;\r\n    let total_harga = 0;\r\n    let total_harga_rata = 0;\r\n    let total_barang = 0;\r\n\r\n    this.props.data.forEach((barang, index) => {\r\n      barang.detail.forEach((item, index) => {\r\n        total_berat = total_berat + parseFloat(item.berat);\r\n        total_berat_nota = total_berat_nota + parseFloat(item.berat_nota);\r\n        total_harga_nota = total_harga_nota + parseFloat(item.harga_nota);\r\n        total_harga = total_harga + parseFloat(item.harga);\r\n        total_harga_rata = total_harga_rata + parseFloat(item.harga_rata);\r\n      });\r\n      total_barang = total_barang + barang.detail.length;\r\n    });\r\n    return (\r\n      <>\r\n        <ReactHTMLTableToExcel\r\n          id=\"test-table-xls-button\"\r\n          className=\"btn btn-success btn-block\"\r\n          table=\"table-to-xls\"\r\n          filename=\"Laporan Transaksi Pembelian\"\r\n          sheet=\"Laporan Transaksi Pembelian\"\r\n          buttonText=\"Export Exel\"\r\n        />\r\n        <table id=\"table-to-xls\" style={{ display: \"none\" }}>\r\n          <thead>\r\n            <tr>\r\n              <th colSpan=\"12\"> Laporan Transaksi Pembelian </th>\r\n            </tr>\r\n            <tr>\r\n              <th colSpan=\"12\"> Periode </th>\r\n            </tr>\r\n            {/* <tr>\r\n              <th colSpan=\"12\">\r\n                {\" \"}\r\n                {localStoragedecryp(\"tgl_laporan\").length === 0\r\n                  ? null\r\n                  : JSON.parse(localStoragedecryp(\"tgl_laporan\")).tgl_awal +\r\n                    \" s/d \" +\r\n                    JSON.parse(localStoragedecryp(\"tgl_laporan\"))\r\n                      .tgl_akhir}{\" \"}\r\n              </th>\r\n            </tr>\r\n            <tr>\r\n              <th colSpan=\"12\"></th>\r\n            </tr> */}\r\n            <tr>\r\n              <th colSpan=\"12\"> TOKO :  {getUserdata().nama_toko} </th>\r\n            </tr>\r\n           \r\n            <tr>\r\n              <th colSpan=\"12\"> ALAMAT :  {getUserdata().alamat_toko} </th>\r\n            </tr>\r\n            <tr>\r\n              <td\r\n                style={{\r\n                  backgroundColor: \"#E8E5E5\",\r\n                  color: \"#000\",\r\n                }}\r\n              >\r\n                NO BELI\r\n              </td>\r\n              <td\r\n                style={{\r\n                  backgroundColor: \"#E8E5E5\",\r\n                  color: \"#000\",\r\n                }}\r\n              >\r\n                KODE SALES\r\n              </td>\r\n              <td\r\n                style={{\r\n                  backgroundColor: \"#E8E5E5\",\r\n                  color: \"#000\",\r\n                }}\r\n              >\r\n                KODE MEMBER\r\n              </td>\r\n              <td\r\n                style={{\r\n                  backgroundColor: \"#E8E5E5\",\r\n                  color: \"#000\",\r\n                }}\r\n              >\r\n                NAMA MEMBER\r\n              </td>\r\n              <td\r\n                style={{\r\n                  backgroundColor: \"#E8E5E5\",\r\n                  color: \"#000\",\r\n                }}\r\n              >\r\n                NAMA BARANG\r\n              </td>\r\n              {/* <td\r\n                style={{\r\n                  backgroundColor: \"#E8E5E5\",\r\n                  color: \"#000\",\r\n                }}\r\n              >\r\n                NO HP\r\n              </td>\r\n              <td\r\n                style={{\r\n                  backgroundColor: \"#E8E5E5\",\r\n                  color: \"#000\",\r\n                }}\r\n              >\r\n                ALAMT CUSTOMER\r\n              </td>\r\n              <td\r\n                style={{\r\n                  backgroundColor: \"#E8E5E5\",\r\n                  color: \"#000\",\r\n                }}\r\n              >\r\n                KODE GUDANG\r\n              </td> */}\r\n                <td\r\n                style={{\r\n                  backgroundColor: \"#E8E5E5\",\r\n                  color: \"#000\",\r\n                }}\r\n              >\r\n                KONDISI\r\n              </td>\r\n              <td\r\n                style={{\r\n                  backgroundColor: \"#E8E5E5\",\r\n                  color: \"#000\",\r\n                }}\r\n              >\r\n                KODE DEPT\r\n              </td>\r\n              <td\r\n                style={{\r\n                  backgroundColor: \"#E8E5E5\",\r\n                  color: \"#000\",\r\n                }}\r\n              >\r\n                BERAT NOTA\r\n              </td>\r\n              <td\r\n                style={{\r\n                  backgroundColor: \"#E8E5E5\",\r\n                  color: \"#000\",\r\n                }}\r\n              >\r\n                BERAT\r\n              </td>\r\n              <td\r\n                style={{\r\n                  backgroundColor: \"#E8E5E5\",\r\n                  color: \"#000\",\r\n                }}\r\n              >\r\n                HARGA NOTA\r\n              </td>\r\n              <td\r\n                style={{\r\n                  backgroundColor: \"#E8E5E5\",\r\n                  color: \"#000\",\r\n                }}\r\n              >\r\n                HARGA BELI\r\n              </td>\r\n              <td\r\n                style={{\r\n                  backgroundColor: \"#E8E5E5\",\r\n                  color: \"#000\",\r\n                }}\r\n              >\r\n                HARGA RATA\r\n              </td>\r\n              <td\r\n                style={{\r\n                  backgroundColor: \"#E8E5E5\",\r\n                  color: \"#000\",\r\n                }}\r\n              >\r\n                STATUS\r\n              </td>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.props.data.map((item, index) => (\r\n              <>\r\n                {item.detail.map((row, index) => (\r\n                  <tr>\r\n                    <td>{row.no_faktur_beli}</td>\r\n                    <td>{row.kode_sales}</td>\r\n                    <td>{row.kode_member}</td>\r\n                    <td>{row.nama_customer}</td>\r\n                    <td>{row.nama_barang}</td>\r\n                    {/* <td style={{ whiteSpace: \"nowrap\" }}>{row.no_hp}</td>\r\n                    <td>{row.alamat_customer}</td>\r\n                    <td>{row.kode_gudang}</td> */}\r\n                    <td>{row.kondisi}</td>\r\n                    <td>{row.kode_dept}</td>\r\n                    <td style={{textAlign : \"right\" }}>{formatGram(row.berat_nota,3)}</td>\r\n                    <td style={{textAlign : \"right\" }}>{formatGram(row.berat,3)}</td>\r\n                    <td style={{textAlign : \"right\" }}>{row.harga_nota.toLocaleString(\"kr-KO\")}</td>\r\n                    <td style={{textAlign : \"right\" }}>{row.harga.toLocaleString(\"kr-KO\")}</td>\r\n                    <td style={{textAlign : \"right\" }}>{row.harga_rata.toLocaleString(\"kr-KO\")}</td>\r\n                    <td>{(row.status_valid === \"CANC\") ? \"PEMBATALAN\" : \"PEMBELIAN\"}</td>\r\n                  </tr>\r\n                ))}\r\n                {/* <tr>\r\n                  <td\r\n                    colSpan=\"7\"\r\n                    style={{\r\n                      backgroundColor: \"#E8E5E5\",\r\n                      color: \"#000\",\r\n\r\n                      textAlign: \"center\",\r\n                    }}\r\n                  >\r\n                    Subtotal : {item.detail.length} Transaksi\r\n                  </td>\r\n                  <td\r\n                    style={{\r\n                      backgroundColor: \"#E8E5E5\",\r\n                      color: \"#000\",\r\n                  textAlign: \"right\",\r\n\r\n                    }}\r\n                  >\r\n                    {\" \"}\r\n                    {formatGram(item.detail\r\n                      .map((list) => list.berat_nota)\r\n                      .reduce((a, b) => a + b, 0),3)}{\" \"}\r\n                  </td>\r\n                  <td\r\n                    style={{\r\n                      backgroundColor: \"#E8E5E5\",\r\n                      color: \"#000\",\r\n                  textAlign: \"right\",\r\n\r\n                    }}\r\n                  >\r\n                    {\" \"}\r\n                    {formatGram(item.detail\r\n                      .map((list) => list.berat)\r\n                      .reduce((a, b) => a + b, 0),3)}{\" \"}\r\n                  </td>\r\n                  <td\r\n                    style={{\r\n                      backgroundColor: \"#E8E5E5\",\r\n                      color: \"#000\",\r\n                  textAlign: \"right\",\r\n\r\n                    }}\r\n                  >\r\n                    {\" \"}\r\n                    {item.detail\r\n                      .map((list) => list.harga_nota)\r\n                      .reduce((a, b) => a + b, 0).toLocaleString(\"kr-KO\")}{\" \"}\r\n                  </td>\r\n                  <td\r\n                    style={{\r\n                      backgroundColor: \"#E8E5E5\",\r\n                      color: \"#000\",\r\n                  textAlign: \"right\",\r\n\r\n                    }}\r\n                  >\r\n                    {\" \"}\r\n                    {item.detail\r\n                      .map((list) => list.harga)\r\n                      .reduce((a, b) => a + b, 0).toLocaleString(\"kr-KO\")}{\" \"}\r\n                  </td>\r\n                  <td\r\n                    style={{\r\n                      backgroundColor: \"#E8E5E5\",\r\n                      color: \"#000\",\r\n                  textAlign: \"right\",\r\n\r\n                    }}\r\n                  >\r\n                    {\" \"}\r\n                    {item.detail\r\n                      .map((list) => list.harga_rata)\r\n                      .reduce((a, b) => a + b, 0).toLocaleString(\"kr-KO\")}{\" \"}\r\n                  </td>\r\n                 \r\n                </tr> */}\r\n              </>\r\n            ))}\r\n          </tbody>\r\n          <tfoot>\r\n            <tr>\r\n              <td\r\n                colSpan=\"7\"\r\n                style={{\r\n                  backgroundColor: \"#E8E5E5\",\r\n                  color: \"#000\",\r\n\r\n                  textAlign: \"center\",\r\n                }}\r\n              >\r\n                Grand Total : {total_barang} Transaksi\r\n              </td>\r\n              <td\r\n                style={{\r\n                  backgroundColor: \"#E8E5E5\",\r\n                  color: \"#000\",\r\n                  textAlign: \"right\",\r\n                }}\r\n              >\r\n                {formatGram(total_berat_nota,3)}\r\n              </td>\r\n              <td\r\n                style={{\r\n                  backgroundColor: \"#E8E5E5\",\r\n                  color: \"#000\",\r\n                  textAlign: \"right\",\r\n\r\n                }}\r\n              >\r\n                {formatGram(total_berat,3)}\r\n              </td>\r\n              <td\r\n                style={{\r\n                  backgroundColor: \"#E8E5E5\",\r\n                  color: \"#000\",\r\n                  textAlign: \"right\",\r\n\r\n                }}\r\n              >\r\n                {total_harga_nota.toLocaleString(\"kr-KO\")}\r\n              </td>\r\n              <td\r\n                style={{\r\n                  backgroundColor: \"#E8E5E5\",\r\n                  color: \"#000\",\r\n                  textAlign: \"right\",\r\n\r\n                }}\r\n              >\r\n                {total_harga.toLocaleString(\"kr-KO\")}\r\n              </td>\r\n              <td\r\n                style={{\r\n                  backgroundColor: \"#E8E5E5\",\r\n                  color: \"#000\",\r\n                  textAlign: \"right\",\r\n\r\n                }}\r\n              >\r\n                {total_harga_rata.toLocaleString(\"kr-KO\")}\r\n              </td>\r\n              \r\n            </tr>\r\n          </tfoot>\r\n        </table>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default ExportTransaksiPembelianPdfHistory;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { InputDate, ReanderSelect } from \"../../../../components/helpers/field\";\r\nimport {\r\n  formatGram,\r\n  getTglSystem,\r\n} from \"../../../../components/helpers/function\";\r\nimport Tabel from \"../../../../components/helpers/tabel\";\r\nimport ValidasiLaporanKeuangan from \"../../../../Validasi/LaporanKeuangan/ValidasiLaporanKeuangan\";\r\nimport ExportTransaksiPembelian from \"./pdf/ExportTransaksiPembelianHistory\";\r\nimport Loading from \"react-fullscreen-loading\";\r\nimport ExportTransaksiPembelianPdfHistory from \"./exel/ExportTransaksiPembelianPdfHistory\";\r\nimport { GetDataGroup, getKondisiPembelian } from \"../../../../actions/datamaster_action\";\r\nclass HeadFormLaporanPembelianBarangHistory extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      date: new Date(),\r\n      type: \"SEMUA\",\r\n    };\r\n    this.setStartDate = this.setStartDate.bind(this);\r\n    this.setLastDate = this.setLastDate.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.change(\"type\", \"SELISIH\");\r\n    this.props.dispatch(getKondisiPembelian());\r\n    this.props.dispatch(GetDataGroup());\r\n    this.props.change(\"kode_group\", \"ALL\");\r\n    this.props.change(\"jenis_group\", \"ALL\");\r\n    this.props.change(\"kondisi\", \"ALL\");\r\n  }\r\n  exportPdf() {\r\n    ExportTransaksiPembelian(this.props.LaporanTransaksiPembelian);\r\n  }\r\n  setStartDate(date) {\r\n    this.setState({\r\n      tgl_awal: new Date(date),\r\n    });\r\n  }\r\n  setLastDate(date) {\r\n    this.setState({\r\n      tgl_akhir: new Date(date),\r\n    });\r\n  }\r\n  render() {\r\n    let kondisi = [\r\n      {\r\n        value: \"ALL\",\r\n        name: \"SEMUA\",\r\n      },\r\n    ];\r\n    this.props.datakondisi.forEach((list) => {\r\n      let row = {\r\n        name: list.kondisi_barang,\r\n        value: list.kondisi_barang,\r\n      };\r\n      kondisi.push(row);\r\n    });\r\n    let datagroup = [\r\n      {\r\n        value: \"ALL\",\r\n        name: \"SEMUA\",\r\n      },\r\n    ];\r\n    this.props.GetDataGroup.forEach((list) => {\r\n      let row = {\r\n        name: list.kode_group,\r\n        value: list.kode_group,\r\n      };\r\n      datagroup.push(row);\r\n    });\r\n    let databarang = [];\r\n    let berat = 0;\r\n    let ongkos = 0;\r\n    let harga = 0;\r\n    let harga_nota = 0;\r\n    let harga_gram = 0;\r\n    let berat_nota = 0;\r\n    this.props.LaporanTransaksiPembelian.forEach((element) => {\r\n      element.detail.forEach((detail) => {\r\n        databarang.push(detail);\r\n        berat_nota = berat_nota + detail.berat_nota;\r\n        berat = berat + detail.berat;\r\n        ongkos = ongkos + detail.ongkos;\r\n        harga = harga + detail.harga;\r\n        harga_nota = harga_nota + detail.harga_nota;\r\n        harga_gram = harga_gram + detail.harga_gram;\r\n      });\r\n    });\r\n    const columns = [\r\n      {\r\n        dataField: \"no_faktur_beli\",\r\n        text: \"No FB\",\r\n        footerAttrs: {\r\n          colSpan: \"5\",\r\n        },\r\n        footer: (cell, row, num, index) => {\r\n          return <div>Total Transaksi : {databarang.length} </div>;\r\n        },\r\n      },\r\n      {\r\n        dataField: \"kode_sales\",\r\n        text: \"Kode Sales\",\r\n      },\r\n      {\r\n        dataField: \"kode_member\",\r\n        text: \"Kode Member\",\r\n      },\r\n      {\r\n        dataField: \"nama_customer\",\r\n        text: \"Nama Member\",\r\n      },\r\n      {\r\n        dataField: \"nama_barang\",\r\n        text: \"Nama Barang\",\r\n      },\r\n      {\r\n        dataField: \"kondisi\",\r\n        text: \"Kondisi\",\r\n        footer: \"\",\r\n      },\r\n\r\n      {\r\n        dataField: \"berat_nota\",\r\n        text: \"Berat Nota\",\r\n        headerClasses: \"text-right\",\r\n        formatter: (cell) => {\r\n          return <div className=\"text-right\"> {formatGram(cell, 3)} </div>;\r\n        },\r\n      },\r\n      {\r\n        dataField: \"berat\",\r\n        text: \"Berat\",\r\n        headerClasses: \"text-right\",\r\n        formatter: (cell) => {\r\n          return <div className=\"text-right\"> {formatGram(cell, 3)} </div>;\r\n        },\r\n      },\r\n      {\r\n        dataField: \"harga_nota\",\r\n        text: \"Harga Nota\",\r\n        headerClasses: \"text-right\",\r\n        formatter: (cell) => {\r\n          return (\r\n            <div className=\"text-right\">{cell.toLocaleString(\"kr-KO\")}</div>\r\n          );\r\n        },\r\n      },\r\n\r\n      {\r\n        dataField: \"harga\",\r\n        text: \"Harga\",\r\n        headerClasses: \"text-right\",\r\n        style: (cell, row, rowIndex, colIndex) => {\r\n          if (row.status_valid === \"CANC\") {\r\n            return {\r\n              backgroundColor: \"#F6A6AD\",\r\n            };\r\n          }\r\n          return {\r\n            backgroundColor: \"#c8e6c9\",\r\n          };\r\n        },\r\n        formatter: (cell) => {\r\n          return (\r\n            <div className=\"text-right\">{cell.toLocaleString(\"kr-KO\")}</div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        dataField: \"status_valid\",\r\n        text: \"Status\",\r\n        headerClasses: \"text-left\",\r\n        style: (cell, row, rowIndex, colIndex) => {\r\n          if (row.status_valid === \"CANC\") {\r\n            return {\r\n              backgroundColor: \"#F6A6AD\",\r\n            };\r\n          }\r\n          return {\r\n            backgroundColor: \"#c8e6c9\",\r\n          };\r\n        },\r\n        formatter: (cell) => {\r\n          return cell === \"CANC\" ? \"BATAL PEMBELIAN\" : \"PEMBELIAN\";\r\n        },\r\n      },\r\n    ];\r\n    return (\r\n      <form onSubmit={this.props.handleSubmit} autoComplete=\"off\">\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-4\">\r\n            <Field\r\n              name=\"tgl_awal\"\r\n              component={InputDate}\r\n              label=\"Tanggal Dari\"\r\n              type=\"text\"\r\n              selected={this.state.tgl_awal}\r\n              onChange={(date) => this.setStartDate(date)}\r\n              placeholder=\"Masukan Tanggal Dari\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"col-lg-4\">\r\n            <Field\r\n              name=\"tgl_akhir\"\r\n              component={InputDate}\r\n              type=\"text\"\r\n              selected={this.state.tgl_akhir}\r\n              onChange={(date) => this.setLastDate(date)}\r\n              label=\"Tanggal Akhir\"\r\n              placeholder=\"Masukan Tanggal Akhir\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"col-lg-4\">\r\n            <Field\r\n              name=\"kode_group\"\r\n              component={ReanderSelect}\r\n              options={datagroup}\r\n              onChange={(e) => this.setState({ kode_group: e })}\r\n              label=\"Kode Group\"\r\n              placeholder=\"Pilih Kode Group\"\r\n            />\r\n          </div>\r\n          <div className=\"col-lg-4\">\r\n            <Field\r\n              name=\"jenis_group\"\r\n              component={ReanderSelect}\r\n              options={[\r\n                {\r\n                  value: \"ALL\",\r\n                  name: \"SEMUA\",\r\n                },\r\n                {\r\n                  value: \"MUDA\",\r\n                  name: \"MUDA\",\r\n                },\r\n                {\r\n                  value: \"TUA\",\r\n                  name: \"TUA\",\r\n                },\r\n              ]}\r\n              label=\"Jenis Group\"\r\n              placeholder=\"Pilih Jenis Group\"\r\n            />\r\n          </div>\r\n          <div className=\"col-lg-4\">\r\n            <Field\r\n              name=\"kondisi\"\r\n              component={ReanderSelect}\r\n              options={kondisi}\r\n              label=\"Kondisi\"\r\n              placeholder=\"Pilih Kondisi\"\r\n            />\r\n          </div>\r\n          <div className=\"col-lg-4\">\r\n            <div className=\"text-right\">\r\n              <label>&nbsp;</label>\r\n              <button\r\n                type=\"submit\"\r\n                value=\"PDF\"\r\n                name=\"type_btn\"\r\n                className=\"btn btn-primary btn-block\"\r\n              >\r\n                {this.props.isLoading ? (\r\n                  <>\r\n                    <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Sedang\r\n                    Mencari\r\n                  </>\r\n                ) : (\r\n                  \"Cari Laporan\"\r\n                )}\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"col-lg-12\">\r\n            <Tabel\r\n              keyField=\"kode_barcode\"\r\n              data={this.props.export ? databarang : []}\r\n              columns={columns}\r\n              empty={true}\r\n              textEmpty=\"Data Laporan Transaksi Pembelian Kosong\"\r\n            />\r\n          </div>\r\n          <div className={this.props.export ? \"col-lg-12\" : \"col-lg-12 d-none\"}>\r\n            {/* <label htmlFor=\"\">&nbsp;</label> */}\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-6\">\r\n                <button\r\n                  onClick={() => this.exportPdf()}\r\n                  className=\"btn btn-warning btn-block\"\r\n                >\r\n                  {\" \"}\r\n                  Export PDF{\" \"}\r\n                </button>\r\n              </div>\r\n              <div className=\"col-lg-6\">\r\n                <ExportTransaksiPembelianPdfHistory\r\n                  data={this.props.LaporanTransaksiPembelian}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {this.props.isLoading ? (\r\n          <Loading\r\n            loading\r\n            background=\"rgba(0, 0, 0, 0.35)\"\r\n            loaderColor=\"rgba(94, 147, 117, 1)\"\r\n          />\r\n        ) : null}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nHeadFormLaporanPembelianBarangHistory = reduxForm({\r\n  form: \"HeadFormLaporanPembelianBarangHistory\",\r\n  enableReinitialize: true,\r\n  validate: ValidasiLaporanKeuangan,\r\n})(HeadFormLaporanPembelianBarangHistory);\r\n// export default connect(null)(HeadFormLaporanPembelianBarangHistory);\r\nexport default connect((state) => {\r\n  return {\r\n    GetDataGroup: state.datamaster.GetDataGroup,\r\n    datakondisi: state.datamaster.getKondisiPembelian,\r\n    initialValues: {\r\n      tgl_awal: getTglSystem(),\r\n      tgl_akhir: getTglSystem(),\r\n    },\r\n  };\r\n})(HeadFormLaporanPembelianBarangHistory);\r\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n/* global window, document, Blob */\n\n\nvar propTypes = {\n  table: _propTypes2.default.string.isRequired,\n  filename: _propTypes2.default.string.isRequired,\n  sheet: _propTypes2.default.string.isRequired,\n  id: _propTypes2.default.string,\n  className: _propTypes2.default.string,\n  buttonText: _propTypes2.default.string\n};\nvar defaultProps = {\n  id: 'button-download-as-xls',\n  className: 'button-download',\n  buttonText: 'Download'\n};\n\nvar ReactHTMLTableToExcel = function (_Component) {\n  _inherits(ReactHTMLTableToExcel, _Component);\n\n  function ReactHTMLTableToExcel(props) {\n    _classCallCheck(this, ReactHTMLTableToExcel);\n\n    var _this = _possibleConstructorReturn(this, (ReactHTMLTableToExcel.__proto__ || Object.getPrototypeOf(ReactHTMLTableToExcel)).call(this, props));\n\n    _this.handleDownload = _this.handleDownload.bind(_this);\n    return _this;\n  }\n\n  _createClass(ReactHTMLTableToExcel, [{\n    key: 'handleDownload',\n    value: function handleDownload() {\n      if (!document) {\n        if (process.env.NODE_ENV !== 'production') {\n          console.error('Failed to access document object');\n        }\n\n        return null;\n      }\n\n      if (document.getElementById(this.props.table).nodeType !== 1 || document.getElementById(this.props.table).nodeName !== 'TABLE') {\n        if (process.env.NODE_ENV !== 'production') {\n          console.error('Provided table property is not html table element');\n        }\n\n        return null;\n      }\n\n      var table = document.getElementById(this.props.table).outerHTML;\n      var sheet = String(this.props.sheet);\n      var filename = String(this.props.filename) + '.xls';\n      var uri = 'data:application/vnd.ms-excel;base64,';\n      var template = '<html xmlns:o=\"urn:schemas-microsoft-com:office:office\" xmlns:x=\"urn:schemas-mic' + 'rosoft-com:office:excel\" xmlns=\"http://www.w3.org/TR/REC-html40\"><head><meta cha' + 'rset=\"UTF-8\"><!--[if gte mso 9]><xml><x:ExcelWorkbook><x:ExcelWorksheets><x:Exce' + 'lWorksheet><x:Name>{worksheet}</x:Name><x:WorksheetOptions><x:DisplayGridlines/>' + '</x:WorksheetOptions></x:ExcelWorksheet></x:ExcelWorksheets></x:ExcelWorkbook></' + 'xml><![endif]--></head><body>{table}</body></html>';\n      var context = {\n        worksheet: sheet || 'Worksheet',\n        table: table\n      }; // If IE11\n\n      if (window.navigator.msSaveOrOpenBlob) {\n        var fileData = ['' + ('<html xmlns:o=\"urn:schemas-microsoft-com:office:office\" xmlns:x=\"urn:schemas-mic' + 'rosoft-com:office:excel\" xmlns=\"http://www.w3.org/TR/REC-html40\"><head><meta cha' + 'rset=\"UTF-8\"><!--[if gte mso 9]><xml><x:ExcelWorkbook><x:ExcelWorksheets><x:Exce' + 'lWorksheet><x:Name>{worksheet}</x:Name><x:WorksheetOptions><x:DisplayGridlines/>' + '</x:WorksheetOptions></x:ExcelWorksheet></x:ExcelWorksheets></x:ExcelWorkbook></' + 'xml><![endif]--></head><body>') + table + '</body></html>'];\n        var blobObject = new Blob(fileData);\n        document.getElementById('react-html-table-to-excel').click()(function () {\n          window.navigator.msSaveOrOpenBlob(blobObject, filename);\n        });\n        return true;\n      }\n\n      var element = window.document.createElement('a');\n      element.href = uri + ReactHTMLTableToExcel.base64(ReactHTMLTableToExcel.format(template, context));\n      element.download = filename;\n      document.body.appendChild(element);\n      element.click();\n      document.body.removeChild(element);\n      return true;\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      return _react2.default.createElement('button', {\n        id: this.props.id,\n        className: this.props.className,\n        type: 'button',\n        onClick: this.handleDownload\n      }, this.props.buttonText);\n    }\n  }], [{\n    key: 'base64',\n    value: function base64(s) {\n      return window.btoa(unescape(encodeURIComponent(s)));\n    }\n  }, {\n    key: 'format',\n    value: function format(s, c) {\n      return s.replace(/{(\\w+)}/g, function (m, p) {\n        return c[p];\n      });\n    }\n  }]);\n\n  return ReactHTMLTableToExcel;\n}(_react.Component);\n\nReactHTMLTableToExcel.propTypes = propTypes;\nReactHTMLTableToExcel.defaultProps = defaultProps;\nexports.default = ReactHTMLTableToExcel;","const ValidasiLaporanKeuangan = (value, event) => {\r\n    const errors = {};\r\n    // console.log(event.charCode==13);\r\n    if (!value.tanggal_awal) {\r\n      errors.tanggal_awal = \"Tanggal Tidak Boleh Kosong\";\r\n    }\r\n    if (!value.type) {\r\n      errors.type = \"Type Tidak Boleh Kosong\";\r\n    }\r\n    if (!value.type_laporan) {\r\n      errors.type_laporan = \"Type Laporan Tidak Boleh Kosong\";\r\n    }\r\n    return errors;\r\n  };\r\n  \r\n  export default ValidasiLaporanKeuangan;\r\n  "],"sourceRoot":""}