{"version":3,"sources":["pages/Laporan/LaporanBarang/LaporanTerimaBarang/exel/LaporanTerimaBarangExel.jsx","pages/Laporan/LaporanBarang/LaporanTerimaBarang/pdf/LaporanTerimaBarangPdf.jsx","pages/Laporan/LaporanBarang/LaporanTerimaBarang/HeadLaporanTerimaBarang.jsx","pages/Laporan/LaporanBarang/LaporanTerimaBarang/FormLaporanTerimaBarang.jsx","../node_modules/react-html-table-to-excel/index.js","Validasi/ValidasiTanggalLaporan.jsx"],"names":["LaporanTerimaBarangExel","props","_this","Object","classCallCheck","this","_super","call","state","berat","berat_atribut","data","forEach","barang","index","detail","item","stock_on_hand","length","react_default","a","createElement","Fragment","react_html_table_to_excel_default","id","className","table","filename","sheet","buttonText","rowkey","style","display","colSpan","localStoragedecryp","JSON","parse","tgl_awal","tgl_akhir","getUserdata","nama_toko","alamat_toko","backgroundColor","color","map","no","row","textAlign","tgl_terima","kode_barang","kode_barcode","kode_intern","nama_barang","kode_gudang","kode_toko","nama_atribut","toFixed","Component","LaporanTerimaBarangPdf","arguments","undefined","doc","jsPDF","tableRows","finalY","grantotalberat","grantotalberatatr","setFontSize","text","jml_alamat","slice","setProperties","title","concat","i","rows","content","halign","push","parseFloat","footer","styles","fillColor","textColor","printed","user_id","getToday","fontStyle","autoTable","head","body","foot","startY","theme","rowPageBreak","margin","top","headStyles","autoTableEndPosY","pages","internal","getNumberOfPages","pageWidth","pageSize","width","pageHeight","height","j","horizontalPos","verticalPos","setPage","align","string","output","x","window","open","document","write","HeadLaporanTerimaBarang","date","Date","handleSubmit","bind","assertThisInitialized","setStartDate","setLastDate","console","log","dataterimabarang","setState","_this2","databarang","element","columns","dataField","footerAttrs","cell","num","formatter","onSubmit","autoComplete","Field","name","component","InputDate","label","type","selected","onChange","placeholder","export","value","isLoading","tabel","keyField","empty","textEmpty","onClick","exportPdf","exel_LaporanTerimaBarangExel","loading_default","loading","background","loaderColor","reduxForm","form","enableReinitialize","validate","ValidasiTanggalLaporan","connect","initialValues","getTglSystem","FormLaporanTerimaBarang","isEdit","modalDialog","data_post","formatDate","moment","format","postDataNoTImeOut","then","res","ToastNotification","localStorageencryp","stringify","catch","err","_this3","react_router_dom","to","panel","LaporanTerimaBarang_HeadLaporanTerimaBarang","React","hideModal","datamaster","defineProperty","exports","_createClass","defineProperties","target","descriptor","enumerable","configurable","writable","key","Constructor","protoProps","staticProps","prototype","_react","__webpack_require__","_react2","_interopRequireDefault","_propTypes2","obj","__esModule","default","propTypes","isRequired","ReactHTMLTableToExcel","_Component","instance","TypeError","_classCallCheck","self","ReferenceError","_possibleConstructorReturn","__proto__","getPrototypeOf","handleDownload","subClass","superClass","create","constructor","setPrototypeOf","_inherits","getElementById","nodeType","nodeName","outerHTML","String","context","worksheet","navigator","msSaveOrOpenBlob","blobObject","Blob","click","href","base64","download","appendChild","removeChild","s","btoa","unescape","encodeURIComponent","c","replace","m","p","defaultProps","event","errors"],"mappings":"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","file":"static/js/33.b99cc1c3.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport ReactHTMLTableToExcel from \"react-html-table-to-excel\";\r\nimport { getUserdata, localStoragedecryp } from \"../../../../../components/helpers/function\";\r\n\r\nclass LaporanTerimaBarangExel extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  render() {\r\n    // const total = this.props.data.map((row) =>\r\n    // row.detail.map((key) => key.stock_on_hand).reduce((a, b) => a + b, 0)\r\n    // )\r\n\r\n    let stock_on_hand = 0;\r\n    let berat = 0;\r\n    let berat_atribut = 0;\r\n    let total_barang = 0;\r\n    this.props.data.forEach((barang, index) => {\r\n      barang.detail.forEach((item, index) => {\r\n        stock_on_hand = stock_on_hand + item.stock_on_hand;\r\n        berat_atribut = berat_atribut + item.berat_atribut;\r\n        berat = berat + item.berat;\r\n      });\r\n      total_barang = total_barang + barang.detail.length;\r\n    });\r\n    return (\r\n      <>\r\n        <ReactHTMLTableToExcel\r\n          id=\"test-table-xls-button\"\r\n          className=\"btn btn-success btn-block\"\r\n          table=\"table-to-xls\"\r\n          filename=\"Laporan Terima Barang\"\r\n          sheet=\"Laporan Terima Barang\"\r\n          buttonText=\"Export Exel\"\r\n        />\r\n        <table\r\n          rowkey=\"kode_member\"\r\n          id=\"table-to-xls\"\r\n          style={{ display: \"none\" }}\r\n        >\r\n          <thead>\r\n            <tr>\r\n              <th colSpan=\"10\"> Periode </th>\r\n            </tr>\r\n            <tr>\r\n              <th colSpan=\"10\">\r\n                {\" \"}\r\n                {localStoragedecryp(\"tgl_laporan\").length === 0\r\n                  ? null\r\n                  : JSON.parse(localStoragedecryp(\"tgl_laporan\")).tgl_awal +\r\n                    \"s/d\" +\r\n                    JSON.parse(localStoragedecryp(\"tgl_laporan\"))\r\n                      .tgl_akhir}{\" \"}\r\n              </th>\r\n            </tr>\r\n            <tr>\r\n              <th colSpan=\"10\"> TOKO :  {getUserdata().nama_toko} </th>\r\n            </tr>\r\n           \r\n            <tr>\r\n              <th colSpan=\"10\"> ALAMAT :  {getUserdata().alamat_toko} </th>\r\n            </tr>\r\n            <tr>\r\n              <th colSpan=\"10\"></th>\r\n            </tr>\r\n            <tr>\r\n              <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>\r\n                NO\r\n              </th>\r\n              <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>\r\n                TANGGAL TERIMA\r\n              </th>\r\n              <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>\r\n                KODE BARANG\r\n              </th>\r\n              <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>\r\n                KODE BARCODE\r\n              </th>\r\n              <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>\r\n                KODE INTERN\r\n              </th>\r\n              <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>\r\n                NAMA BARANG\r\n              </th>\r\n              <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>\r\n                KODE GUDANG\r\n              </th>\r\n              <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>\r\n                KODE TOKO\r\n              </th>\r\n              <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>\r\n                BERAT\r\n              </th>\r\n              <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>\r\n                NAMA ATRIBUT\r\n              </th>\r\n              <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>\r\n                BERAT ATRIBUT\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.props.data.map((item, no) => (\r\n              <>\r\n                {/* <>\r\n                  <tr>\r\n                    <th style={{ textAlign: \"left\" }}> No Terima </th>\r\n                    <th colSpan=\"9\" style={{ textAlign: \"left\" }}>\r\n                      {\" \"}\r\n                      {item._id.no_terima}{\" \"}\r\n                    </th>\r\n                  </tr>\r\n                </> */}\r\n                {item.detail.map((row, index) => (\r\n                  <>\r\n                    <tr>\r\n                      <td style={{textAlign : \"center\"}}> {++no}</td>\r\n                      <td style={{textAlign : \"center\"}}> {row.tgl_terima}</td>\r\n                      <td> {row.kode_barang}</td>\r\n                      <td style={{textAlign : \"center\"}}> {row.kode_barcode}</td>\r\n                      <td> {row.kode_intern}</td>\r\n                      <td> {row.nama_barang}</td>\r\n                      <td style={{textAlign : \"center\"}}> {row.kode_gudang}</td>\r\n                      <td style={{textAlign : \"center\"}}> {row.kode_toko}</td>\r\n                      <td> {row.berat}</td>\r\n                      <td> {row.nama_atribut}</td>\r\n                      <td> {row.berat_atribut}</td>\r\n                    </tr>\r\n                  </>\r\n                ))}\r\n              </>\r\n            ))}\r\n          </tbody>\r\n          <tfoot>\r\n            <tr>\r\n              <th\r\n                colSpan=\"8\"\r\n                style={{\r\n                  backgroundColor: \"#E8E5E5\",\r\n                  color: \"#000\",\r\n                  textAlign: \"center\",\r\n                }}\r\n              >\r\n                {\" \"}\r\n                Total{\" \"}\r\n              </th>\r\n              <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\",textAlign : \"right\" }}>\r\n                {berat.toFixed(3)}\r\n              </th>\r\n              <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}> </th>\r\n              <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\",textAlign : \"right\"  }}>\r\n                {berat_atribut}\r\n              </th>\r\n            </tr>\r\n            {/* <tr>\r\n              <th\r\n                colSpan=\"10\"\r\n                style={{\r\n                  backgroundColor: \"#E8E5E5\",\r\n                  color: \"#000\",\r\n                  textAlign: \"left\",\r\n                }}\r\n              >\r\n                Total Brang : {total_barang} Pcs\r\n                <br />\r\n                Total Berat : {berat.toFixed(3)} <br />\r\n                Total Berat Atribut : {berat_atribut}\r\n              </th>\r\n            </tr> */}\r\n          </tfoot>\r\n        </table>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default LaporanTerimaBarangExel;\r\n","import jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\nimport {\r\n  getToday,\r\n  getUserdata,\r\n  localStoragedecryp,\r\n} from \"../../../../../components/helpers/function\";\r\n// Date Fns is used to format the dates we receive\r\n\r\n// define a generatePDF function that accepts a tickets argument\r\nconst LaporanTerimaBarangPdf = (\r\n  data = \"\",\r\n  username = \"\",\r\n  tanggal_dari = \"\",\r\n  tanggal_sampai = \"\"\r\n) => {\r\n  // initialize jsPDF\r\n  const doc = new jsPDF(\"l\", \"mm\", [297, 210]);\r\n  //   let data = JSON.parse(localStorage.getItem(\"tt_pengeluaran_barang\")) || [];\r\n  let tableRows = [];\r\n  let footRows = [];\r\n  let finalY = 30;\r\n\r\n  let grandtotalqty = 0;\r\n  let grantotalberat = 0;\r\n  let grantotalberatatr = 0;\r\n  let total_barang = 0;\r\n\r\n  doc.setFontSize(15);\r\n  doc.text(\"LAPORAN TERIMA BARANG\", 14, 15);\r\n  doc.setFontSize(20);\r\n  doc.text(getUserdata().nama_toko, 200, 15);\r\n  doc.setFontSize(8);\r\n  let jml_alamat = getUserdata().alamat_toko.length;\r\n  if (jml_alamat > 20) {\r\n    doc.text(getUserdata().alamat_toko.slice(0,48), 200, 20);\r\n  }\r\n  if (jml_alamat > 50) {\r\n    doc.text(getUserdata().alamat_toko.slice(48,90), 200, 25);\r\n  }\r\n  doc.setFontSize(10);\r\n  doc.setProperties({\r\n    title: \"Laporan Terima Barang\",\r\n  });\r\n  doc.text(\r\n    `PERIODE : ${\r\n      localStoragedecryp(\"tgl_laporan\").length === 0\r\n        ? null\r\n        : JSON.parse(localStoragedecryp(\"tgl_laporan\")).tgl_awal +\r\n          \" s/d \" +\r\n          JSON.parse(localStoragedecryp(\"tgl_laporan\")).tgl_akhir\r\n    }`,\r\n    14,\r\n    25\r\n  );\r\n  let tableColumn = [\r\n    // [\r\n    //   {\r\n    //     content: `NO TERIMA : ${item._id.no_terima}`,\r\n    //     colSpan: 9,\r\n    //   },\r\n    // ],\r\n    [\r\n      {\r\n        content: `NO`,\r\n      },\r\n      {\r\n        content: `TANGGAL TERIMA`,\r\n      },\r\n      {\r\n        content: `KODE BARANG`,\r\n      },\r\n      {\r\n        content: `KODE BARCODE`,\r\n      },\r\n      {\r\n        content: `KODE INTERN`,\r\n      },\r\n      {\r\n        content: `NAMA BARANG`,\r\n      },\r\n      {\r\n        content: `KODE GUDANG`,\r\n      },\r\n      {\r\n        content: `KODE BAKI`,\r\n      },\r\n      {\r\n        content: `BERAT`,\r\n      },\r\n      {\r\n        content: `NAMA ATRIBUTE`,\r\n      },\r\n      {\r\n        content: `BERAT ATRIBUTE`,\r\n      },\r\n      // {\r\n      //   content: `STOCK ON HAND`,\r\n      // },\r\n    ],\r\n  ];\r\n  let i = 1;\r\n  data.forEach((item, no) => {\r\n    let sub_qty = 0;\r\n    let berat_atribut = 0;\r\n    let sub_berat = 0;\r\n\r\n    // let data = [\r\n    //   {\r\n    //     content: `NO TERIMA : ${item._id.no_terima}`,\r\n    //     colSpan: \"9\",\r\n    //   },\r\n    // ];\r\n    // tableRows.push(data);\r\n    item.detail.forEach((barang, index) => {\r\n      let rows = [\r\n        i,\r\n        {\r\n          content: barang.tgl_terima,\r\n          style : {\r\n            halign : 'center'\r\n          }\r\n        },\r\n        barang.kode_barang,\r\n        barang.kode_barcode,\r\n        barang.kode_intern,\r\n        barang.nama_barang,\r\n        barang.kode_gudang,\r\n        barang.kode_toko,\r\n        barang.berat.toFixed(3),\r\n        barang.nama_atribut,\r\n        barang.berat_atribut.toFixed(3),\r\n        // barang.stock_on_hand,\r\n      ];\r\n      tableRows.push(rows);\r\n\r\n      sub_qty = sub_qty + parseFloat(barang.stock_on_hand);\r\n      berat_atribut = berat_atribut + parseFloat(barang.berat_atribut);\r\n      sub_berat = sub_berat + parseFloat(barang.berat);\r\n\r\n      grandtotalqty = grandtotalqty + parseFloat(barang.stock_on_hand);\r\n      grantotalberat = grantotalberat + parseFloat(barang.berat);\r\n      grantotalberatatr = grantotalberatatr + parseFloat(barang.berat_atribut);\r\n      ++i\r\n    });\r\n    total_barang = total_barang + item.detail.length;\r\n\r\n    // let total = [\r\n    //   {\r\n    //     content: `Total`,\r\n    //     colSpan: 7,\r\n    //     styles: {\r\n    //       halign: 'center',\r\n    //       fillColor: \"#E8E5E5\",\r\n    //       textColor: \"#000\",\r\n    //     },\r\n    //   },\r\n    //   {\r\n    //     content: `${sub_berat.toFixed(3)}`,\r\n    //     styles: {\r\n    //       fillColor: \"#E8E5E5\",\r\n    //       textColor: \"#000\",\r\n    //     },\r\n    //   },\r\n    //   {\r\n    //     content: ``,\r\n    //     styles: {\r\n    //       fillColor: \"#E8E5E5\",\r\n    //       textColor: \"#000\",\r\n    //     },\r\n    //   },\r\n    //   {\r\n    //     content: `${berat_atribut.toFixed(3)}`,\r\n    //     styles: {\r\n    //       fillColor: \"#E8E5E5\",\r\n    //       textColor: \"#000\",\r\n    //     },\r\n    //   },\r\n    //   // {\r\n    //   //   content: `Total`,\r\n    //   //   colSpan: 7,\r\n    //   // },\r\n    //   // `${sub_berat.toFixed(3)}`,\r\n    //   // \"\",\r\n    //   // `${berat_atribut.toFixed(3)}`,\r\n    //   // `${sub_qty}`,\r\n    // ];\r\n    // tableRows.push(total);\r\n  });\r\n\r\n  let footer = [\r\n    {\r\n      content: `Total `,\r\n      colSpan: 8,\r\n      styles: {\r\n        halign: 'center',\r\n        fillColor: \"#E8E5E5\",\r\n        textColor: \"#000\",\r\n      },\r\n    },\r\n    {\r\n      content: `${grantotalberat.toFixed(3)}`,\r\n      styles: {\r\n        fillColor: \"#E8E5E5\",\r\n        textColor: \"#000\",\r\n      },\r\n    },\r\n    {\r\n      content: ``,\r\n      styles: {\r\n        fillColor: \"#E8E5E5\",\r\n        textColor: \"#000\",\r\n      },\r\n    },\r\n    {\r\n      content: `${grantotalberatatr.toFixed(3)}`,\r\n      styles: {\r\n        fillColor: \"#E8E5E5\",\r\n        textColor: \"#000\",\r\n      },\r\n    },\r\n    // {\r\n    //   content: `Total Barang : ${total_barang} Pcs\\nTotal Berat : ${grantotalberat.toFixed(\r\n    //     3\r\n    //   )}\\nTotal Berat Atribut : ${grantotalberatatr.toFixed(3)}`,\r\n    //   colSpan: 10,\r\n    //   styles: {\r\n    //     fillColor: \"#E8E5E5\",\r\n    //     textColor: \"#000\",\r\n    //   },\r\n    // },\r\n  ];\r\n\r\n  tableRows.push(footer);\r\n  let printed = [\r\n    {\r\n      colSpan:9,\r\n      content: `Printed By ${JSON.parse(localStoragedecryp(\"userdata\")).user_id} / ${getToday()}`,\r\n      styles: {\r\n        // lineWidth: 0.1,\r\n        fontStyle: \"italic\",\r\n        textColor: \"#000\",\r\n        // fillColor: \"#E8E5E5\"\r\n      },\r\n    },\r\n  ]\r\n  tableRows.push(printed);\r\n  doc.autoTable({\r\n    head: tableColumn,\r\n    body: tableRows,\r\n    foot: footRows,\r\n    startY: finalY,\r\n    theme: \"plain\",\r\n    rowPageBreak: \"avoid\",\r\n    // pageBreak: \"avoid\",\r\n    margin: { top: 20 },\r\n    // bodyStyles: { lineWidth: 0.02, lineColor: \"#000\" },\r\n    // footStyles: { lineWidth: 0.02, lineColor: \"#000\" },\r\n    headStyles: {\r\n      // lineWidth: 0.02,\r\n      // lineColor: \"#000\",\r\n      fillColor: \"#E8E5E5\",\r\n      textColor: \"#000\",\r\n    },\r\n  });\r\n  finalY = doc.autoTableEndPosY() + 10;\r\n  // tableRows = [];\r\n  // footRows = [];\r\n  // sub_qty = 0;\r\n  // const date = Date().split(\" \");\r\n  // we use a date string to generate our filename.\r\n  // const dateStr = date[2] + date[3] + date[4];\r\n  // ticket title. and margin-top + margin-left\r\n\r\n  // doc.text(\r\n  //   `User \\t\\t\\t:  ${JSON.parse(localStoragedecryp(\"userdata\")).user_id}`,\r\n  //   14,\r\n  //   finalY + 10\r\n  // );\r\n  // doc.text(`Cetak\\t\\t\\t: ${getToday()}`, 14, finalY + 16);\r\n  // doc.text(`Grand Total Qty\\t: ${grandtotalqty}`, 14, finalY + 22);\r\n  // doc.text(\r\n  //   `Grand Total Berat     : ${grantotalberat.toFixed(3)}`,\r\n  //   14,\r\n  //   finalY + 28\r\n  // );\r\n  const pages = doc.internal.getNumberOfPages();\r\n  const pageWidth = doc.internal.pageSize.width; //Optional\r\n  const pageHeight = doc.internal.pageSize.height; //Optional\r\n  doc.setFontSize(10); //Optional\r\n  for (let j = 1; j < pages + 1; j++) {\r\n    let horizontalPos = pageWidth / 2; //Can be fixed number\r\n    let verticalPos = pageHeight - 10; //Can be fixed number\r\n    doc.setPage(j);\r\n    doc.text(`${j} of ${pages}`, horizontalPos, verticalPos, {\r\n      align: \"center\",\r\n    });\r\n  }\r\n  // doc.autoPrint();\r\n  // doc.save(`PenerimaanSUpplier.pdf`);\r\n  var string = doc.output(\"datauristring\");\r\n  var x = window.open();\r\n  x.document.open();\r\n  x.document.write(\r\n    \"<html><head><title>Laporan Terima Barang</title></head><body style='margin:0 !important'><embed width='100%' height='100%'  src=\" +\r\n      string +\r\n      \"></embed></body></html>\"\r\n  );\r\n  // setInterval(() => {\r\n  //   x.close();\r\n  // }, 1000);\r\n};\r\n\r\nexport default LaporanTerimaBarangPdf;\r\n\r\n// import jsPDF from \"jspdf\";\r\n// import \"jspdf-autotable\";\r\n// import { getToday } from \"../../../../components/helpers/function\";\r\n// // Date Fns is used to format the dates we receive\r\n\r\n// // define a generatePDF function that accepts a tickets argument\r\n// const CetakLaporanTerimaBarang = (\r\n//   data = \"\",\r\n//   username = \"\",\r\n//   tanggal_dari = \"\",\r\n//   tanggal_sampai = \"\",\r\n// ) => {\r\n//   const doc = new jsPDF('l');\r\n//   doc.setFontSize(15);\r\n//   doc.text(\"LAPORAN TERIMA BARANG\", 14, 15);\r\n//   doc.setFontSize(10);\r\n//   //row 1\r\n//   doc.text(`PERIODE : ${tanggal_dari} S/d ${tanggal_sampai}`, 14, 25);\r\n//   let tableRows = [];\r\n//   let finalY = 40;\r\n//   let total = 0;\r\n//   let tableColumn = [\r\n//     \"NO\",\r\n//     \"GUDANG\",\r\n//     \"BAKI\",\r\n//     \"KODE BARANG\",\r\n//     \"KODE BARCODE\",\r\n//     \"NAMA BARANG\",\r\n//     \"JUMLAH\",\r\n//     \"BERAT\",\r\n//     \"NAMA ATRIBUTE\",\r\n//     \"BERAT ATRIBUTE\",\r\n//   ];\r\n//   data.forEach((item, index) => {\r\n//       let rows = [\r\n//         ++index,\r\n//         item.kode_gudang,\r\n//         item.kode_toko,\r\n//         item.kode_barang,\r\n//         item.kode_barcode,\r\n//         item.nama_barang,\r\n//         item.stock_on_hand,\r\n//         item.berat,\r\n//         item.nama_atribut,\r\n//         item.berat_atribut,\r\n//     ];\r\n//     total = index;\r\n//     tableRows.push(rows);\r\n\r\n//     doc.autoTable(tableColumn, tableRows, {\r\n//       startY: 40\r\n//     });\r\n\r\n//   });\r\n//    finalY = doc.lastAutoTable.finalY + 10;\r\n//    tableRows = [];\r\n\r\n//   doc.text(`Total Barang\t: ${total}`, 14, finalY + 5);\r\n//   doc.text(`User\t             : ${username}`, 14, finalY + 10);\r\n//   doc.text(`Tgl Cetak             : ${getToday()}`, 14, finalY + 16);\r\n\r\n//   doc.autoPrint();\r\n//   doc.save(`Laporan Terima Barang.pdf`);\r\n// };\r\n\r\n// export default CetakLaporanTerimaBarang;\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { InputDate } from \"../../../../components/helpers/field\";\r\nimport { getTglSystem } from \"../../../../components/helpers/function\";\r\nimport Tabel from \"../../../../components/helpers/tabel\";\r\n// import Tabel from \"../../../../components/helpers/tabel\";\r\nimport ValidasiTanggalLaporan from \"../../../../Validasi/ValidasiTanggalLaporan\";\r\nimport LaporanTerimaBarangExel from \"./exel/LaporanTerimaBarangExel\";\r\n// import LaporanBatalServiceExel from \"./exel/LaporanBatalServiceExel\";\r\nimport LaporanTerimaBarangPdf from \"./pdf/LaporanTerimaBarangPdf\";\r\nimport Loading from 'react-fullscreen-loading';\r\n\r\nclass HeadLaporanTerimaBarang extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      date: new Date(),\r\n    };\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.setStartDate = this.setStartDate.bind(this);\r\n    this.setLastDate = this.setLastDate.bind(this);\r\n  }\r\n\r\n  handleSubmit(data) {\r\n    console.log(data);\r\n  }\r\n  exportPdf() {\r\n    LaporanTerimaBarangPdf(this.props.dataterimabarang);\r\n  }\r\n  setStartDate(date) {\r\n    this.setState({\r\n      tgl_awal: new Date(date),\r\n    });\r\n  }\r\n  setLastDate(date) {\r\n    this.setState({\r\n      tgl_akhir: new Date(date),\r\n    });\r\n  }\r\n\r\n  render() {\r\n    let databarang = [];\r\n    let berat = 0;\r\n    this.props.dataterimabarang.forEach((element) => {\r\n      element.detail.forEach((detail) => {\r\n        databarang.push(detail);\r\n        berat = berat + detail.berat\r\n      });\r\n    });\r\n    const columns = [\r\n  \r\n      {\r\n        dataField: \"tgl_terima\",\r\n        text: \"Tanggal Terima\",\r\n        footerAttrs: {\r\n          colSpan: \"4\",\r\n        },\r\n        footer: (cell, row, num, index) => {\r\n          return <div>Total Barang : {databarang.length} </div>;\r\n        },\r\n      },\r\n      {\r\n        dataField: \"kode_barang\",\r\n        text: \"Kode Barang\",\r\n      },\r\n      {\r\n        dataField: \"kode_barcode\",\r\n        text: \"Kode Barcode\",\r\n      },\r\n\r\n      {\r\n        dataField: \"nama_barang\",\r\n        text: \"Nama Barang\",\r\n      },\r\n     \r\n      {\r\n        dataField: \"berat\",\r\n        text: \"Berat\",\r\n        footer: (cell, row, num, index) => {\r\n          return <div>{berat.toFixed(3)} </div>;\r\n        },\r\n        formatter: (cell) => {\r\n          return cell.toFixed(3);\r\n        },\r\n      }\r\n    ];\r\n    return (\r\n      <form onSubmit={this.props.handleSubmit} autoComplete=\"off\">\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-4\">\r\n            <Field\r\n              name=\"tgl_awal\"\r\n              component={InputDate}\r\n              label=\"Tanggal Dari\"\r\n              type=\"text\"\r\n              selected={this.state.tgl_awal}\r\n              onChange={(date) => this.setStartDate(date)}\r\n              placeholder=\"Masukan Tanggal Dari\"\r\n              // customInput={<CustomeInputDate />}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"col-lg-4\">\r\n            <Field\r\n              name=\"tgl_akhir\"\r\n              component={InputDate}\r\n              type=\"text\"\r\n              selected={this.state.tgl_akhir}\r\n              onChange={(date) => this.setLastDate(date)}\r\n              label=\"Tanggal Akhir\"\r\n              placeholder=\"Masukan Tanggal Akhir\"\r\n            />\r\n          </div>\r\n\r\n          <div className={this.props.export ? \"col-lg-4  d-none\" : \"col-lg-4\"}>\r\n            <div className=\"text-right\">\r\n              <label>&nbsp;</label>\r\n              <button\r\n                type=\"submit\"\r\n                value=\"PDF\"\r\n                name=\"type_btn\"\r\n                className=\"btn btn-primary btn-block\"\r\n              >\r\n                {this.props.isLoading ? (\r\n                  <>\r\n                    <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Sedang\r\n                    Mencari\r\n                  </>\r\n                ) : (\r\n                  \"Cari Laporan\"\r\n                )}\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div className={this.props.export ? \"col-lg-4\" : \"col-lg-4 d-none\"}>\r\n            <div className=\"text-right\">\r\n              <label>&nbsp;</label>\r\n              <button\r\n                type=\"submit\"\r\n                value=\"PDF\"\r\n                name=\"type_btn\"\r\n                className=\"btn btn-primary btn-block\"\r\n              >\r\n                {this.props.isLoading ? (\r\n                  <>\r\n                    <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Sedang\r\n                    Mencari\r\n                  </>\r\n                ) : (\r\n                  \"Cari Laporan\"\r\n                )}\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-12\">\r\n            <Tabel\r\n              keyField=\"kode_gudang\"\r\n              data={this.props.export ? databarang  :  []}\r\n              columns={columns}\r\n              empty={true}\r\n              textEmpty=\"Data Laporan Terima Barang Kosong\"\r\n            />\r\n          </div>\r\n          <div className={this.props.export ? \"col-lg-12\" : \"col-lg-12 d-none\"}>\r\n            {/* <label htmlFor=\"\">&nbsp;</label> */}\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-6\">\r\n                <button\r\n                  onClick={() => this.exportPdf()}\r\n                  className=\"btn btn-warning btn-block\"\r\n                >\r\n                  {\" \"}\r\n                  Export PDF{\" \"}\r\n                </button>\r\n              </div>\r\n              <div className=\"col-lg-6\">\r\n                <LaporanTerimaBarangExel data={this.props.dataterimabarang} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {this.props.isLoading ? (\r\n        <Loading \r\n        loading\r\n        background=\"rgba(0, 0, 0, 0.35)\"\r\n         loaderColor=\"rgba(94, 147, 117, 1)\" />\r\n      ) : null}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nHeadLaporanTerimaBarang = reduxForm({\r\n  form: \"HeadLaporanTerimaBarang\",\r\n  enableReinitialize: true,\r\n  validate: ValidasiTanggalLaporan,\r\n})(HeadLaporanTerimaBarang);\r\n// export default connect()(HeadLaporanTerimaBarang);\r\nexport default connect((state) => {\r\n  return {\r\n    initialValues: {\r\n      tgl_awal: getTglSystem(),\r\n      tgl_akhir: getTglSystem(),\r\n    },\r\n  };\r\n})(HeadLaporanTerimaBarang);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Panel, PanelHeader } from \"../../../../components/panel/panel.jsx\";\r\nimport { connect } from \"react-redux\";\r\nimport { postDataNoTImeOut } from \"../../../../config/axios.jsx\";\r\nimport { reduxForm } from \"redux-form\";\r\nimport HeadLaporanTerimaBarang from \"./HeadLaporanTerimaBarang.jsx\";\r\nimport { formatDate, localStorageencryp } from \"../../../../components/helpers/function.jsx\";\r\nimport { ToastNotification } from \"../../../../components/helpers/notification.jsx\";\r\nimport * as moment from \"moment-timezone\";\r\n\r\n// import ExportExel from \"./ExportExel.jsx\";\r\nconst maptostate = (state) => {\r\n  return {\r\n    hideModal: state.datamaster.modalDialog,\r\n  };\r\n};\r\n\r\nclass FormLaporanTerimaBarang extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isEdit: false,\r\n      modalDialog: false,\r\n      dataterimabarang: [],\r\n      export: false,\r\n      \r\n    };\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n  handleSubmit(data) {\r\n    this.setState({\r\n      isLoading: true,\r\n    });\r\n    let data_post = {\r\n      tgl_awal: formatDate(moment(new Date(data.tgl_awal)).format('YYYY-MM-DD')),\r\n      tgl_akhir: formatDate(moment(new Date(data.tgl_akhir)).format('YYYY-MM-DD')),\r\n    };\r\n    postDataNoTImeOut(\"terimabarang/get/report\", data_post)\r\n      .then((res) => {\r\n        if (res.data.length === 0) {\r\n          ToastNotification(\"info\", \"Data Yang Anda Cari Tidak Ada\");\r\n          this.setState({\r\n            export: false,\r\n            isLoading: false,\r\n          });\r\n        } else {\r\n          ToastNotification(\"success\", \"Laporan Terima Barang Tersedia\");\r\n          localStorageencryp(\"tgl_laporan\", JSON.stringify(data_post));\r\n          this.setState({\r\n            export: true,\r\n            isLoading: false,\r\n            dataterimabarang: res.data,\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        this.setState({\r\n          export: false,\r\n          isLoading: false,\r\n        });\r\n        ToastNotification(\"info\", \"Data Yang Anda Cari Tidak Ada\");\r\n      });\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <div>\r\n        <ol className=\"breadcrumb float-xl-right\">\r\n          <li className=\"breadcrumb-item\">\r\n            <Link to=\"#\">Laporan Barang</Link>\r\n          </li>\r\n          <li className=\"breadcrumb-item active\">Laporan Terima Barang</li>\r\n        </ol>\r\n        <h1 className=\"page-header\">Laporan Terima Barang </h1>\r\n        <Panel>\r\n          <PanelHeader>Filter Laporan</PanelHeader>\r\n          <br />\r\n          <div className=\"container\">\r\n            <HeadLaporanTerimaBarang\r\n              export={this.state.export}\r\n              isLoading={this.state.isLoading}\r\n              dataterimabarang={this.state.dataterimabarang}\r\n              onSubmit={(data) => this.handleSubmit(data)}\r\n            />\r\n          </div>\r\n          <br />\r\n        </Panel>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nFormLaporanTerimaBarang = reduxForm({\r\n  form: \"LaporanTerimaBarang\",\r\n  enableReinitialize: true,\r\n})(FormLaporanTerimaBarang);\r\nexport default connect(maptostate, null)(FormLaporanTerimaBarang);\r\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n/* global window, document, Blob */\n\n\nvar propTypes = {\n  table: _propTypes2.default.string.isRequired,\n  filename: _propTypes2.default.string.isRequired,\n  sheet: _propTypes2.default.string.isRequired,\n  id: _propTypes2.default.string,\n  className: _propTypes2.default.string,\n  buttonText: _propTypes2.default.string\n};\nvar defaultProps = {\n  id: 'button-download-as-xls',\n  className: 'button-download',\n  buttonText: 'Download'\n};\n\nvar ReactHTMLTableToExcel = function (_Component) {\n  _inherits(ReactHTMLTableToExcel, _Component);\n\n  function ReactHTMLTableToExcel(props) {\n    _classCallCheck(this, ReactHTMLTableToExcel);\n\n    var _this = _possibleConstructorReturn(this, (ReactHTMLTableToExcel.__proto__ || Object.getPrototypeOf(ReactHTMLTableToExcel)).call(this, props));\n\n    _this.handleDownload = _this.handleDownload.bind(_this);\n    return _this;\n  }\n\n  _createClass(ReactHTMLTableToExcel, [{\n    key: 'handleDownload',\n    value: function handleDownload() {\n      if (!document) {\n        if (process.env.NODE_ENV !== 'production') {\n          console.error('Failed to access document object');\n        }\n\n        return null;\n      }\n\n      if (document.getElementById(this.props.table).nodeType !== 1 || document.getElementById(this.props.table).nodeName !== 'TABLE') {\n        if (process.env.NODE_ENV !== 'production') {\n          console.error('Provided table property is not html table element');\n        }\n\n        return null;\n      }\n\n      var table = document.getElementById(this.props.table).outerHTML;\n      var sheet = String(this.props.sheet);\n      var filename = String(this.props.filename) + '.xls';\n      var uri = 'data:application/vnd.ms-excel;base64,';\n      var template = '<html xmlns:o=\"urn:schemas-microsoft-com:office:office\" xmlns:x=\"urn:schemas-mic' + 'rosoft-com:office:excel\" xmlns=\"http://www.w3.org/TR/REC-html40\"><head><meta cha' + 'rset=\"UTF-8\"><!--[if gte mso 9]><xml><x:ExcelWorkbook><x:ExcelWorksheets><x:Exce' + 'lWorksheet><x:Name>{worksheet}</x:Name><x:WorksheetOptions><x:DisplayGridlines/>' + '</x:WorksheetOptions></x:ExcelWorksheet></x:ExcelWorksheets></x:ExcelWorkbook></' + 'xml><![endif]--></head><body>{table}</body></html>';\n      var context = {\n        worksheet: sheet || 'Worksheet',\n        table: table\n      }; // If IE11\n\n      if (window.navigator.msSaveOrOpenBlob) {\n        var fileData = ['' + ('<html xmlns:o=\"urn:schemas-microsoft-com:office:office\" xmlns:x=\"urn:schemas-mic' + 'rosoft-com:office:excel\" xmlns=\"http://www.w3.org/TR/REC-html40\"><head><meta cha' + 'rset=\"UTF-8\"><!--[if gte mso 9]><xml><x:ExcelWorkbook><x:ExcelWorksheets><x:Exce' + 'lWorksheet><x:Name>{worksheet}</x:Name><x:WorksheetOptions><x:DisplayGridlines/>' + '</x:WorksheetOptions></x:ExcelWorksheet></x:ExcelWorksheets></x:ExcelWorkbook></' + 'xml><![endif]--></head><body>') + table + '</body></html>'];\n        var blobObject = new Blob(fileData);\n        document.getElementById('react-html-table-to-excel').click()(function () {\n          window.navigator.msSaveOrOpenBlob(blobObject, filename);\n        });\n        return true;\n      }\n\n      var element = window.document.createElement('a');\n      element.href = uri + ReactHTMLTableToExcel.base64(ReactHTMLTableToExcel.format(template, context));\n      element.download = filename;\n      document.body.appendChild(element);\n      element.click();\n      document.body.removeChild(element);\n      return true;\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      return _react2.default.createElement('button', {\n        id: this.props.id,\n        className: this.props.className,\n        type: 'button',\n        onClick: this.handleDownload\n      }, this.props.buttonText);\n    }\n  }], [{\n    key: 'base64',\n    value: function base64(s) {\n      return window.btoa(unescape(encodeURIComponent(s)));\n    }\n  }, {\n    key: 'format',\n    value: function format(s, c) {\n      return s.replace(/{(\\w+)}/g, function (m, p) {\n        return c[p];\n      });\n    }\n  }]);\n\n  return ReactHTMLTableToExcel;\n}(_react.Component);\n\nReactHTMLTableToExcel.propTypes = propTypes;\nReactHTMLTableToExcel.defaultProps = defaultProps;\nexports.default = ReactHTMLTableToExcel;","const ValidasiTanggalLaporan = (value, event) => {\r\n    const errors = {};\r\n    // console.log(event.charCode==13);\r\n    if (!value.tgl_awal) {\r\n      errors.tgl_awal = \"Tanggal Awal Tidak Boleh Kosong\";\r\n    }\r\n    if (!value.tgl_akhir) {\r\n      errors.tgl_akhir = \"Tanggal Akhir Tidak Boleh Kosong\";\r\n    }\r\n    return errors;\r\n  };\r\n  \r\n  export default ValidasiTanggalLaporan;\r\n  "],"sourceRoot":""}