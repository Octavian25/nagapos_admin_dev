{"version":3,"sources":["pages/DataMaster/Berlian/BatuCutgrade/HeadBatuCutgrade.jsx","pages/DataMaster/Berlian/BatuCutgrade/index.jsx"],"names":["BatuCutgrade","props","_this","Object","classCallCheck","this","_super","call","state","isLoading","handleSubmit","bind","assertThisInitialized","_this2","setTimeout","isEdit","document","getElementById","focus","_this3","library","createElement","onSubmit","autoComplete","onKeyPress","e","key","preventDefault","id","tabIndex","name","component","HiidenFiled","type","ReanderField","label","readOnly","placeholder","onBlur","setState","aktif","className","onClick","dispatch","hideModal","disabled","submitting","Fragment","loading","background","loaderColor","React","Component","reduxForm","form","enableReinitialize","connect","initialValues","datamaster","ShowDataModal","kode_cutgrade","nama_cutgrade","columns","dataField","text","csvExport","headerClasses","formatter","rowcontent","row","dataEdit","_id","editData","hapusData","data","console","log","putDataNoTImeOut","then","res","ToastNotification","reset","getDataCutgrad","catch","err","postDataNoTImeOut","showModal","Swal","fire","html","icon","position","cancelButtonText","showCancelButton","confirmButtonText","showConfirmButton","result","isConfirmed","deleteData","message","_err$response","_err$response$data","response","_this4","to","keyField","tambahData","handleClick","exportCsv","empty","textEmpty","size","title","content","HeadBatuCutgrade"],"mappings":"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","file":"static/js/98.dc1c3dda.chunk.js","sourcesContent":["import {\r\n  Field,\r\n  React,\r\n  connect,\r\n  reduxForm,\r\n  Loading,\r\n  ReanderField,\r\n  hideModal,\r\n  HiidenFiled,\r\n} from \"../../../../components/helpers/library\";\r\n\r\nconst maptostate = (state) => {\r\n  return {\r\n    initialValues: {\r\n      id: state.datamaster.ShowDataModal.id,\r\n      kode_cutgrade: state.datamaster.ShowDataModal.kode_cutgrade,\r\n      nama_cutgrade: state.datamaster.ShowDataModal.nama_cutgrade,\r\n    },\r\n  };\r\n};\r\nclass BatuCutgrade extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n    };\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleSubmit() {}\r\n\r\n  componentDidMount() {\r\n    setTimeout(() => {\r\n      if (this.props.isEdit) {\r\n        document.getElementById(\"nama_cutgrade\").focus();\r\n      } else {\r\n        document.getElementById(\"kode_cutgrade\").focus();\r\n      }\r\n    }, 100);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form\r\n        onSubmit={this.props.handleSubmit}\r\n        autoComplete=\"off\"\r\n        onKeyPress={(e) => {\r\n          e.key === \"Enter\" && e.preventDefault();\r\n        }}\r\n      >\r\n        <Field\r\n          id=\"id\"\r\n          tabIndex=\"1\"\r\n          name=\"id\"\r\n          component={HiidenFiled}\r\n          type=\"hidden\"\r\n        />\r\n        <Field\r\n          id=\"kode_cutgrade\"\r\n          tabIndex=\"1\"\r\n          name=\"kode_cutgrade\"\r\n          component={ReanderField}\r\n          type=\"text\"\r\n          label=\"Kode Cutgrade\"\r\n          readOnly={this.props.isEdit}\r\n          placeholder=\"Masukan Kode Cutgrade\"\r\n        />\r\n        <Field\r\n          id=\"nama_cutgrade\"\r\n          tabIndex=\"2\"\r\n          name=\"nama_cutgrade\"\r\n          component={ReanderField}\r\n          type=\"text\"\r\n          label=\"Nama Cutgrade\"\r\n          placeholder=\"Masukan Nama Cutgrade\"\r\n          onBlur={() => this.setState({ aktif: true })}\r\n        />\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-12 text-right\">\r\n            <button\r\n              className=\"btn btn-white\"\r\n              onClick={() => this.props.dispatch(hideModal())}\r\n              type=\"button\"\r\n              disabled={this.props.isLoading}\r\n            >\r\n              Batal\r\n            </button>\r\n            &nbsp;\r\n            <button\r\n              tabIndex=\"3\"\r\n              className={this.state.aktif ? \"btn btn-primary\" : \"btn btn-white\"}\r\n              disabled={this.props.submitting}\r\n              type=\"submit\"\r\n            >\r\n              {this.props.isLoading ? (\r\n                <>\r\n                  <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Sedang\r\n                  Menyimpan\r\n                </>\r\n              ) : (\r\n                \"Simpan Data\"\r\n              )}\r\n            </button>\r\n          </div>\r\n        </div>\r\n        {this.props.isLoading ? (\r\n          <Loading\r\n            loading\r\n            background=\"rgba(0, 0, 0, 0.35)\"\r\n            loaderColor=\"rgba(94, 147, 117, 1)\"\r\n          />\r\n        ) : null}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nBatuCutgrade = reduxForm({\r\n  form: \"BatuCutgrade\",\r\n  enableReinitialize: true,\r\n})(BatuCutgrade);\r\nexport default connect(maptostate)(BatuCutgrade);\r\n","import {\r\n  ShowDataModal,\r\n  getDataCutgrad,\r\n} from \"../../../../actions/datamaster_action\";\r\n\r\nimport {\r\n  React,\r\n  connect,\r\n  Link,\r\n  reduxForm,\r\n  Panel,\r\n  PanelHeader,\r\n  PanelBody,\r\n  ModalGlobal,\r\n  Tabel,\r\n  showModal,\r\n  postDataNoTImeOut,\r\n  putDataNoTImeOut,\r\n  deleteData,\r\n  reset,\r\n  ToastNotification,\r\n  hideModal,\r\n  Swal,\r\n} from \"../../../../components/helpers/library\";\r\nimport HeadBatuCutgrade from \"./HeadBatuCutgrade\";\r\n\r\nconst maptostate = (state) => {\r\n  return {\r\n    data: state.datamaster.getDataCutgrad,\r\n  };\r\n};\r\nclass BatuCutgrade extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      columns: [\r\n        {\r\n          dataField: \"kode_cutgrade\",\r\n          text: \"Kode Cutgrade\",\r\n        },\r\n        {\r\n          dataField: \"nama_cutgrade\",\r\n          text: \"Nama Cutgrade\",\r\n        },\r\n        {\r\n          dataField: \"action\",\r\n          text: \"Action\",\r\n          csvExport: false,\r\n          headerClasses: \"text-center\",\r\n          formatter: (rowcontent, row) => {\r\n            let dataEdit = {\r\n              id: row._id || 1,\r\n              kode_cutgrade: row.kode_cutgrade,\r\n              nama_cutgrade: row.nama_cutgrade,\r\n            };\r\n            return (\r\n              <div className=\"row text-center\">\r\n                <div className=\"col-12\">\r\n                  <button\r\n                    onClick={() => this.editData(dataEdit)}\r\n                    className=\"btn btn-primary mr-3\"\r\n                  >\r\n                    <i className=\"fa fa-edit\"></i>\r\n                  </button>\r\n                  <button\r\n                    onClick={() => this.hapusData(row)}\r\n                    className=\"btn btn-danger\"\r\n                  >\r\n                    <i className=\"fa fa-trash\"></i>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n      ],\r\n    };\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    // this.print = this.print.bind(this);\r\n  }\r\n\r\n  handleSubmit(data) {\r\n    console.log(data);\r\n    this.setState({\r\n      isLoading: true,\r\n    });\r\n    this.state.isEdit\r\n      ? putDataNoTImeOut(\"batu-cutgrade/\" + data.id, data)\r\n          .then((res) => {\r\n            this.setState({\r\n              isLoading: false,\r\n            });\r\n            ToastNotification(\"success\", \"Data Berhasil Disimpan\");\r\n            this.props.dispatch(reset());\r\n            this.props.dispatch(getDataCutgrad());\r\n            this.props.dispatch(hideModal());\r\n          })\r\n          .catch((err) => {\r\n            ToastNotification(\"info\", \"Data Gagal Disimpan\");\r\n            this.setState({\r\n              isLoading: false,\r\n            });\r\n          })\r\n      : postDataNoTImeOut(\"batu-cutgrade\", data)\r\n          .then((res) => {\r\n            this.setState({\r\n              isLoading: false,\r\n            });\r\n            ToastNotification(\"success\", \"Data Berhasil Disimpan\");\r\n            this.props.dispatch(reset());\r\n            this.props.dispatch(getDataCutgrad());\r\n            this.props.dispatch(hideModal());\r\n          })\r\n          .catch((err) => {\r\n            ToastNotification(\"info\", \"Data Gagal Disimpan\");\r\n            this.setState({\r\n              isLoading: false,\r\n            });\r\n          });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.dispatch(getDataCutgrad());\r\n  }\r\n\r\n  editData(data) {\r\n    this.props.dispatch(showModal());\r\n    this.props.dispatch(ShowDataModal(data));\r\n    this.setState({\r\n      isEdit: true,\r\n    });\r\n  }\r\n  showModal() {\r\n    this.props.dispatch(showModal());\r\n    this.props.dispatch(ShowDataModal(true));\r\n    this.setState({\r\n      isEdit: false,\r\n    });\r\n  }\r\n\r\n  hapusData(row) {\r\n    Swal.fire({\r\n      // title: \"Anda Yakin !!\",\r\n      // text: \"Ingin Menghapus Data Ini ?\",\r\n      html:\r\n        \"Apakah Anda Yakin Ingin \" +\r\n        \"Menghapus \" +\r\n        \"<h1><b>Kode Cutgrade \" +\r\n        row.kode_cutgrade +\r\n        \"</b> ?</h1>\",\r\n      icon: \"warning\",\r\n      position: \"top-center\",\r\n      cancelButtonText: \"Tidak\",\r\n      showCancelButton: true,\r\n      confirmButtonText: \"OK\",\r\n      showConfirmButton: true,\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        deleteData(\"batu-cutgrade/\" + row._id)\r\n          .then((res) => {\r\n            ToastNotification(\r\n              \"success\",\r\n              res.data.message || \"Data Berhasil Disimpan\"\r\n            );\r\n            this.props.dispatch(getDataCutgrad());\r\n          })\r\n          .catch((err) => {\r\n            ToastNotification(\r\n              \"info\",\r\n              err.response?.data?.message || \"Data Gagal Disimpan\"\r\n            );\r\n          });\r\n      }\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ol className=\"breadcrumb float-xl-right\">\r\n          <li className=\"breadcrumb-item\">\r\n            <Link to=\"#\">Data Master</Link>\r\n          </li>\r\n          <li className=\"breadcrumb-item\">\r\n            <Link to=\"#\">Data Berlian</Link>\r\n          </li>\r\n          <li className=\"breadcrumb-item active\">Batu Cutgrade</li>\r\n        </ol>\r\n        <h1 className=\"page-header\">Batu Cutgrade </h1>\r\n        <Panel>\r\n          <PanelHeader>Batu Cutgrade</PanelHeader>\r\n          <PanelBody>\r\n            <Tabel\r\n              keyField=\"kode_cutgrade\"\r\n              tambahData={true}\r\n              handleClick={() => this.showModal()}\r\n              exportCsv={true}\r\n              data={this.props.data}\r\n              columns={this.state.columns}\r\n              empty={this.props.data}\r\n              textEmpty=\"Batu Cutgrade Kosong\"\r\n            />\r\n          </PanelBody>\r\n        </Panel>\r\n\r\n        <ModalGlobal\r\n          size=\"P\"\r\n          title={\r\n            this.state.isEdit ? \"Edit Data Cutgrade\" : \"Tambah Data Cutgrade\"\r\n          }\r\n          content={\r\n            <HeadBatuCutgrade\r\n              isLoading={this.state.isLoading}\r\n              isEdit={this.state.isEdit}\r\n              onSubmit={(data) => this.handleSubmit(data)}\r\n            />\r\n          }\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nBatuCutgrade = reduxForm({\r\n  form: \"BatuCutgrade\",\r\n  enableReinitialize: true,\r\n})(BatuCutgrade);\r\nexport default connect(maptostate)(BatuCutgrade);\r\n"],"sourceRoot":""}