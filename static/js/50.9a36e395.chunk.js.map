{"version":3,"sources":["pages/Laporan/LaporanService/LaporanTransaksiService/exel/CetakLaporanServiceExel.jsx","pages/Laporan/LaporanService/LaporanTransaksiService/pdf/ExportLaporanService.jsx","pages/Laporan/LaporanService/LaporanTransaksiService/HeadFormLaporanService.jsx","../node_modules/react-html-table-to-excel/index.js","Validasi/ValidasiTanggalLaporan.jsx"],"names":["CetakLaporanServiceExel","props","_this","Object","classCallCheck","this","_super","call","state","total_barang","total_berat","total_ongkos","total_jumlah","data","forEach","barang","index","detail","item","detail_barang","parseInt","ongkos","jumlah","berat","length","react_default","a","createElement","Fragment","react_html_table_to_excel_default","id","className","table","filename","sheet","buttonText","rowkey","style","display","colSpan","textAlign","localStoragedecryp","JSON","parse","tgl_awal","tgl_akhir","getUserdata","nama_toko","alamat_toko","backgroundColor","color","map","key","border","_id","no_faktur_service","row","tgl_system","kode_sales","nama_customer","no_hp","alamat_customer","kode_gudang","total","nama_barang","parseFloat","toFixed","deskripsi","toLocaleString","Component","ExportLaporanService","tableColumn","arguments","undefined","doc","jsPDF","tableRows","tbl_barang","finalY","total_baraang","setFontSize","text","jml_alamat","slice","setProperties","title","concat","content","styles","halign","no_services","push","rows","fillColor","textColor","brg","printed","user_id","getToday","fontStyle","autoTable","head","body","startY","theme","rowPageBreak","margin","top","footStyles","fontSize","bodyStyles","headStyles","tableLineColor","tableLineWidth","autoTableEndPosY","pages","internal","getNumberOfPages","pageWidth","pageSize","width","pageHeight","height","j","horizontalPos","verticalPos","setPage","align","string","output","x","window","open","document","write","HeadFormLaporanService","date","Date","setStartDate","bind","assertThisInitialized","setLastDate","LaporanServices","setState","_this2","total_service","databarang","columns","dataField","footerAttrs","footer","cell","num","headerClasses","formatter","onSubmit","handleSubmit","autoComplete","Field","name","component","InputDate","label","type","selected","onChange","placeholder","value","isLoading","tabel","keyField","export","empty","textEmpty","onClick","exportPdf","exel_CetakLaporanServiceExel","loading_default","loading","background","loaderColor","reduxForm","form","enableReinitialize","validate","ValidasiTanggalLaporan","connect","initialValues","getTglSystem","defineProperty","exports","_createClass","defineProperties","target","i","descriptor","enumerable","configurable","writable","Constructor","protoProps","staticProps","prototype","_react","__webpack_require__","_react2","_interopRequireDefault","_propTypes2","obj","__esModule","default","propTypes","isRequired","ReactHTMLTableToExcel","_Component","instance","TypeError","_classCallCheck","self","ReferenceError","_possibleConstructorReturn","__proto__","getPrototypeOf","handleDownload","subClass","superClass","create","constructor","setPrototypeOf","_inherits","getElementById","nodeType","nodeName","outerHTML","String","context","worksheet","navigator","msSaveOrOpenBlob","blobObject","Blob","click","element","href","base64","format","download","appendChild","removeChild","s","btoa","unescape","encodeURIComponent","c","replace","m","p","defaultProps","event","errors"],"mappings":"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","file":"static/js/50.9a36e395.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport ReactHTMLTableToExcel from \"react-html-table-to-excel\";\r\nimport { getUserdata, localStoragedecryp } from \"../../../../../components/helpers/function\";\r\nclass CetakLaporanServiceExel extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  render() {\r\n    let total_barang = 0;\r\n    let total_berat = 0;\r\n    let total_ongkos = 0;\r\n    let total_jumlah = 0;\r\n\r\n    this.props.data.forEach((barang, index) => {\r\n      barang.detail.forEach((item, index) => {\r\n        item.detail_barang.forEach((detail_barang, index) => {\r\n          total_ongkos = total_ongkos +  parseInt(detail_barang.ongkos) * parseInt(detail_barang.jumlah);\r\n          total_jumlah = total_jumlah + detail_barang.jumlah;\r\n          total_berat = total_berat + detail_barang.berat;\r\n        })\r\n        total_barang = total_barang + item.detail_barang.length;\r\n      });\r\n\r\n    });\r\n    return (\r\n      <>\r\n        <ReactHTMLTableToExcel\r\n          id=\"test-table-xls-button\"\r\n          className=\"btn btn-success btn-block\"\r\n          table=\"table-to-xls\"\r\n          filename=\"Laporan Transaksi Service\"\r\n          sheet=\"Laporan Transaksi Service\"\r\n          buttonText=\"Export Exel\"\r\n        />\r\n        <table\r\n          rowkey=\"kode_member\"\r\n          id=\"table-to-xls\"\r\n          style={{ display: \"none\" }}\r\n        >\r\n          <thead>\r\n            <tr>\r\n              <th colSpan=\"7\" style={{ textAlign: \"center\" }}>\r\n                {\" \"}\r\n                LAPORAN TRANSAKSI SERVICE{\" \"}\r\n              </th>\r\n            </tr>\r\n            <tr>\r\n              <th colSpan=\"7\"> Periode </th>\r\n            </tr>\r\n            <tr>\r\n              <th colSpan=\"7\">\r\n                {\" \"}\r\n                {localStoragedecryp(\"tgl_laporan\").length === 0\r\n                  ? null\r\n                  : JSON.parse(localStoragedecryp(\"tgl_laporan\")).tgl_awal +\r\n                    \"s/d\" +\r\n                    JSON.parse(localStoragedecryp(\"tgl_laporan\"))\r\n                      .tgl_akhir}{\" \"}\r\n              </th>\r\n            </tr>\r\n            <tr>\r\n              <th colSpan=\"7\"> TOKO :  {getUserdata().nama_toko} </th>\r\n            </tr>\r\n           \r\n            <tr>\r\n              <th colSpan=\"7\"> ALAMAT :  {getUserdata().alamat_toko} </th>\r\n            </tr>\r\n            <tr>\r\n              <th colSpan=\"7\"></th>\r\n            </tr>\r\n            <tr>\r\n              <th\r\n                style={{\r\n                  backgroundColor: \"#E8E5E5\", color: \"#000\"\r\n                }}\r\n              >\r\n                TANGGAL TRANSAKSI\r\n              </th>\r\n              {/* <th\r\n                style={{\r\n                  backgroundColor: \"#E8E5E5\", color: \"#000\"\r\n                }}\r\n              >\r\n                TANGGAL SELESAI\r\n              </th> */}\r\n              <th\r\n                style={{\r\n                  backgroundColor: \"#E8E5E5\", color: \"#000\"\r\n                }}\r\n              >\r\n                KODE SALES\r\n              </th>\r\n              <th\r\n                style={{\r\n                  backgroundColor: \"#E8E5E5\", color: \"#000\"\r\n                }}\r\n              >\r\n                NAMA CUSTOMER\r\n              </th>\r\n              <th\r\n                style={{\r\n                  backgroundColor: \"#E8E5E5\", color: \"#000\"\r\n                }}\r\n              >\r\n                NO HP\r\n              </th>\r\n              <th\r\n                style={{\r\n                  backgroundColor: \"#E8E5E5\", color: \"#000\"\r\n                }}\r\n              >\r\n                ALAMAT CUSTOMER\r\n              </th>\r\n              <th\r\n                style={{\r\n                  backgroundColor: \"#E8E5E5\", color: \"#000\"\r\n                }}\r\n              >\r\n                KODE GUDANG\r\n              </th>\r\n              <th\r\n                style={{\r\n                  backgroundColor: \"#E8E5E5\", color: \"#000\"\r\n                }}\r\n              >\r\n                TOTAL SERVICE\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.props.data.map((item, index) => (\r\n              <div key={index}>\r\n                {/* {item._id.pembayaran.map((row, key) => ( */}\r\n                  <>\r\n                    <tr key={index}>\r\n                      <th colSpan=\"7\" style={{ textAlign: \"left\",border: \"1px solid #000\" }}>\r\n                      No Service\r\n                        {\" \"}\r\n                        {item._id.no_faktur_service}{\" \"}\r\n                      </th>\r\n                    </tr>\r\n                    {/* <tr>\r\n                      <th colSpan=\"7\" style={{ textAlign: \"left\",border: \"1px solid #000\" }}>\r\n                        {\" \"}\r\n                        {row.jenis} : {row.jumlah_rp}{\" \"}\r\n                      </th>\r\n                    </tr> */}\r\n                  </>\r\n\r\n                {item.detail.map((row, key) => (\r\n                  <>\r\n                    <tr  key={key}>\r\n                      <td>\r\n                        {\" \"}\r\n                        {row.tgl_system}\r\n                      </td>\r\n                      {/* <td>\r\n                        {\" \"}\r\n                        {row.tgl_selesai}\r\n                      </td> */}\r\n                      <td>\r\n                        {\" \"}\r\n                        {row.kode_sales}\r\n                      </td>\r\n                      <td>\r\n                        {\" \"}\r\n                        {row.nama_customer}\r\n                      </td>\r\n                      <td> {row.no_hp}</td>\r\n                      <td>\r\n                        {\" \"}\r\n                        {row.alamat_customer}\r\n                      </td>\r\n                      <td\r\n                        style={{\r\n                          textAlign: \"center\",\r\n                        }}\r\n                      >\r\n                        {\" \"}\r\n                        {row.kode_gudang}\r\n                      </td>\r\n                      <td\r\n                        style={{\r\n                          textAlign: \"center\",\r\n                        }}\r\n                      >\r\n                        {\" \"}\r\n                        {row.total}\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <th colSpan=\"7\">\r\n                        {\" \"}\r\n                        Detail Barang{\" \"}\r\n                      </th>\r\n                    </tr>\r\n                    <tr>\r\n                      <th\r\n                        colSpan=\"3\"\r\n                        style={{\r\n                          backgroundColor: \"#E8E5E5\", color: \"#000\"\r\n                        }}\r\n                      >\r\n                        {\" \"}\r\n                        NAMA BARANG{\" \"}\r\n                      </th>\r\n                      <th\r\n                        style={{\r\n                          backgroundColor: \"#E8E5E5\", color: \"#000\"\r\n                        }}\r\n                      >\r\n                        {\" \"}\r\n                        BERAT{\" \"}\r\n                      </th>\r\n                      <th\r\n                        style={{\r\n                          backgroundColor: \"#E8E5E5\", color: \"#000\"\r\n                        }}\r\n                      >\r\n                        {\" \"}\r\n                        JUMLAH{\" \"}\r\n                      </th>\r\n                      <th\r\n                        colSpan=\"2\"\r\n                        style={{\r\n                          backgroundColor: \"#E8E5E5\", color: \"#000\"\r\n                        }}\r\n                      >\r\n                        {\" \"}\r\n                        DESKRIPSI{\" \"}\r\n                      </th>\r\n                    </tr>\r\n                    <>\r\n                      {row.detail_barang.map((detail, index) => (\r\n                        <>\r\n                          <tr>\r\n                            <td\r\n                              colSpan=\"3\"\r\n                              style={{\r\n                                textAlign: \"center\",\r\n                              }}\r\n                            >\r\n                              {\" \"}\r\n                              {detail.nama_barang}\r\n                            </td>\r\n                            <td\r\n                              style={{\r\n                                textAlign: \"center\",\r\n                              }}\r\n                            >\r\n                              {\" \"}\r\n                              {parseFloat(detail.berat.toFixed(3))}\r\n                            </td>\r\n                            <td\r\n                              style={{\r\n                                textAlign: \"center\",\r\n                              }}\r\n                            >\r\n                              {\" \"}\r\n                              {detail.jumlah}\r\n                            </td>\r\n                            <td\r\n                              colSpan=\"2\"\r\n                              style={{\r\n                                textAlign: \"center\",\r\n                              }}\r\n                            >\r\n                              {\" \"}\r\n                              {detail.deskripsi}\r\n                            </td>\r\n                          </tr>\r\n                        </>\r\n                      ))}\r\n                    </>\r\n                  </>\r\n                ))}\r\n              </div>\r\n            ))}\r\n          </tbody>\r\n          <tfoot>\r\n            <tr>\r\n              <th\r\n                colSpan=\"7\"\r\n                style={{ border: \"1px solid #000\", textAlign: \"left\" }}\r\n              >\r\n                Total Berat : { total_berat.toFixed(3) }<br />\r\n                Total Jumlah : { total_jumlah }<br />\r\n                Total Ongkos : {total_ongkos.toLocaleString(\"kr-KO\")} <br />\r\n                Total Barang : {total_barang }<br />\r\n              </th>\r\n            </tr>\r\n          </tfoot>\r\n        </table>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default CetakLaporanServiceExel;\r\n","import jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\nimport {\r\n  getToday,\r\n  getUserdata,\r\n  localStoragedecryp,\r\n} from \"../../../../../components/helpers/function\";\r\n// Date Fns is used to format the dates we receive\r\n\r\n// define a generatePDF function that accepts a tickets argument\r\nconst ExportLaporanService = (\r\n  data = \"\",\r\n  username = \"\",\r\n  tanggal_dari = \"\",\r\n  tanggal_sampai = \"\"\r\n) => {\r\n  // initialize jsPDF\r\n  const doc = new jsPDF(\"l\", \"mm\", [297, 210]);\r\n  //   let data = JSON.parse(localStorage.getItem(\"tt_pengeluaran_barang\")) || [];\r\n  let tableRows = [];\r\n  // let footRows = [];\r\n  let tableColumn = [];\r\n  let tbl_barang = [];\r\n  let finalY = 30;\r\n  let total_baraang = 0;\r\n  let total_berat = 0;\r\n  let total_jumlah = 0;\r\n  let total_ongkos = 0;\r\n\r\n  doc.setFontSize(15);\r\n  doc.text(\"LAPORAN SERVICES\", 14, 15);\r\n  doc.setFontSize(20);\r\n  doc.text(getUserdata().nama_toko, 200, 15);\r\n  doc.setFontSize(8);\r\n  let jml_alamat = getUserdata().alamat_toko.length;\r\n  if (jml_alamat > 20) {\r\n    doc.text(getUserdata().alamat_toko.slice(0,48), 200, 20);\r\n  }\r\n  if (jml_alamat > 50) {\r\n    doc.text(getUserdata().alamat_toko.slice(48,90), 200, 25);\r\n  }\r\n  doc.setFontSize(10);\r\n  doc.setProperties({\r\n    title: \"LAPORAN SERVICES\",\r\n  });\r\n  //row 1\r\n  doc.text(\r\n    `PERIODE : ${\r\n      localStoragedecryp(\"tgl_laporan\").length === 0\r\n        ? null\r\n        : JSON.parse(localStoragedecryp(\"tgl_laporan\")).tgl_awal +\r\n          \" s/d \" +\r\n          JSON.parse(localStoragedecryp(\"tgl_laporan\")).tgl_akhir\r\n    }`,\r\n    14,\r\n    25\r\n  );\r\n  tableColumn = [\r\n    [\r\n      {\r\n        content: `TANGGAL TRANSAKSI`,\r\n      },\r\n      // {\r\n      //   content: `TANGGAL SELESAI`,\r\n      // },\r\n      {\r\n        content: `KODE SALES`,\r\n      },\r\n      {\r\n        content: `NAMA CUSTOMER`,\r\n      },\r\n      {\r\n        content: `NO HP`,\r\n      },\r\n      {\r\n        content: `ALAMAT CUSTOMER`,\r\n      },\r\n      {\r\n        content: `KODE GUDANG`,\r\n      },\r\n      {\r\n        content: `Total Service`,\r\n        styles: {\r\n          halign: 'right'\r\n        },\r\n      },\r\n    ],\r\n  ];\r\n  data.forEach((item, index) => {\r\n    let no_services = [\r\n      {\r\n        content: `No Services : ${item._id.no_faktur_service} `,\r\n        colSpan: 7,\r\n      },\r\n    ];\r\n\r\n    tableRows.push(no_services);\r\n    // item._id.pembayaran.forEach((header_detail, index) => {\r\n      // console.log(item._id.pembayaran[0].jenis);\r\n      // let no_services = [\r\n      //   {\r\n      //     content: `No Services : ${item._id.no_faktur_service} `,\r\n      //     colSpan: 7,\r\n      //   },\r\n      // ];\r\n\r\n      // tableRows.push(no_services);\r\n    // });\r\n\r\n    item.detail.forEach((detail, index) => {\r\n      let rows = [\r\n        detail.tgl_system,\r\n        // detail.tgl_selesai,\r\n        detail.kode_sales,\r\n        detail.nama_customer,\r\n        detail.no_hp,\r\n        detail.alamat_customer,\r\n        detail.kode_gudang,\r\n        {\r\n          content : detail.total.toLocaleString(\"kr-KO\"),\r\n          styles: {\r\n            halign: 'right'\r\n          }\r\n        }\r\n      ];\r\n      tableRows.push(rows);\r\n      detail.detail_barang.forEach((detail_barang, index) => {\r\n        tbl_barang = [\r\n          {\r\n            content: `Detail Barang`,\r\n            colSpan: 7,\r\n            styles: {\r\n              halign: \"center\",\r\n              // fillColor: \"#E8E5E5\",\r\n              // textColor: \"#000\",\r\n            },\r\n          },\r\n        ];\r\n        tableRows.push(tbl_barang);\r\n\r\n        let tbLhead = [\r\n          {\r\n            content: `Nama Barang`,\r\n            colSpan: 2,\r\n            styles: {\r\n              fillColor: \"#E8E5E5\",\r\n              textColor: \"#000\",\r\n            },\r\n          },\r\n          {\r\n            content: `BERAT`,\r\n            styles: {\r\n              fillColor: \"#E8E5E5\",\r\n              textColor: \"#000\",\r\n            },\r\n          },\r\n          {\r\n            content: `JUMLAH`,\r\n            styles: {\r\n              fillColor: \"#E8E5E5\",\r\n              textColor: \"#000\",\r\n            },\r\n          },\r\n          {\r\n            content: `Ongkos`,\r\n            styles: {\r\n              fillColor: \"#E8E5E5\",\r\n              textColor: \"#000\",\r\n            },\r\n          },\r\n          {\r\n            content: `Deskripsi`,\r\n            colSpan: 3,\r\n            styles: {\r\n              fillColor: \"#E8E5E5\",\r\n              textColor: \"#000\",\r\n            },\r\n          },\r\n        ];\r\n        tableRows.push(tbLhead);\r\n        total_ongkos =\r\n          total_ongkos +\r\n          parseInt(detail_barang.ongkos) * parseInt(detail_barang.jumlah);\r\n        total_jumlah = total_jumlah + detail_barang.jumlah;\r\n        total_berat = total_berat + detail_barang.berat;\r\n        let brg = [\r\n          {\r\n            content: detail_barang.nama_barang,\r\n            colSpan: 2,\r\n          },\r\n          detail_barang.berat.toFixed(3),\r\n          detail_barang.jumlah,\r\n          (\r\n            parseInt(detail_barang.ongkos) * parseInt(detail_barang.jumlah)\r\n          ).toLocaleString(\"kr-KO\"),\r\n          {\r\n            content: detail_barang.deskripsi,\r\n            colSpan: 2,\r\n          },\r\n        ];\r\n        tableRows.push(brg);\r\n\r\n        // let detail_total = [\r\n        //   {\r\n        //     content: `Total Barang ${detail.detail_barang.length}`,\r\n        //     colSpan: 2,\r\n        //     styles: {\r\n        //       halign: \"center\",\r\n        //       fillColor: \"#E8E5E5\",\r\n        //       textColor: \"#000\",\r\n        //     },\r\n        //   },\r\n        //   {\r\n        //     content: `${total_berat}`,\r\n        //     styles: {\r\n        //       fillColor: \"#E8E5E5\",\r\n        //       textColor: \"#000\",\r\n        //     },\r\n        //   },\r\n        //   {\r\n        //     content: `${total_jumlah}`,\r\n        //     styles: {\r\n        //       fillColor: \"#E8E5E5\",\r\n        //       textColor: \"#000\",\r\n        //     },\r\n        //   },\r\n        // ];\r\n        // tableRows.push(detail_total);\r\n      });\r\n      total_baraang = total_baraang + detail.detail_barang.length;\r\n    });\r\n\r\n    // localStorage.setItem('hasil',JSON.stringify(item.detail.length))\r\n    // console.log();\r\n    // let footer = [``, ``, \"\"];\r\n    // footRows.push(footer);\r\n  });\r\n\r\n  let printed = [\r\n    {\r\n      content: `Printed By ${JSON.parse(localStoragedecryp(\"userdata\")).user_id} / ${getToday()}`,\r\n      colSpan: 8,\r\n      styles: {\r\n        // lineWidth: 0.1,\r\n        fontStyle: \"italic\",\r\n        textColor: \"#000\",\r\n        // fillColor: \"#E8E5E5\"\r\n      },\r\n    },\r\n  ]\r\n  tableRows.push(printed);\r\n\r\n  doc.autoTable({\r\n    head: tableColumn,\r\n    body: tableRows,\r\n    // foot: tbl_barang,\r\n    startY: finalY,\r\n    theme: \"plain\",\r\n    rowPageBreak: \"avoid\",\r\n    // pageBreak: \"avoid\",\r\n    margin: { top: 10 },\r\n    footStyles: {\r\n      // lineWidth: 0.02,\r\n      // lineColor: \"#000\",\r\n      fontSize: 8,\r\n    },\r\n    bodyStyles: {\r\n      // lineWidth: 0.02,\r\n      // lineColor: \"#000\",\r\n      fontSize: 8,\r\n    },\r\n    headStyles: {\r\n      fontSize: 8,\r\n      // lineWidth: 0.02,\r\n      // lineColor: \"#000\",\r\n      fillColor: \"#E8E5E5\",\r\n      textColor: \"#000\",\r\n    },\r\n    tableLineColor: [255, 255, 255],\r\n    tableLineWidth: 1,\r\n  });\r\n  finalY = doc.autoTableEndPosY() + 3;\r\n  tableRows = [];\r\n  // footRows = [];\r\n  // tbl_barang = [];\r\n  // const date = Date().split(\" \");\r\n  // we use a date string to generate our filename.\r\n  // const dateStr = date[2] + date[3] + date[4];\r\n  // ticket title. and margin-top + margin-left\r\n  doc.text(\r\n    `User                          : ${\r\n      JSON.parse(localStoragedecryp(\"userdata\")).user_id\r\n    }`,\r\n    14,\r\n    finalY + 10\r\n  );\r\n  doc.text(`Cetak                        : ${getToday()}`, 14, finalY + 16);\r\n  doc.text(\r\n    `Total Berat                : ${total_berat.toFixed(3)}`,\r\n    14,\r\n    finalY + 22\r\n  );\r\n  doc.text(`Total Jumlah             : ${total_jumlah}`, 14, finalY + 28);\r\n  doc.text(\r\n    `Total Ongkos            : ${parseInt(total_ongkos).toLocaleString(\r\n      \"kr-KO\"\r\n    )}`,\r\n    14,\r\n    finalY + 34\r\n  );\r\n  doc.text(`Total Barang             : ${total_baraang}`, 14, finalY + 40);\r\n  const pages = doc.internal.getNumberOfPages();\r\n  const pageWidth = doc.internal.pageSize.width; //Optional\r\n  const pageHeight = doc.internal.pageSize.height; //Optional\r\n  doc.setFontSize(10); //Optional\r\n  for (let j = 1; j < pages + 1; j++) {\r\n    let horizontalPos = pageWidth / 2; //Can be fixed number\r\n    let verticalPos = pageHeight - 10; //Can be fixed number\r\n    doc.setPage(j);\r\n    doc.text(`${j} of ${pages}`, horizontalPos, verticalPos, {\r\n      align: \"center\",\r\n    });\r\n  }\r\n  // doc.autoPrint();\r\n  // doc.save(`LAPORAN SERVICES.pdf`);\r\n  var string = doc.output(\"datauristring\");\r\n  // var embed = \"<embed width='100%' height='100%' src='\" + string + \"'/>\";\r\n  var x = window.open();\r\n  x.document.open();\r\n  x.document.write(\r\n    \"<html><head><title>LAPORAN SERVICES</title></head><body style='margin:0 !important'><embed width='100%' height='100%'  src=\" +\r\n      string +\r\n      \"></embed></body></html>\"\r\n  );\r\n  // x.document.write(embed);\r\n  // setInterval(() => {\r\n  //   x.close();\r\n  // }, 1000);\r\n};\r\n\r\nexport default ExportLaporanService;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { InputDate } from \"../../../../components/helpers/field\";\r\nimport {  getTglSystem } from \"../../../../components/helpers/function\";\r\nimport Tabel from \"../../../../components/helpers/tabel\";\r\nimport ValidasiTanggalLaporan from \"../../../../Validasi/ValidasiTanggalLaporan\";\r\nimport CetakLaporanServiceExel from \"./exel/CetakLaporanServiceExel\";\r\n// import CetakLaporanBatalHutangExel from \"./exel/CetakLaporanBatalHutangExel\";\r\nimport ExportLaporanService from \"./pdf/ExportLaporanService\";\r\nimport Loading from 'react-fullscreen-loading';\r\nclass HeadFormLaporanService extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      date: new Date(),\r\n    };\r\n    this.setStartDate = this.setStartDate.bind(this);\r\n    this.setLastDate = this.setLastDate.bind(this);\r\n  }\r\n\r\n  exportPdf() {\r\n    ExportLaporanService(this.props.LaporanServices);\r\n  }\r\n  setStartDate(date) {\r\n    this.setState({\r\n      tgl_awal: new Date(date),\r\n    });\r\n  }\r\n  setLastDate(date) {\r\n    this.setState({\r\n      tgl_akhir: new Date(date),\r\n    });\r\n  }\r\n\r\n  render() {\r\n    // let total_barang = 0;\r\n    // let total_berat = 0;\r\n    // let total_ongkos = 0;\r\n    let total_service = 0;\r\n    let databarang = [];\r\n    this.props.LaporanServices.forEach((barang, index) => {\r\n      barang.detail.forEach((item, index) => {\r\n        databarang.push(item)\r\n        // item.detail_barang.forEach((detail_barang, index) => {\r\n        //   total_ongkos = total_ongkos +  parseInt(detail_barang.ongkos) * parseInt(detail_barang.jumlah);\r\n        //   total_jumlah = total_jumlah + detail_barang.jumlah;\r\n          total_service = total_service + item.total;\r\n        // })\r\n        // total_barang = total_barang + item.detail_barang.length;\r\n      });\r\n    });\r\n\r\n    const columns = [\r\n      {\r\n        dataField: \"no_faktur_service\",\r\n        text: \"No Faktur\",\r\n        footerAttrs: {\r\n          colSpan: \"7\",\r\n        },\r\n        footer: (cell, row, num, index) => {\r\n          return <div>Total Services : {databarang.length} </div>;\r\n        },\r\n      },\r\n      {\r\n        dataField: \"tgl_system\",\r\n        text: \"Tgl Transaksi\",\r\n        // footerAttrs: {\r\n        //   colSpan: \"7\",\r\n        // },\r\n        // footer: (cell, row, num, index) => {\r\n        //   return <div>Total Services : {databarang.length} </div>;\r\n        // },\r\n      },\r\n     \r\n      {\r\n        dataField: \"kode_sales\",\r\n        text: \"Kode Sales\",\r\n      },\r\n      {\r\n        dataField: \"nama_customer\",\r\n        text: \"Nama Customer\",\r\n      },\r\n      {\r\n        dataField: \"no_hp\",\r\n        text: \"No Hp\",\r\n      },\r\n      {\r\n        dataField: \"alamat_customer\",\r\n        text: \"Alamat Customer\",\r\n      },\r\n      {\r\n        dataField: \"kode_gudang\",\r\n        text: \"Kode Gudang\",\r\n      },\r\n      {\r\n        dataField: \"total\",\r\n        text: \"Total Service\",\r\n        headerClasses: 'text-right',\r\n        footer: (cell, row, num, index) => {\r\n          return <div className=\"text-right\">{total_service.toLocaleString(\"kr-KO\")} </div>;\r\n        },\r\n        formatter: (cell) => {\r\n          return <div className=\"text-right\">{cell.toLocaleString(\"kr-KO\")}</div>;\r\n        },\r\n      },\r\n    ]\r\n    return (\r\n      <form onSubmit={this.props.handleSubmit} autoComplete=\"off\">\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-4\">\r\n            <Field\r\n              name=\"tgl_awal\"\r\n              component={InputDate}\r\n              label=\"Tanggal Dari\"\r\n              type=\"text\"\r\n              selected={this.state.tgl_awal}\r\n              onChange={(date) => this.setStartDate(date)}\r\n              placeholder=\"Masukan Tanggal Dari\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"col-lg-4\">\r\n            <Field\r\n              name=\"tgl_akhir\"\r\n              component={InputDate}\r\n              type=\"text\"\r\n              selected={this.state.tgl_akhir}\r\n              onChange={(date) => this.setLastDate(date)}\r\n              label=\"Tanggal Akhir\"\r\n              placeholder=\"Masukan Tanggal Akhir\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"col-lg-4\">\r\n            <div className=\"text-right\">\r\n              <label>&nbsp;</label>\r\n              <button\r\n                type=\"submit\"\r\n                value=\"PDF\"\r\n                name=\"type_btn\"\r\n                className=\"btn btn-primary btn-block\"\r\n              >\r\n                {this.props.isLoading ? (\r\n                  <>\r\n                    <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Sedang\r\n                    Mencari\r\n                  </>\r\n                ) : (\r\n                  \"Cari Laporan\"\r\n                )}\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-lg-12\">\r\n            <Tabel\r\n              keyField=\"no_hp\"\r\n              data={this.props.export ? databarang : []}\r\n              columns={columns}\r\n              empty={true}\r\n              textEmpty=\"Data Laporan Transaksi Service Kosong\"\r\n            />\r\n          </div>\r\n          <div className={this.props.export ? \"col-lg-12\" : \"col-lg-12 d-none\"}>\r\n            {/* <label htmlFor=\"\">&nbsp;</label> */}\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-6\">\r\n                <button\r\n                  onClick={() => this.exportPdf()}\r\n                  className=\"btn btn-warning btn-block\"\r\n                >\r\n                  {\" \"}\r\n                  Export PDF{\" \"}\r\n                </button>\r\n              </div>\r\n              <div className=\"col-lg-6\">\r\n                <CetakLaporanServiceExel data={this.props.LaporanServices} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {this.props.isLoading ? (\r\n        <Loading \r\n        loading\r\n        background=\"rgba(0, 0, 0, 0.35)\"\r\n         loaderColor=\"rgba(94, 147, 117, 1)\" />\r\n      ) : null}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nHeadFormLaporanService = reduxForm({\r\n  form: \"HeadFormLaporanService\",\r\n  enableReinitialize: true,\r\n  validate: ValidasiTanggalLaporan,\r\n})(HeadFormLaporanService);\r\n// export default connect()(HeadFormLaporanService);\r\nexport default connect((state) => {\r\n  return {\r\n    initialValues: {\r\n      tgl_awal: getTglSystem(),\r\n      tgl_akhir: getTglSystem(),\r\n    },\r\n  };\r\n})(HeadFormLaporanService);\r\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n/* global window, document, Blob */\n\n\nvar propTypes = {\n  table: _propTypes2.default.string.isRequired,\n  filename: _propTypes2.default.string.isRequired,\n  sheet: _propTypes2.default.string.isRequired,\n  id: _propTypes2.default.string,\n  className: _propTypes2.default.string,\n  buttonText: _propTypes2.default.string\n};\nvar defaultProps = {\n  id: 'button-download-as-xls',\n  className: 'button-download',\n  buttonText: 'Download'\n};\n\nvar ReactHTMLTableToExcel = function (_Component) {\n  _inherits(ReactHTMLTableToExcel, _Component);\n\n  function ReactHTMLTableToExcel(props) {\n    _classCallCheck(this, ReactHTMLTableToExcel);\n\n    var _this = _possibleConstructorReturn(this, (ReactHTMLTableToExcel.__proto__ || Object.getPrototypeOf(ReactHTMLTableToExcel)).call(this, props));\n\n    _this.handleDownload = _this.handleDownload.bind(_this);\n    return _this;\n  }\n\n  _createClass(ReactHTMLTableToExcel, [{\n    key: 'handleDownload',\n    value: function handleDownload() {\n      if (!document) {\n        if (process.env.NODE_ENV !== 'production') {\n          console.error('Failed to access document object');\n        }\n\n        return null;\n      }\n\n      if (document.getElementById(this.props.table).nodeType !== 1 || document.getElementById(this.props.table).nodeName !== 'TABLE') {\n        if (process.env.NODE_ENV !== 'production') {\n          console.error('Provided table property is not html table element');\n        }\n\n        return null;\n      }\n\n      var table = document.getElementById(this.props.table).outerHTML;\n      var sheet = String(this.props.sheet);\n      var filename = String(this.props.filename) + '.xls';\n      var uri = 'data:application/vnd.ms-excel;base64,';\n      var template = '<html xmlns:o=\"urn:schemas-microsoft-com:office:office\" xmlns:x=\"urn:schemas-mic' + 'rosoft-com:office:excel\" xmlns=\"http://www.w3.org/TR/REC-html40\"><head><meta cha' + 'rset=\"UTF-8\"><!--[if gte mso 9]><xml><x:ExcelWorkbook><x:ExcelWorksheets><x:Exce' + 'lWorksheet><x:Name>{worksheet}</x:Name><x:WorksheetOptions><x:DisplayGridlines/>' + '</x:WorksheetOptions></x:ExcelWorksheet></x:ExcelWorksheets></x:ExcelWorkbook></' + 'xml><![endif]--></head><body>{table}</body></html>';\n      var context = {\n        worksheet: sheet || 'Worksheet',\n        table: table\n      }; // If IE11\n\n      if (window.navigator.msSaveOrOpenBlob) {\n        var fileData = ['' + ('<html xmlns:o=\"urn:schemas-microsoft-com:office:office\" xmlns:x=\"urn:schemas-mic' + 'rosoft-com:office:excel\" xmlns=\"http://www.w3.org/TR/REC-html40\"><head><meta cha' + 'rset=\"UTF-8\"><!--[if gte mso 9]><xml><x:ExcelWorkbook><x:ExcelWorksheets><x:Exce' + 'lWorksheet><x:Name>{worksheet}</x:Name><x:WorksheetOptions><x:DisplayGridlines/>' + '</x:WorksheetOptions></x:ExcelWorksheet></x:ExcelWorksheets></x:ExcelWorkbook></' + 'xml><![endif]--></head><body>') + table + '</body></html>'];\n        var blobObject = new Blob(fileData);\n        document.getElementById('react-html-table-to-excel').click()(function () {\n          window.navigator.msSaveOrOpenBlob(blobObject, filename);\n        });\n        return true;\n      }\n\n      var element = window.document.createElement('a');\n      element.href = uri + ReactHTMLTableToExcel.base64(ReactHTMLTableToExcel.format(template, context));\n      element.download = filename;\n      document.body.appendChild(element);\n      element.click();\n      document.body.removeChild(element);\n      return true;\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      return _react2.default.createElement('button', {\n        id: this.props.id,\n        className: this.props.className,\n        type: 'button',\n        onClick: this.handleDownload\n      }, this.props.buttonText);\n    }\n  }], [{\n    key: 'base64',\n    value: function base64(s) {\n      return window.btoa(unescape(encodeURIComponent(s)));\n    }\n  }, {\n    key: 'format',\n    value: function format(s, c) {\n      return s.replace(/{(\\w+)}/g, function (m, p) {\n        return c[p];\n      });\n    }\n  }]);\n\n  return ReactHTMLTableToExcel;\n}(_react.Component);\n\nReactHTMLTableToExcel.propTypes = propTypes;\nReactHTMLTableToExcel.defaultProps = defaultProps;\nexports.default = ReactHTMLTableToExcel;","const ValidasiTanggalLaporan = (value, event) => {\r\n    const errors = {};\r\n    // console.log(event.charCode==13);\r\n    if (!value.tgl_awal) {\r\n      errors.tgl_awal = \"Tanggal Awal Tidak Boleh Kosong\";\r\n    }\r\n    if (!value.tgl_akhir) {\r\n      errors.tgl_akhir = \"Tanggal Akhir Tidak Boleh Kosong\";\r\n    }\r\n    return errors;\r\n  };\r\n  \r\n  export default ValidasiTanggalLaporan;\r\n  "],"sourceRoot":""}