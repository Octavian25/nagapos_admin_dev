{"version":3,"sources":["pages/DataMaster/Berlian/BatuBerlian/HeadBatuBerlian.jsx","pages/DataMaster/Berlian/BatuBerlian/index.jsx"],"names":["HeadBatuBerlian","props","_this","Object","classCallCheck","this","_super","call","state","isLoading","handleSubmit","bind","assertThisInitialized","dispatch","getDataShape","getBatuColor","getDataCutgrad","getDataPolish","getDataSymetry","getDataFluorencence","_this2","library","createElement","onSubmit","autoComplete","onKeyPress","e","key","preventDefault","className","id","name","component","ReanderField","type","label","placeholder","normalize","NumberOnly","Gramasi","ReanderSelect","options","batuShape","map","list","value","kode_shape","batuColor","kode_color","batuCutgrade","kode_cutgrade","batuPolish","kode_polish","batuSymetry","kode_symmetry","batuFluorencence","kode_fluorescence","readOnly","onClick","hideModal","disabled","tabIndex","aktif","submitting","Fragment","loading","background","loaderColor","React","Component","reduxForm","form","enableReinitialize","connect","datamaster","initialValues","ShowDataModal","_id","kode_symetry","nama_symetry","BatuBerlian","columns","dataField","text","csvExport","headerClasses","formatter","rowcontent","row","dataEdit","nama_shape","editData","hapusData","data","setState","setTimeout","setItem","showModal","isEdit","_this3","Swal","fire","html","icon","position","cancelButtonText","showCancelButton","confirmButtonText","showConfirmButton","then","result","isConfirmed","_this4","to","keyField","tambahData","handleClick","exportCsv","getItem","empty","textEmpty","size","title","content","BatuBerlian_HeadBatuBerlian"],"mappings":"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","file":"static/js/95.21526b61.chunk.js","sourcesContent":["import {\r\n  getDataShape,\r\n  getBatuColor,\r\n  getDataPolish,\r\n  getDataFluorencence,\r\n  getDataCutgrad,\r\n  getDataSymetry,\r\n} from \"../../../../actions/datamaster_action\";\r\nimport {\r\n  Field,\r\n  React,\r\n  connect,\r\n  reduxForm,\r\n  Loading,\r\n  ReanderField,\r\n  hideModal,\r\n  NumberOnly,\r\n  Gramasi,\r\n  ReanderSelect,\r\n} from \"../../../../components/helpers/library\";\r\n\r\nconst maptostate = (state) => {\r\n  return {\r\n    batuColor: state.datamaster.getBatuColor,\r\n    batuShape: state.datamaster.getDataShape,\r\n    batuCutgrade: state.datamaster.getDataCutgrad,\r\n    batuSymetry: state.datamaster.getDataSymetry,\r\n    batuPolish: state.datamaster.getDataPolish,\r\n    batuFluorencence: state.datamaster.getDataFluorencence,\r\n\r\n    initialValues: {\r\n      id: state.datamaster.ShowDataModal._id,\r\n      kode_symetry: state.datamaster.ShowDataModal.kode_symetry,\r\n      nama_symetry: state.datamaster.ShowDataModal.nama_symetry,\r\n    },\r\n  };\r\n};\r\nclass HeadBatuBerlian extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n    };\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleSubmit() {}\r\n\r\n  componentDidMount() {\r\n    this.props.dispatch(getDataShape());\r\n    this.props.dispatch(getBatuColor());\r\n    this.props.dispatch(getDataCutgrad());\r\n    this.props.dispatch(getDataPolish());\r\n    this.props.dispatch(getDataSymetry());\r\n    this.props.dispatch(getDataFluorencence());\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form\r\n        onSubmit={this.props.handleSubmit}\r\n        autoComplete=\"off\"\r\n        onKeyPress={(e) => {\r\n          e.key === \"Enter\" && e.preventDefault();\r\n        }}\r\n      >\r\n        <div className=\"row\">\r\n          <div className=\"col-3\">\r\n            <Field\r\n              id=\"kode_system\"\r\n              name=\"kode_system\"\r\n              component={ReanderField}\r\n              type=\"text\"\r\n              label=\"Kode System\"\r\n              placeholder=\"Masukan Kode System\"\r\n            />\r\n          </div>\r\n          <div className=\"col-3\">\r\n            <Field\r\n              id=\"kode_barang\"\r\n              name=\"kode_barang\"\r\n              component={ReanderField}\r\n              type=\"text\"\r\n              label=\"Kode Barang\"\r\n              placeholder=\"Masukan Kode Barang\"\r\n            />\r\n          </div>\r\n          <div className=\"col-3\">\r\n            <Field\r\n              id=\"jenis_batu\"\r\n              name=\"jenis_batu\"\r\n              component={ReanderField}\r\n              type=\"text\"\r\n              label=\"Jenis Batu\"\r\n              placeholder=\"Masukan Jenis Batu\"\r\n            />\r\n          </div>\r\n          <div className=\"col-3\">\r\n            <Field\r\n              id=\"jumlah_batu\"\r\n              name=\"jumlah_batu\"\r\n              component={ReanderField}\r\n              normalize={NumberOnly}\r\n              type=\"text\"\r\n              label=\"Jumlah Batu\"\r\n              placeholder=\"Masukan Jumlah Batu\"\r\n            />\r\n          </div>\r\n          <div className=\"col-3\">\r\n            <Field\r\n              id=\"karat_batu\"\r\n              name=\"karat_batu\"\r\n              normalize={Gramasi}\r\n              component={ReanderField}\r\n              type=\"text\"\r\n              label=\"Karat Batu\"\r\n              placeholder=\"Masukan Karat Batu\"\r\n            />\r\n          </div>\r\n          <div className=\"col-3\">\r\n            <Field\r\n              id=\"kode_shape\"\r\n              name=\"kode_shape\"\r\n              component={ReanderSelect}\r\n              type=\"text\"\r\n              options={this.props.batuShape.map((list) => {\r\n                let row = {\r\n                  value: list.kode_shape,\r\n                  name: list.kode_shape,\r\n                };\r\n                return row;\r\n              })}\r\n              label=\"Kode Shape\"\r\n              placeholder=\"Pilih Kode Shape\"\r\n            />\r\n          </div>\r\n          <div className=\"col-3\">\r\n            <Field\r\n              id=\"kode_color\"\r\n              name=\"kode_color\"\r\n              component={ReanderSelect}\r\n              options={this.props.batuColor.map((list) => {\r\n                let row = {\r\n                  value: list.kode_color,\r\n                  name: list.kode_color,\r\n                };\r\n                return row;\r\n              })}\r\n              type=\"text\"\r\n              label=\"Kode Color\"\r\n              placeholder=\"Pilih Kode Color\"\r\n            />\r\n          </div>\r\n          <div className=\"col-3\">\r\n            <Field\r\n              id=\"kode_cutgrade\"\r\n              name=\"kode_cutgrade\"\r\n              component={ReanderSelect}\r\n              options={this.props.batuCutgrade.map((list) => {\r\n                let row = {\r\n                  value: list.kode_cutgrade,\r\n                  name: list.kode_cutgrade,\r\n                };\r\n                return row;\r\n              })}\r\n              type=\"text\"\r\n              label=\"Kode Cutgrade\"\r\n              placeholder=\"Pilih Kode Cutgrade\"\r\n            />\r\n          </div>\r\n          <div className=\"col-3\">\r\n            <Field\r\n              id=\"kode_polish\"\r\n              name=\"kode_polish\"\r\n              component={ReanderSelect}\r\n              options={this.props.batuPolish.map((list) => {\r\n                let row = {\r\n                  value: list.kode_polish,\r\n                  name: list.kode_polish,\r\n                };\r\n                return row;\r\n              })}\r\n              type=\"text\"\r\n              label=\"Kode Polish\"\r\n              placeholder=\"Pilih Kode Polish\"\r\n            />\r\n          </div>\r\n          <div className=\"col-3\">\r\n            <Field\r\n              id=\"kode_symmetry\"\r\n              name=\"kode_symmetry\"\r\n              component={ReanderSelect}\r\n              options={this.props.batuSymetry.map((list) => {\r\n                let row = {\r\n                  value: list.kode_symmetry,\r\n                  name: list.kode_symmetry,\r\n                };\r\n                return row;\r\n              })}\r\n              type=\"text\"\r\n              label=\"Kode Symmetry\"\r\n              placeholder=\"Pilih Kode Symmetry\"\r\n            />\r\n          </div>\r\n          <div className=\"col-3\">\r\n            <Field\r\n              id=\"kode_fluorescence\"\r\n              name=\"kode_fluorescence\"\r\n              component={ReanderSelect}\r\n              options={this.props.batuFluorencence.map((list) => {\r\n                let row = {\r\n                  value: list.kode_fluorescence,\r\n                  name: list.kode_fluorescence,\r\n                };\r\n                return row;\r\n              })}\r\n              type=\"text\"\r\n              label=\"Kode Fluorence\"\r\n              placeholder=\"Pilih Kode Fluorence\"\r\n            />\r\n          </div>\r\n          <div className=\"col-3\">\r\n            <Field\r\n              id=\"total_harga\"\r\n              name=\"total_harga\"\r\n              component={ReanderField}\r\n              type=\"text\"\r\n              label=\"Total Harga\"\r\n              placeholder=\"Masukan Total Harga\"\r\n              readOnly\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-12 text-right\">\r\n            <button\r\n              className=\"btn btn-white\"\r\n              onClick={() => this.props.dispatch(hideModal())}\r\n              type=\"button\"\r\n              disabled={this.props.isLoading}\r\n            >\r\n              Batal\r\n            </button>\r\n            &nbsp;\r\n            <button\r\n              tabIndex=\"3\"\r\n              className={this.state.aktif ? \"btn btn-primary\" : \"btn btn-white\"}\r\n              disabled={this.props.submitting}\r\n              type=\"submit\"\r\n            >\r\n              {this.props.isLoading ? (\r\n                <>\r\n                  <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Sedang\r\n                  Menyimpan\r\n                </>\r\n              ) : (\r\n                \"Simpan Data\"\r\n              )}\r\n            </button>\r\n          </div>\r\n        </div>\r\n        {this.props.isLoading ? (\r\n          <Loading\r\n            loading\r\n            background=\"rgba(0, 0, 0, 0.35)\"\r\n            loaderColor=\"rgba(94, 147, 117, 1)\"\r\n          />\r\n        ) : null}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nHeadBatuBerlian = reduxForm({\r\n  form: \"HeadBatuBerlian\",\r\n  enableReinitialize: true,\r\n})(HeadBatuBerlian);\r\nexport default connect(maptostate)(HeadBatuBerlian);\r\n","\r\nimport { ShowDataModal } from \"../../../../actions/datamaster_action\";\r\nimport {\r\n  React,\r\n  connect,\r\n  Link,\r\n  reduxForm,\r\n  Panel,\r\n  PanelHeader,\r\n  PanelBody,\r\n  ModalGlobal,\r\n  Tabel,\r\n  showModal,\r\n  setItem,\r\n  getItem,\r\n  hideModal,\r\n  Swal,\r\n} from \"../../../../components/helpers/library\";\r\nimport HeadBatuBerlian from \"./HeadBatuBerlian\";\r\n\r\nclass BatuBerlian extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      columns: [\r\n        {\r\n          dataField: \"kode_system\",\r\n          text: \"kode System\",\r\n        },\r\n        {\r\n          dataField: \"kode_barang\",\r\n          text: \"Kode Barang\",\r\n        },\r\n        {\r\n          dataField: \"jenis_batu\",\r\n          text: \"Jenis Batu\",\r\n        },\r\n        {\r\n          dataField: \"jml_batu\",\r\n          text: \"Jumlah Batu\",\r\n        },\r\n        {\r\n          dataField: \"krt_batu\",\r\n          text: \"Karat Batu\",\r\n        },\r\n        {\r\n          dataField: \"kode_shape\",\r\n          text: \"Kode Shape\",\r\n        },\r\n        {\r\n          dataField: \"kode_color\",\r\n          text: \"Kode Color\",\r\n        },\r\n        {\r\n          dataField: \"kode_cutgrade\",\r\n          text: \"Kode Cutgrade\",\r\n        },\r\n        {\r\n          dataField: \"kode_polish\",\r\n          text: \"Kode Polish\",\r\n        },\r\n        {\r\n          dataField: \"kode_symmetry\",\r\n          text: \"Kode Symmetry\",\r\n        },\r\n        {\r\n          dataField: \"kode_fluorence\",\r\n          text: \"Kode Fluorence\",\r\n        },\r\n     \r\n        {\r\n          dataField: \"kode_clarity\",\r\n          text: \"Kode Clarity\",\r\n        },\r\n        {\r\n          dataField: \"stock_on_hand\",\r\n          text: \"Stock\",\r\n        },\r\n        {\r\n          dataField: \"total_harga\",\r\n          text: \"Total Harga\",\r\n        },\r\n      \r\n        {\r\n          dataField: \"action\",\r\n          text: \"Action\",\r\n          csvExport: false,\r\n          headerClasses: \"text-center\",\r\n          formatter: (rowcontent, row) => {\r\n            let dataEdit = {\r\n              id: row._id || 1,\r\n              kode_shape: row.kode_shape,\r\n              nama_shape: row.nama_shape,\r\n            };\r\n            return (\r\n              <div className=\"row text-center\">\r\n                <div className=\"col-12\">\r\n                  <button\r\n                    onClick={() => this.editData(dataEdit)}\r\n                    className=\"btn btn-primary mr-3\"\r\n                  >\r\n                    <i className=\"fa fa-edit\"></i>\r\n                  </button>\r\n                  <button\r\n                    onClick={() => this.hapusData(row._id)}\r\n                    className=\"btn btn-danger\"\r\n                  >\r\n                    <i className=\"fa fa-trash\"></i>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n      ],\r\n    };\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    // this.print = this.print.bind(this);\r\n  }\r\n\r\n  handleSubmit(data) {\r\n    this.setState({\r\n      isLoading: true,\r\n    });\r\n\r\n    setTimeout(() => {\r\n      setItem(\"batu_color\", [data]);\r\n      this.setState({\r\n        isLoading: false,\r\n      });\r\n\r\n      this.props.dispatch(hideModal());\r\n    }, 300);\r\n  }\r\n\r\n  componentDidMount() {}\r\n\r\n  editData(data) {\r\n    this.props.dispatch(showModal());\r\n    this.props.dispatch(ShowDataModal(data));\r\n    this.setState({\r\n      isEdit: true,\r\n    });\r\n  }\r\n  showModal() {\r\n    this.props.dispatch(showModal());\r\n    this.props.dispatch(ShowDataModal(true));\r\n    this.setState({\r\n      isEdit: false,\r\n    });\r\n  }\r\n\r\n  hapusData(id) {\r\n    Swal.fire({\r\n      // title: \"Anda Yakin !!\",\r\n      // text: \"Ingin Menghapus Data Ini ?\",\r\n      html:\r\n        \"Apakah Anda Yakin Ingin \" +\r\n        \"Menghapus \" +\r\n        \"<h1><b>Kode Group \" +\r\n        id +\r\n        \"</b> ?</h1>\",\r\n      icon: \"warning\",\r\n      position: \"top-center\",\r\n      cancelButtonText: \"Tidak\",\r\n      showCancelButton: true,\r\n      confirmButtonText: \"OK\",\r\n      showConfirmButton: true,\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        setItem(\"batu_color\", []);\r\n        this.setState({\r\n          isLoading: false,\r\n        });\r\n      }\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ol className=\"breadcrumb float-xl-right\">\r\n          <li className=\"breadcrumb-item\">\r\n            <Link to=\"#\">Data Master</Link>\r\n          </li>\r\n          <li className=\"breadcrumb-item\">\r\n            <Link to=\"#\">Data Berlian</Link>\r\n          </li>\r\n          <li className=\"breadcrumb-item active\"> Batu Berlian</li>\r\n        </ol>\r\n        <h1 className=\"page-header\"> Batu Berlian </h1>\r\n        <Panel>\r\n          <PanelHeader> Batu Berlian</PanelHeader>\r\n          <PanelBody>\r\n            <Tabel\r\n              keyField=\"kode_system\"\r\n              tambahData={true}\r\n              handleClick={() => this.showModal()}\r\n              exportCsv={true}\r\n              data={getItem(\"batu_color\")}\r\n              columns={this.state.columns}\r\n              empty={[]}\r\n              textEmpty=\" Batu Berlian Kosong\"\r\n            />\r\n          </PanelBody>\r\n        </Panel>\r\n\r\n        <ModalGlobal\r\n          size=\"xl\"\r\n          title={this.state.isEdit ? \"Edit Data Batu Berlian\" : \"Tambah Data Batu Berlian\"}\r\n          content={\r\n            <HeadBatuBerlian\r\n              isLoading={this.state.isLoading}\r\n              isEdit={this.state.isEdit}\r\n              onSubmit={(data) => this.handleSubmit(data)}\r\n            />\r\n          }\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nBatuBerlian = reduxForm({\r\n  form: \"BatuBerlian\",\r\n  enableReinitialize: true,\r\n})(BatuBerlian);\r\nexport default connect()(BatuBerlian);\r\n"],"sourceRoot":""}