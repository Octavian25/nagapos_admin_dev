{"version":3,"sources":["Validasi/ValidasiMasterTukang.jsx","pages/DataMaster/DataTukang/FormModalTukang.jsx","pages/DataMaster/DataTukang/MasterTukang.jsx"],"names":["ValidasiMasterTukang","value","event","errors","kode_tukang","nama_tukang","FormModalTukang","state","aktif","_this2","this","setTimeout","props","isEdit","document","getElementById","focus","_this3","react_default","a","createElement","onSubmit","handleSubmit","autoComplete","onKeyPress","e","key","preventDefault","Field","tabIndex","id","name","component","ReanderField","type","label","placeholder","readOnly","onBlur","setState","className","onClick","dispatch","hideModal","disabled","isLoading","submitting","Fragment","loading_default","loading","background","loaderColor","Component","reduxForm","form","enableReinitialize","validate","connect","datamaster","ShowModalTukang","initialValues","kode_sales","hapusDataTukang","params","Swal","fire","html","icon","position","cancelButtonText","showCancelButton","confirmButtonText","showConfirmButton","then","result","isConfirmed","deleteData","data","NotifSucces","getDataTukang","catch","err","ToastNotification","response","MasterTukang","_this","Object","classCallCheck","_super","call","modalDialog","columns","dataField","text","sort","csvExport","headerClasses","formatter","rowcontent","row","dataEdit","formEditTukang","bind","assertThisInitialized","data_edit","data_post","putData","reset","error","postData","ErrorHandling","showModal","react_router_dom","to","panel","tabel","keyField","tambahData","handleClick","exportCsv","DataTukang","empty","textEmpty","ModalGlobal","size","title","content","DataTukang_FormModalTukang","React"],"mappings":"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","file":"static/js/109.a0012356.chunk.js","sourcesContent":["const ValidasiMasterTukang = (value, event) => {\r\n  const errors = {};\r\n  // console.log(event.charCode==13);\r\n  if (!value.kode_tukang) {\r\n    errors.kode_tukang = \"Kode Tukang Tidak Boleh Kosong\";\r\n  }\r\n  if (!value.nama_tukang) {\r\n    errors.nama_tukang = \"Nama Tukang Tidak Boleh Kosong\";\r\n  }\r\n  return errors;\r\n};\r\n\r\nexport default ValidasiMasterTukang;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { hideModal } from \"../../../actions/datamaster_action\";\r\nimport { ReanderField } from \"../../../components/helpers/field\";\r\nimport ValidasiMasterTukang from \"../../../Validasi/ValidasiMasterTukang.jsx\";\r\nimport Loading from 'react-fullscreen-loading';\r\n\r\nconst maptostate = (state) => {\r\n  if (state.datamaster.ShowModalTukang !== null) {\r\n    return {\r\n      initialValues: {\r\n        kode_tukang: state.datamaster.ShowModalTukang.kode_sales,\r\n        nama_tukang: state.datamaster.ShowModalTukang.nama_tukang,\r\n      },\r\n    };\r\n  }\r\n};\r\nclass FormModalTukang extends Component {\r\n  state = {\r\n    aktif: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    setTimeout(() => {\r\n      this.props.isEdit\r\n        ? document.getElementById(\"nama_tukang\").focus()\r\n        : document.getElementById(\"kode_tukang\").focus();\r\n    }, 100);\r\n  }\r\n  render() {\r\n    return (\r\n      <form\r\n        onSubmit={this.props.handleSubmit}\r\n        autoComplete=\"off\"\r\n        onKeyPress={(e) => {\r\n          e.key === \"Enter\" && e.preventDefault();\r\n        }}\r\n      >\r\n        <Field\r\n          tabIndex=\"1\"\r\n          id=\"kode_tukang\"\r\n          name=\"kode_tukang\"\r\n          component={ReanderField}\r\n          type=\"text\"\r\n          label=\"Kode Tukang\"\r\n          placeholder=\"Masukan Kode Tukang\"\r\n          readOnly={this.props.isEdit}\r\n        />\r\n        <Field\r\n          tabIndex=\"2\"\r\n          id=\"nama_tukang\"\r\n          name=\"nama_tukang\"\r\n          component={ReanderField}\r\n          type=\"text\"\r\n          label=\"Nama Tukang\"\r\n          onBlur={() => this.setState({ aktif: true })}\r\n          placeholder=\"Masukan Nama Tukang\"\r\n        />\r\n        <div className=\"row\">\r\n          <div className=\"col-12 text-right\">\r\n            <button\r\n              className=\"btn btn-white\"\r\n              onClick={() => this.props.dispatch(hideModal())}\r\n              type=\"button\"\r\n              disabled={this.props.isLoading}\r\n            >\r\n              Batal\r\n            </button>\r\n            &nbsp;\r\n            <button\r\n              tabIndex=\"3\"\r\n              className={this.state.aktif ? \"btn btn-primary\" : \"btn btn-white\"}\r\n              disabled={this.props.submitting}\r\n              type=\"submit\"\r\n            >\r\n              {this.props.isLoading ? (\r\n                <>\r\n                  <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Sedang\r\n                  Menyimpan\r\n                </>\r\n              ) : (\r\n                \"Simpan Data\"\r\n              )}\r\n            </button>\r\n          </div>\r\n        </div>\r\n        {this.props.isLoading ? (\r\n        <Loading \r\n        loading\r\n        background=\"rgba(0, 0, 0, 0.35)\"\r\n         loaderColor=\"rgba(94, 147, 117, 1)\" />\r\n      ) : null}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nFormModalTukang = reduxForm({\r\n  form: \"ModalTukang\",\r\n  enableReinitialize: true,\r\n  validate: ValidasiMasterTukang,\r\n})(FormModalTukang);\r\nexport default connect(maptostate, null)(FormModalTukang);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Panel, PanelHeader } from \"../../../components/panel/panel.jsx\";\r\n\r\nimport {\r\n  ShowModalTukang,\r\n  showModal,\r\n  getDataTukang,\r\n  hideModal,\r\n} from \"../../../actions/datamaster_action.jsx\";\r\nimport { connect } from \"react-redux\";\r\nimport Swal from \"sweetalert2\";\r\nimport {\r\n  NotifSucces,\r\n  ToastNotification,\r\n} from \"../../../components/helpers/notification.jsx\";\r\nimport { reset } from \"redux-form\";\r\nimport { deleteData, postData, putData } from \"../../../config/axios.jsx\";\r\nimport { ErrorHandling } from \"../../../components/helpers/function.jsx\";\r\nimport Tabel from \"../../../components/helpers/tabel.jsx\";\r\nimport FormModalTukang from \"./FormModalTukang.jsx\";\r\nimport ModalGlobal from \"../../../components/helpers/ModalGlobal.jsx\";\r\n\r\nconst maptostate = (state) => {\r\n  return {\r\n    DataTukang: state.datamaster.getDataTukang,\r\n    hideModal: state.datamaster.modalDialog,\r\n  };\r\n};\r\nconst hapusDataTukang = (params, dispatch) => {\r\n  Swal.fire({\r\n    // title: \"Anda Yakin !!\",\r\n    // text: \"Ingin Menghapus Data Ini ?\",\r\n    html:\r\n      \"Apakah Anda Yakin Ingin \" +\r\n      \"Menghapus \" +\r\n      \"<h1><b>Kode Tukang \" +\r\n      params +\r\n      \"</b> ?</h1>\",\r\n    icon: \"warning\",\r\n    position: \"top-center\",\r\n    cancelButtonText: \"Tidak\",\r\n    showCancelButton: true,\r\n    confirmButtonText: \"OK\",\r\n    showConfirmButton: true,\r\n  }).then((result) => {\r\n    if (result.isConfirmed) {\r\n      deleteData(\"tukang/delete/by-kode-tukang/\" + params, {\r\n        data: {\r\n          kode_tukang: params,\r\n        },\r\n      }).then(() => {\r\n        NotifSucces(\"Data Berhasil Di Hapus\").then(() =>\r\n          dispatch(getDataTukang())\r\n        );\r\n      }).catch((err) => {\r\n        ToastNotification(\"error\", err.response.data)\r\n      })\r\n    }\r\n  });\r\n};\r\nclass MasterTukang extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isEdit: false,\r\n      isLoading: false,\r\n      modalDialog: false,\r\n      columns: [\r\n        {\r\n          dataField: \"kode_tukang\",\r\n          text: \"Kode Tukang\",\r\n          sort: true,\r\n        },\r\n        {\r\n          dataField: \"nama_tukang\",\r\n          text: \"Nama Tukang\",\r\n        },\r\n        {\r\n          dataField: \"action\",\r\n          text: \"Action\",\r\n          csvExport: false,\r\n          headerClasses: \"text-center\",\r\n          formatter: (rowcontent, row) => {\r\n            let dataEdit = {\r\n              kode_sales: row.kode_tukang,\r\n              nama_tukang: row.nama_tukang,\r\n            };\r\n             \r\n            return (\r\n              <div className=\"row text-center\">\r\n                <div className=\"col-12\">\r\n                  <button\r\n                    onClick={() => this.formEditTukang(dataEdit)}\r\n                    className=\"btn btn-primary mr-3\"\r\n                  >\r\n                    <i className=\"fa fa-edit\"></i>\r\n                  </button>\r\n                  <button\r\n                    onClick={() =>\r\n                      hapusDataTukang(row.kode_tukang, this.props.dispatch)\r\n                    }\r\n                    className=\"btn btn-danger\"\r\n                  >\r\n                    <i className=\"fa fa-trash\"></i>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n      ],\r\n      // dataTukang: [\r\n      //   {\r\n      //     kode_tukang: \"SAM\",\r\n      //     nama_tukang: \"Samsul Arifin\",\r\n      //   },\r\n      // ],\r\n    };\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.dispatch(getDataTukang());\r\n  }\r\n  handleSubmit(data) {\r\n    this.setState({ isLoading: true });\r\n    let data_edit = {\r\n      nama_tukang: data.nama_tukang,\r\n    };\r\n    let data_post = {\r\n      kode_tukang: data.kode_tukang,\r\n      nama_tukang: data.nama_tukang,\r\n    };\r\n    this.state.isEdit\r\n      ? putData(\"tukang/edit/by-kode-tukang/\" + data.kode_tukang, data_edit)\r\n          .then(() => {\r\n            this.props.dispatch(hideModal());\r\n          })\r\n          .then(() => {\r\n            ToastNotification(\"success\", \"Data Berhasil Diedit\");\r\n          })\r\n          .then(() => {\r\n            this.props.dispatch(getDataTukang());\r\n          })\r\n          .then(() => {\r\n            this.setState({ isLoading: false });\r\n          })\r\n          .then(() => {\r\n            this.props.dispatch(reset(\"ModalTukang\"));\r\n          })\r\n        .catch((error) => {\r\n          ToastNotification(\"info\", \"Terjadi Kesalahan Saat Mengirim Data\")\r\n          this.setState({ isLoading: false });\r\n          })\r\n      : postData(\"tukang/add\", data_post)\r\n          .then(() => {\r\n            this.props.dispatch(hideModal());\r\n          })\r\n          .then(() => {\r\n            ToastNotification(\"success\", \"Data Berhasil Simpan\");\r\n          })\r\n          .then(() => {\r\n            this.props.dispatch(getDataTukang());\r\n          })\r\n          .then(() => {\r\n            this.props.dispatch(reset(\"ModalTukang\"));\r\n          })\r\n          .then(() => {\r\n            this.setState({ isLoading: false });\r\n          })\r\n          .catch((error) =>\r\n            ErrorHandling(\r\n              error,\r\n              \"tukang/reactive/by-kode-tukang/\",\r\n              data.kode_tukang,\r\n              data_post,\r\n              this.props.dispatch,\r\n              getDataTukang(),\r\n              hideModal(),\r\n              \"ModalTukang\"\r\n            ).then(() => {\r\n              this.setState({ isLoading: false });\r\n            })\r\n          );\r\n  }\r\n  formEditTukang(dataEdit) {\r\n    this.props.dispatch(showModal());\r\n    this.props.dispatch(ShowModalTukang(dataEdit));\r\n    this.setState({\r\n      isEdit: true,\r\n    });\r\n  }\r\n  ShowModalTukang() {\r\n    this.props.dispatch(showModal());\r\n    this.props.dispatch(ShowModalTukang(false));\r\n    this.setState({\r\n      isEdit: false,\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ol className=\"breadcrumb float-xl-right\">\r\n          <li className=\"breadcrumb-item\">\r\n            <Link to=\"#\">Data Master</Link>\r\n          </li>\r\n          <li className=\"breadcrumb-item active\">Master Tukang</li>\r\n        </ol>\r\n        <h1 className=\"page-header\">Master Tukang </h1>\r\n        <Panel>\r\n          <PanelHeader>Master Tukang</PanelHeader>\r\n          <br />\r\n\r\n          {/* Master Tukang */}\r\n          <div className=\"container\">\r\n            <Tabel\r\n              keyField=\"kode_tukang\"\r\n              tambahData={true}\r\n              handleClick={() => this.ShowModalTukang()}\r\n              exportCsv={true}\r\n              data={this.props.DataTukang}\r\n              columns={this.state.columns}\r\n              empty={this.props.DataTukang}\r\n              textEmpty=\"Data Tukang Kosong\"\r\n            />\r\n          </div>\r\n          <br />\r\n          {/* End Master Tukang */}\r\n          <ModalGlobal\r\n            size=\"P\"\r\n            title={\r\n              this.state.isEdit ? \"Edit Data Tukang\" : \"Tambah Data Tukang\"\r\n            }\r\n            content={\r\n              <FormModalTukang\r\n                isLoading={this.state.isLoading}\r\n                isEdit={this.state.isEdit}\r\n                onSubmit={(data) => this.handleSubmit(data)}\r\n              />\r\n            }\r\n          />\r\n\r\n          {/* <Modal  title={ this.state.isEdit ? 'Edit Data Tukang' : 'Tambah Data Tukang' } content={ <FormModalKategori isEdit={this.state.isEdit} /> } isOpen={ this.props.hideModal} onSubmit={ (data)=>this.handleSubmit(data) } /> */}\r\n\r\n          {/* End Tambah Master Tukang  */}\r\n        </Panel>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(maptostate, null)(MasterTukang);\r\n"],"sourceRoot":""}