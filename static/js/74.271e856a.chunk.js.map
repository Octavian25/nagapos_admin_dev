{"version":3,"sources":["pages/Laporan/LaporanBarang/FormLaporanTambahBarang/exel/LaporanTambahBarangExel.jsx","pages/Laporan/LaporanBarang/FormLaporanTambahBarang/pdf/CetakLaporanTambahBarang.jsx","pages/Laporan/LaporanBarang/FormLaporanTambahBarang/pdf/CetakLaporanTambahBarangGlobalBaki.jsx","pages/Laporan/LaporanBarang/FormLaporanTambahBarang/exel/LaporanTambahBarangExelGlobalBaki.jsx","pages/Laporan/LaporanBarang/FormLaporanTambahBarang/exel/LaporanTambahBarangExelGlobalJenis.jsx","pages/Laporan/LaporanBarang/FormLaporanTambahBarang/pdf/CetakLaporanTambahBarangGlobalJenis.jsx","pages/Laporan/LaporanBarang/FormLaporanTambahBarang/HeadFilterLaporan.jsx","pages/Laporan/LaporanBarang/FormLaporanTambahBarang/FormLaporanTambahBarang.jsx","../node_modules/react-html-table-to-excel/index.js"],"names":["LaporanTambahBarangExel","props","_this","Object","classCallCheck","this","_super","call","state","react_default","a","createElement","Fragment","react_html_table_to_excel_default","id","className","table","filename","sheet","buttonText","rowkey","style","display","colSpan","textAlign","getUserdata","nama_toko","alamat_toko","backgroundColor","color","data","map","item","index","key","kode_barcode","kode_gudang","kode_toko","kode_group","kode_dept","nama_barang","nama_atribut","formatGram","berat","berat_asli","berat_atribut","harga_jual","toLocaleString","list","reduce","b","Component","CetakLaporanTambahBarang","tableColumn","arguments","length","undefined","doc","jsPDF","tableRows","finalY","total_berat","total_berat_atribut","total_berat_asli","total_hargaJUal","setFontSize","text","jml_alamat","slice","setProperties","title","concat","localStoragedecryp","JSON","parse","tgl_awal","tgl_akhir","content","styles","halign","forEach","rows","cellWidth","push","footer","fillColor","textColor","toFixed","printed","user_id","getToday","fontStyle","autoTable","head","body","startY","theme","rowPageBreak","margin","top","bodyStyles","fontSize","headStyles","autoTableEndPosY","pages","internal","getNumberOfPages","pageWidth","pageSize","width","pageHeight","height","j","horizontalPos","verticalPos","setPage","align","save","CetakLaporanTambahBarangGlobalBaki","total_berat_tambah","total_stock_tambah","total_berat_asli_tambah","stock_tambah","berat_asli_tambah","berat_tambah","LaporanTambahBarangExelGlobalBaki","LaporanTambahBarangExelGlobalJenis","nama_dept","CetakLaporanTambahBarangGlobalJenis","string","output","x","window","open","document","write","HeadFilterLaporan","loading","data_per_baki","data_per_jenis","table_per_baki","table_per_jenis","isLoading","setStartDate","bind","assertThisInitialized","setLastDate","dispatch","getDataBaki","getDataJenis","change","getTglSystem","date","setState","Date","ToastNotification","_this2","data_post","formatDate","moment","format","getData","then","res","export","LaporanBarangDetail","localStorageencryp","stringify","table_per_normal","catch","error","errorHandling","_this3","err","NotifError","_this4","databaki","value","name","kode_baki","nama_baki","dataJenis","onSubmit","handleSubmit","autoComplete","onKeyPress","e","preventDefault","Field","component","InputDate","label","type","defaultValue","selected","onChange","placeholder","options","ReanderSelect","field","disabled","submitting","onClick","GlobalPerBaki","GlobalPerJenis","tabel","keyField","columns","columns_per_baki","empty","textEmpty","columns_per_jenis","exportPdf","exel_LaporanTambahBarangExel","exportPdfGlobalBaki","exel_LaporanTambahBarangExelGlobalBaki","exportPdfGlobalJenis","exel_LaporanTambahBarangExelGlobalJenis","loading_default","background","loaderColor","reduxForm","form","enableReinitialize","selector","formValueSelector","connect","datamaster","initialValues","FormLaporanTambahBarang","isEdit","modalDialog","dataField","headerClasses","formatter","cell","parseFloat","username","postDataNoTImeOut","react_router_dom","to","panel","FormLaporanTambahBarang_HeadFilterLaporan","React","hideModal","defineProperty","exports","_createClass","defineProperties","target","i","descriptor","enumerable","configurable","writable","Constructor","protoProps","staticProps","prototype","_react","__webpack_require__","_react2","_interopRequireDefault","_propTypes2","obj","__esModule","default","propTypes","isRequired","ReactHTMLTableToExcel","_Component","instance","TypeError","_classCallCheck","self","ReferenceError","_possibleConstructorReturn","__proto__","getPrototypeOf","handleDownload","subClass","superClass","create","constructor","setPrototypeOf","_inherits","getElementById","nodeType","nodeName","outerHTML","String","context","worksheet","navigator","msSaveOrOpenBlob","blobObject","Blob","click","element","href","base64","download","appendChild","removeChild","s","btoa","unescape","encodeURIComponent","c","replace","m","p","defaultProps"],"mappings":"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","file":"static/js/74.271e856a.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport ReactHTMLTableToExcel from \"react-html-table-to-excel\";\r\nimport { formatGram, getUserdata } from \"../../../../../components/helpers/function\";\r\n\r\nclass LaporanTambahBarangExel extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n    render() {\r\n    return (\r\n      <>\r\n        <ReactHTMLTableToExcel\r\n          id=\"test-table-xls-button\"\r\n          className=\"btn btn-success btn-block\"\r\n          table=\"table-to-xls\"\r\n          filename=\"Laporan Tambah Barang\"\r\n          sheet=\"Laporan Tambah Barang\"\r\n          buttonText=\"Export Exel\"\r\n        />\r\n        <table rowkey=\"kode_member\" id=\"table-to-xls\" style={{ display: \"none\" }}>\r\n        <thead>\r\n              <tr>\r\n                <th colSpan=\"12\" style={{textAlign : \"center\"}}> LAPORAN TAMBAH BARANG </th>\r\n              </tr>\r\n              <tr>\r\n              <th colSpan=\"12\"> TOKO :  {getUserdata(getUserdata).nama_toko} </th>\r\n            </tr>\r\n           \r\n            <tr>\r\n              <th colSpan=\"12\"> ALAMAT :  {getUserdata().alamat_toko} </th>\r\n            </tr>\r\n            <tr></tr>\r\n            <tr >\r\n                <th  style={{ backgroundColor: \"#E8E5E5\", color: \"#000\"}}>NO</th>\r\n                <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\"}}>KODE BARCODE</th>\r\n                <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\"}}>KODE GUDANG</th>\r\n                <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\"}}>KODE TOKO</th>\r\n                <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\"}}>KODE GROUP</th>\r\n                <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\"}}>KODE JENIS</th>\r\n                <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\"}}>NAMA BARANG</th>\r\n                <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\"}}>NAMA ATRIBUT</th>\r\n                <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\"}}>BERAT</th>\r\n                <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\"}}>BERAT ASLI</th>\r\n                <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\"}}>BERAT ATRIBUT</th>\r\n                <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\"}}>HARGA JUAL</th>\r\n                {/* <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\"}}>JUMLAH</th> */}\r\n            </tr>\r\n        </thead>\r\n            \r\n            <tbody>\r\n            {this.props.data.map((item, index) => (\r\n                    <tr key={index}>\r\n                        <td style={{ textAlign : \"center\" }}> {index+1}</td>\r\n                        <td>&nbsp;{item.kode_barcode}</td>\r\n                        <td> {item.kode_gudang}</td>\r\n                        <td> {item.kode_toko}</td>\r\n                        <td> {item.kode_group}</td>\r\n                        <td> {item.kode_dept}</td>\r\n                        <td> {item.nama_barang}</td>\r\n                        <td> {item.nama_atribut}</td>\r\n                        <td style={{textAlign : \"right\"}}> {formatGram(item.berat,3)}</td>\r\n                        <td style={{textAlign : \"right\"}}> {formatGram(item.berat_asli,3)}</td>\r\n                        <td style={{textAlign : \"right\"}}> {formatGram(item.berat_atribut,3)}</td>\r\n                        <td style={{textAlign : \"right\"}}> {item.harga_jual.toLocaleString(\"kr-KO\")}</td>\r\n                        {/* <td style={{ border: \"1px solid #000\" }}> {item.stock_on_hand}</td> */}\r\n                    </tr>\r\n             ))}\r\n            </tbody>\r\n                    \r\n            <tfoot>\r\n                <tr>\r\n                    <th style={{backgroundColor: \"#E8E5E5\", color: \"#000\",textAlign : \"center\" }} colSpan=\"8\">  </th>    \r\n                    <th style={{backgroundColor: \"#E8E5E5\", color: \"#000\",textAlign : \"right\"}}> {formatGram(this.props.data.map(list => list.berat).reduce((a,b) => a+b,0),3)}   </th>    \r\n                    <th style={{backgroundColor: \"#E8E5E5\", color: \"#000\",textAlign : \"right\"}}> {formatGram(this.props.data.map(list => list.berat_asli).reduce((a,b) => a+b,0),3)}  </th>    \r\n                    <th style={{backgroundColor: \"#E8E5E5\", color: \"#000\",textAlign : \"right\"}}> {formatGram(this.props.data.map(list => list.berat_atribut).reduce((a,b) => a+b,0),3)}  </th>    \r\n                    <th style={{backgroundColor: \"#E8E5E5\", color: \"#000\",textAlign : \"right\"}}> {this.props.data.map(list => list.harga_jual).reduce((a,b) => a+b,0).toLocaleString(\"kr-KO\")}  </th>    \r\n                </tr>\r\n            </tfoot>\r\n        </table>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default LaporanTambahBarangExel;\r\n","import jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\nimport { getToday, formatGram,localStoragedecryp, getUserdata } from \"../../../../../components/helpers/function\";\r\n// Date Fns is used to format the dates we receive\r\n\r\n// define a generatePDF function that accepts a tickets argument\r\nconst CetakLaporanTambahBarang = (\r\n  data = \"\",\r\n) => {\r\n  // initialize jsPDF\r\n  const doc = new jsPDF(\"l\", \"mm\", [297, 210]);\r\n  //   let data = JSON.parse(localStorage.getItem(\"tt_pengeluaran_barang\")) || [];\r\n  let tableRows = [];\r\n  // let footRows = [];\r\n  let tableColumn = [];\r\n  let finalY = 30;\r\n  let total_berat = 0;\r\n  let total_berat_atribut = 0;\r\n  let total_berat_asli = 0;\r\n  let total_hargaJUal = 0;\r\n\r\n\r\n  doc.setFontSize(15);\r\n  doc.text(\"LAPORAN TAMBAH BARANG\", 14, 15);\r\n  doc.setFontSize(20);\r\n  doc.text(getUserdata().nama_toko, 200, 15);\r\n  doc.setFontSize(8);\r\n  let jml_alamat = getUserdata().alamat_toko.length;\r\n  if (jml_alamat > 20) {\r\n    doc.text(getUserdata().alamat_toko.slice(0,48), 200, 20);\r\n  }\r\n  if (jml_alamat > 50) {\r\n    doc.text(getUserdata().alamat_toko.slice(48,90), 200, 25);\r\n  }\r\n  doc.setFontSize(10);\r\n  doc.setProperties({\r\n    title: \"LAPORAN TAMBAH BARANG\",\r\n  });\r\n  doc.text(\r\n    `PERIODE : ${\r\n      localStoragedecryp(\"tgl_laporan\").length === 0\r\n        ? null\r\n        : JSON.parse(localStoragedecryp(\"tgl_laporan\")).tgl_awal +\r\n          \" s/d \" +\r\n          JSON.parse(localStoragedecryp(\"tgl_laporan\")).tgl_akhir\r\n    }`,\r\n    14,\r\n    25\r\n  );\r\n  tableColumn = [\r\n    [\r\n      {\r\n        content: `NO`,\r\n      },\r\n      {\r\n        content: `KODE BARCODE`,\r\n      },\r\n      {\r\n        content: `KODE GUDANG`,\r\n      },\r\n      {\r\n        content: `KODE TOKO`,\r\n        \r\n      },\r\n      {\r\n        content: `KODE GROUP`,\r\n      },\r\n      {\r\n        content: `KODE JENIS`,\r\n      },\r\n      {\r\n        content: `NAMA BARANG`,\r\n      },\r\n      {\r\n        content: `NAMA ATRIBUT`,\r\n      },\r\n      {\r\n        content: `BERAT`,\r\n        styles: {\r\n          halign: 'right'\r\n        },\r\n      },\r\n      {\r\n        content: `BERAT ASLI`,\r\n        styles: {\r\n          halign: 'right'\r\n        },\r\n      },\r\n     \r\n      {\r\n        content: `BERAT ATRIBUT`,\r\n        styles: {\r\n          halign: 'right'\r\n        },\r\n      },\r\n      {\r\n        content: `HARGA JUAL`,\r\n        styles: {\r\n          halign: 'right'\r\n        },\r\n      },\r\n      // {\r\n      //   content: `JUMLAH`,\r\n      // },\r\n    ],\r\n  ];\r\n\r\n  data.forEach((item, index) => {\r\n    // item.list_barang.forEach((barang, index) => {\r\n    let rows = [\r\n      // ++index,\r\n      {\r\n        content: `${++index}`,\r\n        styles: {\r\n          cellWidth : 10\r\n        },\r\n      },\r\n      item.kode_barcode,\r\n      item.kode_gudang,\r\n      item.kode_toko,\r\n      item.kode_group,\r\n      item.kode_dept,\r\n      item.nama_barang,\r\n      item.nama_atribut,\r\n      {\r\n        content: formatGram(item.berat,3),\r\n        styles: {\r\n          halign: 'right'\r\n        },\r\n      },\r\n      {\r\n        content: formatGram(item.berat_asli,3),\r\n        styles: {\r\n          halign: 'right'\r\n        },\r\n      },\r\n      {\r\n        content: formatGram(item.berat_atribut,3),\r\n        styles: {\r\n          halign: 'right'\r\n        },\r\n      },\r\n      {\r\n        content: item.harga_jual.toLocaleString(\"kr-KO\"),\r\n        styles: {\r\n          halign: 'right'\r\n        },\r\n      },\r\n      // item.stock_on_hand,\r\n     \r\n    ];\r\n    total_berat = total_berat + item.berat;\r\n    total_berat_asli = total_berat_asli + item.berat_asli;\r\n    total_berat_atribut = total_berat_atribut + item.berat_atribut;\r\n    total_hargaJUal = total_hargaJUal + item.harga_jual;\r\n    tableRows.push(rows);\r\n  });\r\n  \r\n  // let footer = [\r\n  //   ``,\r\n  //   ``,\r\n  //   ``,\r\n  //   ``,\r\n  //   ``,\r\n  //   ``,\r\n  //   `${total_berat.toFixed(1)}`,\r\n  //   ``,\r\n  //   `${total_berat_atribut.toFixed(1)}`,\r\n  //   `${total_stock.toLocaleString('kr-KO')}`,\r\n  // ];\r\n  let footer = [\r\n    {\r\n      content: `Total Berat`,\r\n      colSpan: 7,\r\n      styles: {\r\n        halign: 'center',\r\n        fillColor: \"#E8E5E5\",\r\n        textColor: \"#000\",\r\n      },\r\n    },\r\n    {\r\n      content: ` `,\r\n      styles: {\r\n        fillColor: \"#E8E5E5\",\r\n        textColor: \"#000\",\r\n      },\r\n    },\r\n    {\r\n      content: `${total_berat.toFixed(3)}`,\r\n      styles: {\r\n        fillColor: \"#E8E5E5\",\r\n        textColor: \"#000\",\r\n        halign: 'right'\r\n      },\r\n    },\r\n    {\r\n      content: `${total_berat_asli.toFixed(3)}`,\r\n      styles: {\r\n        fillColor: \"#E8E5E5\",\r\n        textColor: \"#000\",\r\n        halign: 'right'\r\n      },\r\n    },\r\n    \r\n    {\r\n      content: `${total_berat_atribut.toFixed(3)}`,\r\n      styles: {\r\n        fillColor: \"#E8E5E5\",\r\n        textColor: \"#000\",\r\n        halign: 'right'\r\n      },\r\n    },\r\n    {\r\n      content: `${total_hargaJUal.toLocaleString(\"kr-KO\")}`,\r\n      styles: {\r\n        fillColor: \"#E8E5E5\",\r\n        textColor: \"#000\",\r\n        halign: 'right'\r\n      },\r\n    },\r\n    // `${sub_qty}`,\r\n  ];\r\n  tableRows.push(footer);\r\n  let printed = [\r\n    {\r\n      colSpan: 6,\r\n      content: `Printed By ${JSON.parse(localStoragedecryp(\"userdata\")).user_id} / ${getToday()}`,\r\n      styles: {\r\n        // lineWidth: 0.1,\r\n        fontStyle: \"italic\",\r\n        textColor: \"#000\",\r\n        // fillColor: \"#E8E5E5\"\r\n      },\r\n    },\r\n  ]\r\n  tableRows.push(printed);\r\n  doc.autoTable({\r\n    head: tableColumn,\r\n    body: tableRows,\r\n    // foot: footRows,\r\n    startY: finalY,\r\n    theme: \"plain\",\r\n    rowPageBreak: \"avoid\",\r\n    // pageBreak: \"avoid\",\r\n    margin: { top: 10 },\r\n    bodyStyles: {\r\n      // lineWidth: 0.02,\r\n      // lineColor: \"#000\",\r\n      fontSize: 8,\r\n    },\r\n    headStyles: {\r\n      fontSize: 8,\r\n      // lineWidth: 0.02,\r\n      // lineColor: \"#000\",\r\n      textColor: \"#000\",\r\n      fillColor: \"#E8E5E5\",\r\n    },\r\n  });\r\n  finalY = doc.autoTableEndPosY() + 3;\r\n  tableRows = [];\r\n  // footRows = [];\r\n  // total_berat = 0;\r\n  // const date = Date().split(\" \");\r\n  // we use a date string to generate our filename.\r\n  // const dateStr = date[2] + date[3] + date[4];\r\n  // ticket title. and margin-top + margin-left\r\n  // doc.text(`Total Berat                    :  ${total_berat.toFixed(1)}`, 14, finalY + 10);\r\n  // doc.text(`Berat Atribut                  :  ${total_berat_atribut.toFixed(1)}`, 14, finalY + 16);\r\n  // doc.text(`Stock                             :  ${total_stock.toLocaleString('kr-KO')}`, 14, finalY + 22);\r\n  // doc.text(`User                              :  ${JSON.parse(localStoragedecryp(\"userdata\")).user_id}`, 14, finalY + 10);\r\n  // doc.text(`Cetak                            : ${getToday()}`, 14, finalY + 16);\r\n  const pages = doc.internal.getNumberOfPages();\r\n  const pageWidth = doc.internal.pageSize.width; //Optional\r\n  const pageHeight = doc.internal.pageSize.height; //Optional\r\n  doc.setFontSize(10); //Optional\r\n  for (let j = 1; j < pages + 1; j++) {\r\n    let horizontalPos = pageWidth / 2; //Can be fixed number\r\n    let verticalPos = pageHeight - 10; //Can be fixed number\r\n    doc.setPage(j);\r\n    doc.text(`${j} of ${pages}`, horizontalPos, verticalPos, {\r\n      align: \"center\",\r\n    });\r\n  }\r\n  // doc.autoPrint();\r\n  doc.save(`LAPORAN BARANG DETAIL.pdf`);\r\n  // var string = doc.output(\"datauristring\");\r\n  // // var embed = \"<embed width='100%' height='100%' src='\" + string + \"'/>\";\r\n  // var x = window.open();\r\n  // x.document.open();\r\n  // x.document.write(\r\n  //   \"<html><head><title>LAPORAN TAMBAH BARANG</title></head><body style='margin:0 !important'><embed width='100%' height='100%'  src=\" +\r\n  //     string +\r\n  //     \"></embed></body></html>\"\r\n  // );\r\n  // x.document.write(embed);\r\n  // setInterval(() => {\r\n  //   x.close();\r\n  // }, 1000);\r\n};\r\n\r\nexport default CetakLaporanTambahBarang;\r\n// import jsPDF from \"jspdf\";\r\n// import \"jspdf-autotable\";\r\n// import { getToday } from \"../../../../components/helpers/function\";\r\n// // Date Fns is used to format the dates we receive\r\n\r\n// // define a generatePDF function that accepts a tickets argument\r\n// const CetakLaporanTambahBarang = (data = \"\", username = \"\", kode_baki = \"\") => {\r\n//   const doc = new jsPDF(\"l\");\r\n//   doc.setFontSize(15);\r\n//   doc.text(\"LAPORAN  BARANG DETAIL\", 14, 15);\r\n//   doc.setFontSize(10);\r\n//   doc.setProperties({\r\n//     title: \"LAPORAN  BARANG DETAIL\",\r\n//   });\r\n//   //row 1\r\n//   doc.text(`Kode Baki : ${kode_baki}`, 14, 23);\r\n//   let tableRows = [];\r\n//   let finalY = 10;\r\n//   let footRows = [];\r\n//   let total = 0;\r\n//   let sub_qty = 0;\r\n//   let sub_brt = 0;\r\n//   let tableColumn = [\r\n//     \"NO\",\r\n//     \"KODE BARANG\",\r\n//     \"KODE BARCODE\",\r\n//     \"KODE INTERN\",\r\n//     \"KODE GUDANG\",\r\n//     \"NAMA BARANG\",\r\n//     \"BERAT\",\r\n//     \"NAMA ATRIBUTE\",\r\n//     \"BERAT ATRIBUTE\",\r\n//     \"JUMLAH\",\r\n//   ];\r\n\r\n//   // console.log(JSON.stringify(data));\r\n//   // localStorage.setItem('hasil',JSON.stringify(data));\r\n//   data.forEach((item, index) => {\r\n//     // item.list_barang.forEach((barang, index) => {\r\n//     let rows = [\r\n//       ++index,\r\n//       item.kode_barang,\r\n//       item.kode_barcode,\r\n//       item.kode_intern,\r\n//       item.kode_gudang,\r\n//       item.nama_barang,\r\n//       item.berat,\r\n//       item.nama_atribut,\r\n//       item.berat_atribut,\r\n//       item.stock_on_hand,\r\n//     ];\r\n//     total = index;\r\n//     sub_qty = sub_qty + parseFloat(item.stock_on_hand);\r\n//     sub_brt = sub_brt + parseFloat(item.berat);\r\n//     tableRows.push(rows);\r\n//     let footer = [\r\n//       \"\",\r\n//       \"\",\r\n//       \"\",\r\n//       \"\",\r\n//       \"Sub Total\",\r\n//       \"\",\r\n//       `${sub_brt.toFixed(3)}`,\r\n//       \"\",\r\n//       \"\",\r\n//       `${sub_qty}`,\r\n//     ];\r\n//     footRows.push(footer);\r\n//     doc.autoTable(tableColumn, tableRows, {\r\n//       startY: index === 0 ? 35 : finalY + 15,\r\n//         theme: \"plain\",\r\n//       foot: footRows,\r\n//       rowPageBreak: \"avoid\",\r\n//       pageBreak: \"avoid\",\r\n//       bodyStyles: { lineWidth: 0.02, lineColor: \"#000\" },\r\n//       headStyles: {\r\n//         lineWidth: 0.02,\r\n//         lineColor: \"#000\",\r\n//         fillColor: [187, 187, 187],\r\n//       },\r\n//       // theme: \"\",\r\n//     });\r\n//     finalY = doc.lastAutoTable.finalY + 10;\r\n//     tableRows = [];\r\n//   });\r\n//   // let footer = [\r\n//   //   \"\",\r\n//   //   \"\",\r\n//   //   \"\",\r\n//   //   \"Total Barang : \",\r\n//   //   \"\" + parseFloat(total).toLocaleString(\"kr-KO\"),\r\n//   // ];\r\n//   // tableRows.push(footer);\r\n\r\n//   doc.text(`Total Barang\t: ${total}`, 14, finalY + 5);\r\n//   doc.text(`User\t             : ${username}`, 14, finalY + 10);\r\n//   doc.text(`Tgl Cetak             : ${getToday()}`, 14, finalY + 16);\r\n\r\n//   // doc.autoPrint();\r\n//   // doc.save(`Laporan BARANG DETAIL.pdf`);\r\n//   var string = doc.output(\"datauristring\");\r\n//   var x = window.open();\r\n//   x.document.open();\r\n//   x.document.write(\r\n//     \"<html><head><title>LAPORAN  BARANG DETAIL</title></head><body style='margin:0 !important'><embed width='100%' height='100%'  src=\" +\r\n//       string +\r\n//       \"></embed></body></html>\"\r\n//   );\r\n//   x.document.close();\r\n// };\r\n\r\n// export default CetakLaporanTambahBarang;\r\n","import jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\nimport { getToday, formatGram,localStoragedecryp, getUserdata } from \"../../../../../components/helpers/function\";\r\n// Date Fns is used to format the dates we receive\r\n\r\n// define a generatePDF function that accepts a tickets argument\r\nconst CetakLaporanTambahBarangGlobalBaki = (\r\n  data = \"\",\r\n) => {\r\n  // initialize jsPDF\r\n  const doc = new jsPDF(\"l\", \"mm\", [297, 210]);\r\n  //   let data = JSON.parse(localStorage.getItem(\"tt_pengeluaran_barang\")) || [];\r\n  let tableRows = [];\r\n  // let footRows = [];\r\n  let tableColumn = [];\r\n  let finalY = 30;\r\n  let total_berat_tambah = 0;\r\n  let total_stock_tambah = 0;\r\n  let total_berat_asli_tambah = 0;\r\n\r\n\r\n  doc.setFontSize(15);\r\n  doc.text(\"LAPORAN TAMBAH STOCK\", 14, 15);\r\n  doc.setFontSize(20);\r\n  doc.text(getUserdata().nama_toko, 200, 15);\r\n  doc.setFontSize(8);\r\n  let jml_alamat = getUserdata().alamat_toko.length;\r\n  if (jml_alamat > 20) {\r\n    doc.text(getUserdata().alamat_toko.slice(0,48), 200, 20);\r\n  }\r\n  if (jml_alamat > 50) {\r\n    doc.text(getUserdata().alamat_toko.slice(48,90), 200, 25);\r\n  }\r\n  doc.setFontSize(10);\r\n  doc.setProperties({\r\n    title: \"LAPORAN TAMBAH STOCK\",\r\n  });\r\n  doc.text(\r\n    `PERIODE : ${\r\n      localStoragedecryp(\"tgl_laporan\").length === 0\r\n        ? null\r\n        : JSON.parse(localStoragedecryp(\"tgl_laporan\")).tgl_awal +\r\n          \" s/d \" +\r\n          JSON.parse(localStoragedecryp(\"tgl_laporan\")).tgl_akhir\r\n    }`,\r\n    14,\r\n    25\r\n  );\r\n  tableColumn = [\r\n    [\r\n      {\r\n        content: `NO`,\r\n      },\r\n      {\r\n        content: `KODE BAKI`,\r\n      },\r\n      {\r\n        content: `NAMA BAKI`,\r\n      },\r\n  \r\n      {\r\n        content: `TAMBAH PTG`,\r\n        styles: {\r\n          halign: 'right'\r\n        },\r\n      },\r\n      // {\r\n      //   content: `BERAT TAMBAH`,\r\n      //   styles: {\r\n      //     halign: 'right'\r\n      //   },\r\n      // },\r\n      {\r\n        content: `BERAT ASLI`,\r\n        styles: {\r\n          halign: 'right'\r\n        },\r\n      },\r\n      // {\r\n      //   content: `JUMLAH`,\r\n      // },\r\n    ],\r\n  ];\r\n\r\n  data.forEach((item, index) => {\r\n    // item.list_barang.forEach((barang, index) => {\r\n    let rows = [\r\n      // ++index,\r\n      {\r\n        content: `${++index}`,\r\n        styles: {\r\n          cellWidth : 10\r\n        },\r\n      },\r\n      item.kode_toko,\r\n      item.nama_toko,\r\n      {\r\n        content: item.stock_tambah,\r\n        styles: {\r\n          halign: 'right'\r\n        },\r\n      },\r\n      // {\r\n      //   content: formatGram(item.berat_tambah,3),\r\n      //   styles: {\r\n      //     halign: 'right'\r\n      //   },\r\n      // },\r\n      {\r\n        content: formatGram(item.berat_asli_tambah,3),\r\n        styles: {\r\n          halign: 'right'\r\n        },\r\n      },\r\n      // item.stock_on_hand,\r\n    ];\r\n    total_stock_tambah = total_stock_tambah + item.stock_tambah;\r\n    total_berat_tambah = total_berat_tambah + item.berat_tambah;\r\n    total_berat_asli_tambah = total_berat_asli_tambah + item.berat_asli_tambah || 0;\r\n    tableRows.push(rows);\r\n  });\r\n  \r\n  // let footer = [\r\n  //   ``,\r\n  //   ``,\r\n  //   ``,\r\n  //   ``,\r\n  //   ``,\r\n  //   ``,\r\n  //   `${total_berat.toFixed(1)}`,\r\n  //   ``,\r\n  //   `${total_berat_atribut.toFixed(1)}`,\r\n  //   `${total_stock.toLocaleString('kr-KO')}`,\r\n  // ];\r\n  let footer = [\r\n    {\r\n      content: `Total`,\r\n      colSpan: 3,\r\n      styles: {\r\n        halign: 'center',\r\n        fillColor: \"#E8E5E5\",\r\n        textColor: \"#000\",\r\n      },\r\n    },\r\n    {\r\n      content: `${total_stock_tambah}`,\r\n      styles: {\r\n        fillColor: \"#E8E5E5\",\r\n        textColor: \"#000\",\r\n        halign: 'right'\r\n      },\r\n    },\r\n    {\r\n      content: `${formatGram(total_berat_tambah, 3)}`,\r\n      styles: {\r\n        fillColor: \"#E8E5E5\",\r\n        textColor: \"#000\",\r\n        halign: 'right'\r\n      },\r\n    },\r\n    {\r\n      content: `${formatGram(total_berat_asli_tambah, 3)}`,\r\n      styles: {\r\n        fillColor: \"#E8E5E5\",\r\n        textColor: \"#000\",\r\n        halign: 'right'\r\n      },\r\n    },\r\n    // `${sub_qty}`,\r\n  ];\r\n  tableRows.push(footer);\r\n  let printed = [\r\n    {\r\n      colSpan: 6,\r\n      content: `Printed By ${JSON.parse(localStoragedecryp(\"userdata\")).user_id} / ${getToday()}`,\r\n      styles: {\r\n        // lineWidth: 0.1,\r\n        fontStyle: \"italic\",\r\n        textColor: \"#000\",\r\n        // fillColor: \"#E8E5E5\"\r\n      },\r\n    },\r\n  ]\r\n  tableRows.push(printed);\r\n  doc.autoTable({\r\n    head: tableColumn,\r\n    body: tableRows,\r\n    // foot: footRows,\r\n    startY: finalY,\r\n    theme: \"plain\",\r\n    rowPageBreak: \"avoid\",\r\n    // pageBreak: \"avoid\",\r\n    margin: { top: 10 },\r\n    bodyStyles: {\r\n      // lineWidth: 0.02,\r\n      // lineColor: \"#000\",\r\n      fontSize: 8,\r\n    },\r\n    headStyles: {\r\n      fontSize: 8,\r\n      // lineWidth: 0.02,\r\n      // lineColor: \"#000\",\r\n      textColor: \"#000\",\r\n      fillColor: \"#E8E5E5\",\r\n    },\r\n  });\r\n  finalY = doc.autoTableEndPosY() + 3;\r\n  tableRows = [];\r\n  // footRows = [];\r\n  // total_berat = 0;\r\n  // const date = Date().split(\" \");\r\n  // we use a date string to generate our filename.\r\n  // const dateStr = date[2] + date[3] + date[4];\r\n  // ticket title. and margin-top + margin-left\r\n  // doc.text(`Total Berat                    :  ${total_berat.toFixed(1)}`, 14, finalY + 10);\r\n  // doc.text(`Berat Atribut                  :  ${total_berat_atribut.toFixed(1)}`, 14, finalY + 16);\r\n  // doc.text(`Stock                             :  ${total_stock.toLocaleString('kr-KO')}`, 14, finalY + 22);\r\n  // doc.text(`User                              :  ${JSON.parse(localStoragedecryp(\"userdata\")).user_id}`, 14, finalY + 10);\r\n  // doc.text(`Cetak                            : ${getToday()}`, 14, finalY + 16);\r\n  const pages = doc.internal.getNumberOfPages();\r\n  const pageWidth = doc.internal.pageSize.width; //Optional\r\n  const pageHeight = doc.internal.pageSize.height; //Optional\r\n  doc.setFontSize(10); //Optional\r\n  for (let j = 1; j < pages + 1; j++) {\r\n    let horizontalPos = pageWidth / 2; //Can be fixed number\r\n    let verticalPos = pageHeight - 10; //Can be fixed number\r\n    doc.setPage(j);\r\n    doc.text(`${j} of ${pages}`, horizontalPos, verticalPos, {\r\n      align: \"center\",\r\n    });\r\n  }\r\n  doc.save(`LAPORAN TAMBAH BARANG.pdf`);\r\n  // var string = doc.output(\"datauristring\");\r\n  // var embed = \"<embed width='100%' height='100%' src='\" + string + \"'/>\";\r\n  // var x = window.open();\r\n  // x.document.open();\r\n  // x.document.write(\r\n  //   \"<html><head><title>LAPORAN TAMBAH BARANG</title></head><body style='margin:0 !important'><embed width='100%' height='100%'  src=\" +\r\n  //     string +\r\n  //     \"></embed></body></html>\"\r\n  // );\r\n  // x.document.write(embed);\r\n  // setInterval(() => {\r\n  //   x.close();\r\n  // }, 1000);\r\n};\r\n\r\nexport default CetakLaporanTambahBarangGlobalBaki;\r\n// import jsPDF from \"jspdf\";\r\n// import \"jspdf-autotable\";\r\n// import { getToday } from \"../../../../components/helpers/function\";\r\n// // Date Fns is used to format the dates we receive\r\n\r\n// // define a generatePDF function that accepts a tickets argument\r\n// const CetakLaporanTambahBarangGlobalBaki = (data = \"\", username = \"\", kode_baki = \"\") => {\r\n//   const doc = new jsPDF(\"l\");\r\n//   doc.setFontSize(15);\r\n//   doc.text(\"LAPORAN  BARANG DETAIL\", 14, 15);\r\n//   doc.setFontSize(10);\r\n//   doc.setProperties({\r\n//     title: \"LAPORAN  BARANG DETAIL\",\r\n//   });\r\n//   //row 1\r\n//   doc.text(`Kode Baki : ${kode_baki}`, 14, 23);\r\n//   let tableRows = [];\r\n//   let finalY = 10;\r\n//   let footRows = [];\r\n//   let total = 0;\r\n//   let sub_qty = 0;\r\n//   let sub_brt = 0;\r\n//   let tableColumn = [\r\n//     \"NO\",\r\n//     \"KODE BARANG\",\r\n//     \"KODE BARCODE\",\r\n//     \"KODE INTERN\",\r\n//     \"KODE GUDANG\",\r\n//     \"NAMA BARANG\",\r\n//     \"BERAT\",\r\n//     \"NAMA ATRIBUTE\",\r\n//     \"BERAT ATRIBUTE\",\r\n//     \"JUMLAH\",\r\n//   ];\r\n\r\n//   // console.log(JSON.stringify(data));\r\n//   // localStorage.setItem('hasil',JSON.stringify(data));\r\n//   data.forEach((item, index) => {\r\n//     // item.list_barang.forEach((barang, index) => {\r\n//     let rows = [\r\n//       ++index,\r\n//       item.kode_barang,\r\n//       item.kode_barcode,\r\n//       item.kode_intern,\r\n//       item.kode_gudang,\r\n//       item.nama_barang,\r\n//       item.berat,\r\n//       item.nama_atribut,\r\n//       item.berat_atribut,\r\n//       item.stock_on_hand,\r\n//     ];\r\n//     total = index;\r\n//     sub_qty = sub_qty + parseFloat(item.stock_on_hand);\r\n//     sub_brt = sub_brt + parseFloat(item.berat);\r\n//     tableRows.push(rows);\r\n//     let footer = [\r\n//       \"\",\r\n//       \"\",\r\n//       \"\",\r\n//       \"\",\r\n//       \"Sub Total\",\r\n//       \"\",\r\n//       `${sub_brt.toFixed(3)}`,\r\n//       \"\",\r\n//       \"\",\r\n//       `${sub_qty}`,\r\n//     ];\r\n//     footRows.push(footer);\r\n//     doc.autoTable(tableColumn, tableRows, {\r\n//       startY: index === 0 ? 35 : finalY + 15,\r\n//         theme: \"plain\",\r\n//       foot: footRows,\r\n//       rowPageBreak: \"avoid\",\r\n//       pageBreak: \"avoid\",\r\n//       bodyStyles: { lineWidth: 0.02, lineColor: \"#000\" },\r\n//       headStyles: {\r\n//         lineWidth: 0.02,\r\n//         lineColor: \"#000\",\r\n//         fillColor: [187, 187, 187],\r\n//       },\r\n//       // theme: \"\",\r\n//     });\r\n//     finalY = doc.lastAutoTable.finalY + 10;\r\n//     tableRows = [];\r\n//   });\r\n//   // let footer = [\r\n//   //   \"\",\r\n//   //   \"\",\r\n//   //   \"\",\r\n//   //   \"Total Barang : \",\r\n//   //   \"\" + parseFloat(total).toLocaleString(\"kr-KO\"),\r\n//   // ];\r\n//   // tableRows.push(footer);\r\n\r\n//   doc.text(`Total Barang\t: ${total}`, 14, finalY + 5);\r\n//   doc.text(`User\t             : ${username}`, 14, finalY + 10);\r\n//   doc.text(`Tgl Cetak             : ${getToday()}`, 14, finalY + 16);\r\n\r\n//   // doc.autoPrint();\r\n//   // doc.save(`Laporan BARANG DETAIL.pdf`);\r\n//   var string = doc.output(\"datauristring\");\r\n//   var x = window.open();\r\n//   x.document.open();\r\n//   x.document.write(\r\n//     \"<html><head><title>LAPORAN  BARANG DETAIL</title></head><body style='margin:0 !important'><embed width='100%' height='100%'  src=\" +\r\n//       string +\r\n//       \"></embed></body></html>\"\r\n//   );\r\n//   x.document.close();\r\n// };\r\n\r\n// export default CetakLaporanTambahBarangGlobalBaki;\r\n","import React, { Component } from \"react\";\r\nimport ReactHTMLTableToExcel from \"react-html-table-to-excel\";\r\nimport { formatGram, getUserdata } from \"../../../../../components/helpers/function\";\r\n\r\nclass LaporanTambahBarangExelGlobalBaki extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n    render() {\r\n    return (\r\n      <>\r\n        <ReactHTMLTableToExcel\r\n          id=\"test-table-xls-button\"\r\n          className=\"btn btn-success btn-block\"\r\n          table=\"table-to-xls\"\r\n          filename=\"Laporan Tambah Stock\"\r\n          sheet=\"Laporan Tambah Stock\"\r\n          buttonText=\"Export Exel\"\r\n        />\r\n        <table rowkey=\"kode_member\" id=\"table-to-xls\" style={{ display: \"none\" }}>\r\n        <thead>\r\n              <tr>\r\n                <th colSpan=\"6\" style={{textAlign : \"center\"}}> LAPORAN TAMBAH BARANG GLOBAL PER BAKI</th>\r\n              </tr>\r\n              <tr>\r\n              <th colSpan=\"6\"> TOKO :  {getUserdata(getUserdata).nama_toko} </th>\r\n            </tr>\r\n           \r\n            <tr>\r\n              <th colSpan=\"6\"> ALAMAT :  {getUserdata().alamat_toko} </th>\r\n            </tr>\r\n            <tr></tr>\r\n            <tr >\r\n                <th  style={{ backgroundColor: \"#E8E5E5\", color: \"#000\"}}>NO</th>\r\n                <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\"}}>KODE BAKI</th>\r\n                <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\"}}>NAMA BAKI</th>\r\n                <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\", textAlign : \"right\"}}>TAMBAH PTG</th>\r\n                {/* <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\", textAlign : \"right\"}}>TAMBAH BERAT</th> */}\r\n                <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\"}}>TAMBAH BERAT ASLI</th>\r\n                {/* <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\"}}>JUMLAH</th> */}\r\n            </tr>\r\n        </thead>\r\n            \r\n            <tbody>\r\n            {this.props.data.map((item, index) => (\r\n                    <tr key={index}>\r\n                        <td style={{ textAlign : \"center\" }}> {index+1}</td>\r\n                        <td>{item.kode_toko}</td>\r\n                        <td>{item.nama_toko}</td>\r\n                        <td style={{textAlign : \"right\"}}> {item.stock_tambah}</td>\r\n                        {/* <td style={{textAlign : \"right\"}}> {formatGram(item.berat_tambah, 3)}</td> */}\r\n                        <td style={{textAlign : \"right\"}}> {formatGram(item.berat_asli_tambah, 3)}</td>\r\n                        {/* <td> {item.barang_data[0].kode_group}</td>\r\n                        <td> {item.barang_data[0].kode_dept}</td>\r\n                        <td> {item.barang_data[0].nama_barang}</td>\r\n                        <td> {item.barang_data[0].nama_atribut}</td>\r\n                        <td style={{textAlign : \"right\"}}> {formatGram(item.barang_data[0].berat,3)}</td>\r\n                        <td style={{textAlign : \"right\"}}> {formatGram(item.barang_data[0].berat_asli,3)}</td>\r\n                        <td style={{textAlign : \"right\"}}> {formatGram(item.barang_data[0].berat_atribut,3)}</td>\r\n                        <td style={{textAlign : \"right\"}}> {item.barang_data[0].harga_jual.toLocaleString(\"kr-KO\")}</td> */}\r\n                        {/* <td style={{ border: \"1px solid #000\" }}> {item.stock_on_hand}</td> */}\r\n                    </tr>\r\n             ))}\r\n            </tbody>\r\n                    \r\n            <tfoot>\r\n                <tr>\r\n                    <th style={{backgroundColor: \"#E8E5E5\", color: \"#000\",textAlign : \"center\" }} colSpan=\"3\">  </th>    \r\n                    <th style={{backgroundColor: \"#E8E5E5\", color: \"#000\",textAlign : \"right\"}}> {formatGram(this.props.data.map(list => list.stock_tambah).reduce((a,b) => a+b,0),3)}   </th>    \r\n                    <th style={{backgroundColor: \"#E8E5E5\", color: \"#000\",textAlign : \"right\"}}> {formatGram(this.props.data.map(list => list.berat_tambah).reduce((a,b) => a+b,0),3)}  </th>    \r\n                    <th style={{backgroundColor: \"#E8E5E5\", color: \"#000\",textAlign : \"right\"}}> {formatGram(this.props.data.map(list => list.berat_asli_tambah).reduce((a,b) => a+b,0),3)}  </th>      \r\n                </tr>\r\n            </tfoot>\r\n        </table>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default LaporanTambahBarangExelGlobalBaki;\r\n","import React, { Component } from \"react\";\r\nimport ReactHTMLTableToExcel from \"react-html-table-to-excel\";\r\nimport { formatGram, getUserdata } from \"../../../../../components/helpers/function\";\r\n\r\nclass LaporanTambahBarangExelGlobalJenis extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n    render() {\r\n    return (\r\n      <>\r\n        <ReactHTMLTableToExcel\r\n          id=\"test-table-xls-button\"\r\n          className=\"btn btn-success btn-block\"\r\n          table=\"table-to-xls\"\r\n          filename=\"Laporan Tambah Stock\"\r\n          sheet=\"Laporan Tambah Stock\"\r\n          buttonText=\"Export Exel\"\r\n        />\r\n        <table rowkey=\"kode_member\" id=\"table-to-xls\" style={{ display: \"none\" }}>\r\n        <thead>\r\n              <tr>\r\n                <th colSpan=\"6\" style={{textAlign : \"center\"}}> LAPORAN TAMBAH BARANG GLOBAL PER JENIS</th>\r\n              </tr>\r\n              <tr>\r\n              <th colSpan=\"6\"> TOKO :  {getUserdata(getUserdata).nama_toko} </th>\r\n            </tr>\r\n           \r\n            <tr>\r\n              <th colSpan=\"6\"> ALAMAT :  {getUserdata().alamat_toko} </th>\r\n            </tr>\r\n            <tr></tr>\r\n            <tr >\r\n                <th  style={{ backgroundColor: \"#E8E5E5\", color: \"#000\"}}>NO</th>\r\n                <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\"}}>KODE JENIS</th>\r\n                <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\"}}>NAMA JENIS</th>\r\n                <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\", textAlign : \"right\"}}>TAMBAH PTG</th>\r\n                <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\", textAlign : \"right\"}}>TAMBAH BERAT</th>\r\n                <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\"}}>TAMBAH BERAT ASLI</th>\r\n                {/* <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\"}}>JUMLAH</th> */}\r\n            </tr>\r\n        </thead>\r\n            \r\n            <tbody>\r\n            {this.props.data.map((item, index) => (\r\n                    <tr key={index}>\r\n                        <td style={{ textAlign : \"center\" }}> {index+1}</td>\r\n                        <td>{item.kode_dept}</td>\r\n                        <td>{item.nama_dept}</td>\r\n                        <td style={{textAlign : \"right\"}}> {item.stock_tambah}</td>\r\n                        <td style={{textAlign : \"right\"}}> {formatGram(item.berat_tambah, 3)}</td>\r\n                        <td style={{textAlign : \"right\"}}> {formatGram(item.berat_asli_tambah, 3)}</td>\r\n                        {/* <td> {item.barang_data[0].kode_group}</td>\r\n                        <td> {item.barang_data[0].kode_dept}</td>\r\n                        <td> {item.barang_data[0].nama_barang}</td>\r\n                        <td> {item.barang_data[0].nama_atribut}</td>\r\n                        <td style={{textAlign : \"right\"}}> {formatGram(item.barang_data[0].berat,3)}</td>\r\n                        <td style={{textAlign : \"right\"}}> {formatGram(item.barang_data[0].berat_asli,3)}</td>\r\n                        <td style={{textAlign : \"right\"}}> {formatGram(item.barang_data[0].berat_atribut,3)}</td>\r\n                        <td style={{textAlign : \"right\"}}> {item.barang_data[0].harga_jual.toLocaleString(\"kr-KO\")}</td> */}\r\n                        {/* <td style={{ border: \"1px solid #000\" }}> {item.stock_on_hand}</td> */}\r\n                    </tr>\r\n             ))}\r\n            </tbody>\r\n                    \r\n            <tfoot>\r\n                <tr>\r\n                    <th style={{backgroundColor: \"#E8E5E5\", color: \"#000\",textAlign : \"center\" }} colSpan=\"3\">  </th>    \r\n                    <th style={{backgroundColor: \"#E8E5E5\", color: \"#000\",textAlign : \"right\"}}> {formatGram(this.props.data.map(list => list.stock_tambah).reduce((a,b) => a+b,0),3)}   </th>    \r\n                    <th style={{backgroundColor: \"#E8E5E5\", color: \"#000\",textAlign : \"right\"}}> {formatGram(this.props.data.map(list => list.berat_tambah).reduce((a,b) => a+b,0),3)}  </th>    \r\n                    <th style={{backgroundColor: \"#E8E5E5\", color: \"#000\",textAlign : \"right\"}}> {formatGram(this.props.data.map(list => list.berat_asli_tambah).reduce((a,b) => a+b,0),3)}  </th>      \r\n                </tr>\r\n            </tfoot>\r\n        </table>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default LaporanTambahBarangExelGlobalJenis;\r\n","import jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\nimport { getToday, formatGram,localStoragedecryp, getUserdata } from \"../../../../../components/helpers/function\";\r\n// Date Fns is used to format the dates we receive\r\n\r\n// define a generatePDF function that accepts a tickets argument\r\nconst CetakLaporanTambahBarangGlobalJenis = (\r\n  data = \"\",\r\n) => {\r\n  // initialize jsPDF\r\n  const doc = new jsPDF(\"l\", \"mm\", [297, 210]);\r\n  //   let data = JSON.parse(localStorage.getItem(\"tt_pengeluaran_barang\")) || [];\r\n  let tableRows = [];\r\n  // let footRows = [];\r\n  let tableColumn = [];\r\n  let finalY = 30;\r\n  let total_berat_tambah = 0;\r\n  let total_stock_tambah = 0;\r\n  let total_berat_asli_tambah = 0;\r\n\r\n\r\n  doc.setFontSize(15);\r\n  doc.text(\"LAPORAN TAMBAH STOCK\", 14, 15);\r\n  doc.setFontSize(20);\r\n  doc.text(getUserdata().nama_toko, 200, 15);\r\n  doc.setFontSize(8);\r\n  let jml_alamat = getUserdata().alamat_toko.length;\r\n  if (jml_alamat > 20) {\r\n    doc.text(getUserdata().alamat_toko.slice(0,48), 200, 20);\r\n  }\r\n  if (jml_alamat > 50) {\r\n    doc.text(getUserdata().alamat_toko.slice(48,90), 200, 25);\r\n  }\r\n  doc.setFontSize(10);\r\n  doc.setProperties({\r\n    title: \"LAPORAN TAMBAH STOCK\",\r\n  });\r\n  doc.text(\r\n    `PERIODE : ${\r\n      localStoragedecryp(\"tgl_laporan\").length === 0\r\n        ? null\r\n        : JSON.parse(localStoragedecryp(\"tgl_laporan\")).tgl_awal +\r\n          \" s/d \" +\r\n          JSON.parse(localStoragedecryp(\"tgl_laporan\")).tgl_akhir\r\n    }`,\r\n    14,\r\n    25\r\n  );\r\n  tableColumn = [\r\n    [\r\n      {\r\n        content: `NO`,\r\n      },\r\n      {\r\n        content: `KODE BAKI`,\r\n      },\r\n      {\r\n        content: `NAMA BAKI`,\r\n      },\r\n  \r\n      {\r\n        content: `TAMBAH PTG`,\r\n        styles: {\r\n          halign: 'right'\r\n        },\r\n      },\r\n      {\r\n        content: `BERAT TAMBAH`,\r\n        styles: {\r\n          halign: 'right'\r\n        },\r\n      },\r\n      {\r\n        content: `BERAT ASLI`,\r\n        styles: {\r\n          halign: 'right'\r\n        },\r\n      },\r\n      // {\r\n      //   content: `JUMLAH`,\r\n      // },\r\n    ],\r\n  ];\r\n\r\n  data.forEach((item, index) => {\r\n    // item.list_barang.forEach((barang, index) => {\r\n    let rows = [\r\n      // ++index,\r\n      {\r\n        content: `${++index}`,\r\n        styles: {\r\n          cellWidth : 10\r\n        },\r\n      },\r\n      item.kode_dept,\r\n      item.nama_dept,\r\n      {\r\n        content: item.stock_tambah,\r\n        styles: {\r\n          halign: 'right'\r\n        },\r\n      },\r\n      {\r\n        content: formatGram(item.berat_tambah,3),\r\n        styles: {\r\n          halign: 'right'\r\n        },\r\n      },\r\n      {\r\n        content: formatGram(item.berat_asli_tambah,3),\r\n        styles: {\r\n          halign: 'right'\r\n        },\r\n      },\r\n      // item.stock_on_hand,\r\n    ];\r\n    total_stock_tambah = total_stock_tambah + item.stock_tambah;\r\n    total_berat_tambah = total_berat_tambah + item.berat_tambah;\r\n    total_berat_asli_tambah = total_berat_asli_tambah + item.berat_asli_tambah || 0;\r\n    tableRows.push(rows);\r\n  });\r\n  \r\n  // let footer = [\r\n  //   ``,\r\n  //   ``,\r\n  //   ``,\r\n  //   ``,\r\n  //   ``,\r\n  //   ``,\r\n  //   `${total_berat.toFixed(1)}`,\r\n  //   ``,\r\n  //   `${total_berat_atribut.toFixed(1)}`,\r\n  //   `${total_stock.toLocaleString('kr-KO')}`,\r\n  // ];\r\n  let footer = [\r\n    {\r\n      content: `Total`,\r\n      colSpan: 3,\r\n      styles: {\r\n        halign: 'center',\r\n        fillColor: \"#E8E5E5\",\r\n        textColor: \"#000\",\r\n      },\r\n    },\r\n    {\r\n      content: `${total_stock_tambah}`,\r\n      styles: {\r\n        fillColor: \"#E8E5E5\",\r\n        textColor: \"#000\",\r\n        halign: 'right'\r\n      },\r\n    },\r\n    {\r\n      content: `${formatGram(total_berat_tambah, 3)}`,\r\n      styles: {\r\n        fillColor: \"#E8E5E5\",\r\n        textColor: \"#000\",\r\n        halign: 'right'\r\n      },\r\n    },\r\n    {\r\n      content: `${formatGram(total_berat_asli_tambah, 3)}`,\r\n      styles: {\r\n        fillColor: \"#E8E5E5\",\r\n        textColor: \"#000\",\r\n        halign: 'right'\r\n      },\r\n    },\r\n    // `${sub_qty}`,\r\n  ];\r\n  tableRows.push(footer);\r\n  let printed = [\r\n    {\r\n      colSpan: 6,\r\n      content: `Printed By ${JSON.parse(localStoragedecryp(\"userdata\")).user_id} / ${getToday()}`,\r\n      styles: {\r\n        // lineWidth: 0.1,\r\n        fontStyle: \"italic\",\r\n        textColor: \"#000\",\r\n        // fillColor: \"#E8E5E5\"\r\n      },\r\n    },\r\n  ]\r\n  tableRows.push(printed);\r\n  doc.autoTable({\r\n    head: tableColumn,\r\n    body: tableRows,\r\n    // foot: footRows,\r\n    startY: finalY,\r\n    theme: \"plain\",\r\n    rowPageBreak: \"avoid\",\r\n    // pageBreak: \"avoid\",\r\n    margin: { top: 10 },\r\n    bodyStyles: {\r\n      // lineWidth: 0.02,\r\n      // lineColor: \"#000\",\r\n      fontSize: 8,\r\n    },\r\n    headStyles: {\r\n      fontSize: 8,\r\n      // lineWidth: 0.02,\r\n      // lineColor: \"#000\",\r\n      textColor: \"#000\",\r\n      fillColor: \"#E8E5E5\",\r\n    },\r\n  });\r\n  finalY = doc.autoTableEndPosY() + 3;\r\n  tableRows = [];\r\n  // footRows = [];\r\n  // total_berat = 0;\r\n  // const date = Date().split(\" \");\r\n  // we use a date string to generate our filename.\r\n  // const dateStr = date[2] + date[3] + date[4];\r\n  // ticket title. and margin-top + margin-left\r\n  // doc.text(`Total Berat                    :  ${total_berat.toFixed(1)}`, 14, finalY + 10);\r\n  // doc.text(`Berat Atribut                  :  ${total_berat_atribut.toFixed(1)}`, 14, finalY + 16);\r\n  // doc.text(`Stock                             :  ${total_stock.toLocaleString('kr-KO')}`, 14, finalY + 22);\r\n  // doc.text(`User                              :  ${JSON.parse(localStoragedecryp(\"userdata\")).user_id}`, 14, finalY + 10);\r\n  // doc.text(`Cetak                            : ${getToday()}`, 14, finalY + 16);\r\n  const pages = doc.internal.getNumberOfPages();\r\n  const pageWidth = doc.internal.pageSize.width; //Optional\r\n  const pageHeight = doc.internal.pageSize.height; //Optional\r\n  doc.setFontSize(10); //Optional\r\n  for (let j = 1; j < pages + 1; j++) {\r\n    let horizontalPos = pageWidth / 2; //Can be fixed number\r\n    let verticalPos = pageHeight - 10; //Can be fixed number\r\n    doc.setPage(j);\r\n    doc.text(`${j} of ${pages}`, horizontalPos, verticalPos, {\r\n      align: \"center\",\r\n    });\r\n  }\r\n  // doc.autoPrint();\r\n  // doc.save(`LAPORAN BARANG DETAIL.pdf`);\r\n  var string = doc.output(\"datauristring\");\r\n  // var embed = \"<embed width='100%' height='100%' src='\" + string + \"'/>\";\r\n  var x = window.open();\r\n  x.document.open();\r\n  x.document.write(\r\n    \"<html><head><title>LAPORAN TAMBAH BARANG</title></head><body style='margin:0 !important'><embed width='100%' height='100%'  src=\" +\r\n      string +\r\n      \"></embed></body></html>\"\r\n  );\r\n  // x.document.write(embed);\r\n  // setInterval(() => {\r\n  //   x.close();\r\n  // }, 1000);\r\n};\r\n\r\nexport default CetakLaporanTambahBarangGlobalJenis;\r\n// import jsPDF from \"jspdf\";\r\n// import \"jspdf-autotable\";\r\n// import { getToday } from \"../../../../components/helpers/function\";\r\n// // Date Fns is used to format the dates we receive\r\n\r\n// // define a generatePDF function that accepts a tickets argument\r\n// const CetakLaporanTambahBarangGlobalJenis = (data = \"\", username = \"\", kode_baki = \"\") => {\r\n//   const doc = new jsPDF(\"l\");\r\n//   doc.setFontSize(15);\r\n//   doc.text(\"LAPORAN  BARANG DETAIL\", 14, 15);\r\n//   doc.setFontSize(10);\r\n//   doc.setProperties({\r\n//     title: \"LAPORAN  BARANG DETAIL\",\r\n//   });\r\n//   //row 1\r\n//   doc.text(`Kode Baki : ${kode_baki}`, 14, 23);\r\n//   let tableRows = [];\r\n//   let finalY = 10;\r\n//   let footRows = [];\r\n//   let total = 0;\r\n//   let sub_qty = 0;\r\n//   let sub_brt = 0;\r\n//   let tableColumn = [\r\n//     \"NO\",\r\n//     \"KODE BARANG\",\r\n//     \"KODE BARCODE\",\r\n//     \"KODE INTERN\",\r\n//     \"KODE GUDANG\",\r\n//     \"NAMA BARANG\",\r\n//     \"BERAT\",\r\n//     \"NAMA ATRIBUTE\",\r\n//     \"BERAT ATRIBUTE\",\r\n//     \"JUMLAH\",\r\n//   ];\r\n\r\n//   // console.log(JSON.stringify(data));\r\n//   // localStorage.setItem('hasil',JSON.stringify(data));\r\n//   data.forEach((item, index) => {\r\n//     // item.list_barang.forEach((barang, index) => {\r\n//     let rows = [\r\n//       ++index,\r\n//       item.kode_barang,\r\n//       item.kode_barcode,\r\n//       item.kode_intern,\r\n//       item.kode_gudang,\r\n//       item.nama_barang,\r\n//       item.berat,\r\n//       item.nama_atribut,\r\n//       item.berat_atribut,\r\n//       item.stock_on_hand,\r\n//     ];\r\n//     total = index;\r\n//     sub_qty = sub_qty + parseFloat(item.stock_on_hand);\r\n//     sub_brt = sub_brt + parseFloat(item.berat);\r\n//     tableRows.push(rows);\r\n//     let footer = [\r\n//       \"\",\r\n//       \"\",\r\n//       \"\",\r\n//       \"\",\r\n//       \"Sub Total\",\r\n//       \"\",\r\n//       `${sub_brt.toFixed(3)}`,\r\n//       \"\",\r\n//       \"\",\r\n//       `${sub_qty}`,\r\n//     ];\r\n//     footRows.push(footer);\r\n//     doc.autoTable(tableColumn, tableRows, {\r\n//       startY: index === 0 ? 35 : finalY + 15,\r\n//         theme: \"plain\",\r\n//       foot: footRows,\r\n//       rowPageBreak: \"avoid\",\r\n//       pageBreak: \"avoid\",\r\n//       bodyStyles: { lineWidth: 0.02, lineColor: \"#000\" },\r\n//       headStyles: {\r\n//         lineWidth: 0.02,\r\n//         lineColor: \"#000\",\r\n//         fillColor: [187, 187, 187],\r\n//       },\r\n//       // theme: \"\",\r\n//     });\r\n//     finalY = doc.lastAutoTable.finalY + 10;\r\n//     tableRows = [];\r\n//   });\r\n//   // let footer = [\r\n//   //   \"\",\r\n//   //   \"\",\r\n//   //   \"\",\r\n//   //   \"Total Barang : \",\r\n//   //   \"\" + parseFloat(total).toLocaleString(\"kr-KO\"),\r\n//   // ];\r\n//   // tableRows.push(footer);\r\n\r\n//   doc.text(`Total Barang\t: ${total}`, 14, finalY + 5);\r\n//   doc.text(`User\t             : ${username}`, 14, finalY + 10);\r\n//   doc.text(`Tgl Cetak             : ${getToday()}`, 14, finalY + 16);\r\n\r\n//   // doc.autoPrint();\r\n//   // doc.save(`Laporan BARANG DETAIL.pdf`);\r\n//   var string = doc.output(\"datauristring\");\r\n//   var x = window.open();\r\n//   x.document.open();\r\n//   x.document.write(\r\n//     \"<html><head><title>LAPORAN  BARANG DETAIL</title></head><body style='margin:0 !important'><embed width='100%' height='100%'  src=\" +\r\n//       string +\r\n//       \"></embed></body></html>\"\r\n//   );\r\n//   x.document.close();\r\n// };\r\n\r\n// export default CetakLaporanTambahBarangGlobalJenis;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, formValueSelector, reduxForm } from \"redux-form\";\r\nimport {\r\n  getDataBaki,\r\n  getDataJenis,\r\n} from \"../../../../actions/datamaster_action\";\r\nimport LaporanDetailBarangExel from \"./exel/LaporanTambahBarangExel\";\r\nimport Tabel from \"../../../../components/helpers/tabel\";\r\nimport CetakLaporanTambahBarang from \"./pdf/CetakLaporanTambahBarang\";\r\nimport Loading from \"react-fullscreen-loading\";\r\nimport {\r\n  InputDate,\r\n  ReanderSelect,\r\n  SkeletonLoading,\r\n} from \"../../../../components/helpers/field\";\r\nimport {\r\n  NotifError,\r\n  ToastNotification,\r\n} from \"../../../../components/helpers/notification\";\r\nimport {\r\n  formatDate,\r\n  getTglSystem,\r\n  localStorageencryp,\r\n} from \"../../../../components/helpers/function\";\r\nimport moment from \"moment\";\r\nimport { getData } from \"../../../../config/axios\";\r\nimport CetakLaporanTambahBarangGlobalBaki from \"./pdf/CetakLaporanTambahBarangGlobalBaki\";\r\nimport LaporanTambahBarangExelGlobalBaki from \"./exel/LaporanTambahBarangExelGlobalBaki\";\r\nimport LaporanTambahBarangExelGlobalJenis from \"./exel/LaporanTambahBarangExelGlobalJenis\";\r\nimport CetakLaporanTambahBarangGlobalJenis from \"./pdf/CetakLaporanTambahBarangGlobalJenis\";\r\n\r\nclass HeadFilterLaporan extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: false,\r\n      data_per_baki: [],\r\n      data_per_jenis: [],\r\n      table_per_baki: false,\r\n      table_per_jenis: false,\r\n      isLoading: false,\r\n    };\r\n    this.setStartDate = this.setStartDate.bind(this);\r\n    this.setLastDate = this.setLastDate.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.dispatch(getDataBaki());\r\n    this.props.dispatch(getDataJenis());\r\n    this.props.change('kode_toko',\"ALL\")\r\n    this.props.change('kode_dept', \"ALL\")\r\n    this.props.change(\"tgl_awal\",getTglSystem())\r\n    this.props.change(\"tgl_akhir\",getTglSystem())\r\n  }\r\n  setStartDate(date) {\r\n    this.setState({\r\n      tgl_awal: new Date(date),\r\n    });\r\n  }\r\n  setLastDate(date) {\r\n    if (new Date(date) > new Date()) {\r\n      ToastNotification(\"info\", \"Tanggal tidak boleh lebih dari hari ini\");\r\n      return false;\r\n    }\r\n    this.setState({\r\n      tgl_akhir: new Date(date),\r\n    });\r\n  }\r\n  exportPdf() {\r\n    CetakLaporanTambahBarang(this.props.data);\r\n    this.props.change(\"kode_toko\", \"ALL\");\r\n    this.props.change(\"kode_dept\", \"ALL\");\r\n  }\r\n\r\n  exportPdfGlobalBaki() {\r\n    CetakLaporanTambahBarangGlobalBaki(this.state.data_per_baki);\r\n  }\r\n\r\n  exportPdfGlobalJenis() {\r\n    CetakLaporanTambahBarangGlobalJenis(this.state.data_per_jenis);\r\n  }\r\n\r\n  GlobalPerBaki() {\r\n    let data_post = {\r\n      tgl_awal: formatDate(\r\n        moment(new Date(this.props.tgl_awal || getTglSystem())).format(\r\n          \"YYYY-MM-DD\"\r\n        )\r\n      ),\r\n      tgl_akhir: formatDate(\r\n        moment(new Date(this.props.tgl_akhir || getTglSystem())).format(\r\n          \"YYYY-MM-DD\"\r\n        )\r\n      ),\r\n    };\r\n    this.setState({ isLoading: true });\r\n    getData(\r\n      `barang/tambah-barangs/global-per-baki?tanggal[gte]=${data_post.tgl_awal}&tanggal[lte]=${data_post.tgl_akhir}`\r\n    )\r\n      .then((res) => {\r\n        if (res.data.length === 0) {\r\n          this.setState({\r\n            export: false,\r\n            LaporanBarangDetail: [],\r\n            isLoading: false,\r\n          });\r\n          ToastNotification(\"info\", \"Laporan Tambah Barang Tidak Tersedia\");\r\n        } else {\r\n          ToastNotification(\"success\", \"Laporan Tambah Barang Tersedia\");\r\n          localStorageencryp(\"tgl_laporan\", JSON.stringify(data_post));\r\n\r\n          this.setState({\r\n            isLoading: false,\r\n            export: true,\r\n            data_per_baki: res.data,\r\n            table_per_baki: true,\r\n            table_per_jenis: false,\r\n            table_per_normal: false,\r\n          });\r\n        }\r\n      })\r\n      .then(() => {\r\n        this.setState({ isLoading: false });\r\n      })\r\n      .catch((error) => this.errorHandling(error));\r\n  }\r\n\r\n  GlobalPerJenis() {\r\n    let data_post = {\r\n      tgl_awal: formatDate(\r\n        moment(new Date(this.props.tgl_awal || getTglSystem())).format(\r\n          \"YYYY-MM-DD\"\r\n        )\r\n      ),\r\n      tgl_akhir: formatDate(\r\n        moment(new Date(this.props.tgl_akhir || getTglSystem())).format(\r\n          \"YYYY-MM-DD\"\r\n        )\r\n      ),\r\n    };\r\n    this.setState({ isLoading: true });\r\n    getData(\r\n      `barang/tambah-barangs/global-per-jenis?tanggal[gte]=${data_post.tgl_awal}&tanggal[lte]=${data_post.tgl_akhir}`\r\n    )\r\n      .then((res) => {\r\n        if (res.data.length === 0) {\r\n          this.setState({\r\n            export: false,\r\n            LaporanBarangDetail: [],\r\n            isLoading: false,\r\n          });\r\n          ToastNotification(\"info\", \"Laporan Tambah Barang Tidak Tersedia\");\r\n        } else {\r\n          ToastNotification(\"success\", \"Laporan Tambah Barang Tersedia\");\r\n          localStorageencryp(\"tgl_laporan\", JSON.stringify(data_post));\r\n\r\n          this.setState({\r\n            isLoading: false,\r\n            export: true,\r\n            data_per_jenis: res.data,\r\n            table_per_jenis: true,\r\n            table_per_baki: false,\r\n          });\r\n        }\r\n      })\r\n      .then(() => {\r\n        this.setState({ isLoading: false });\r\n      })\r\n      .catch((error) => this.errorHandling(error));\r\n  }\r\n\r\n  errorHandling(err) {\r\n    NotifError(err);\r\n    this.setState({ isLoading: false });\r\n  }\r\n\r\n  render() {\r\n    let databaki = [\r\n      {\r\n        value: \"ALL\",\r\n        name: \"SEMUA\",\r\n      },\r\n    ];\r\n    this.props.databaki.forEach((list) => {\r\n      let data = {\r\n        value: list.kode_baki,\r\n        name: list.kode_baki + \" - \" + list.nama_baki,\r\n      };\r\n      databaki.push(data);\r\n    });\r\n    let dataJenis = [\r\n      {\r\n        value: \"ALL\",\r\n        name: \"SEMUA\",\r\n      },\r\n    ];\r\n    this.props.dataJenis.forEach((list) => {\r\n      let data = {\r\n        value: list.kode_dept,\r\n        name: list.kode_dept + \" - \" + list.nama_dept,\r\n      };\r\n      dataJenis.push(data);\r\n    });\r\n    return (\r\n      <>\r\n        <form\r\n          onSubmit={(data) => this.props.handleSubmit(data)}\r\n          autoComplete=\"off\"\r\n          onKeyPress={(e) => {\r\n            e.key === \"Enter\" && e.preventDefault();\r\n          }}\r\n        >\r\n          <div className=\"row\">\r\n            <div className=\"col-lg-3\">\r\n              <Field\r\n                name=\"tgl_awal\"\r\n                component={InputDate}\r\n                label=\"Tanggal Dari\"\r\n                type=\"text\"\r\n                defaultValue={getTglSystem()}\r\n                selected={this.state.tgl_awal}\r\n                onChange={(date) => this.setStartDate(date)}\r\n                placeholder=\"Masukan Tanggal Dari\"\r\n              />\r\n            </div>\r\n            <div className=\"col-lg-3\">\r\n              <Field\r\n                name=\"tgl_akhir\"\r\n                component={InputDate}\r\n                type=\"text\"\r\n                defaultValue={getTglSystem()}\r\n                selected={this.state.tgl_akhir}\r\n                onChange={(date) => this.setLastDate(date)}\r\n                label=\"Tanggal Akhir\"\r\n                placeholder=\"Masukan Tanggal Akhir\"\r\n              />\r\n            </div>\r\n            <div className=\"col-3\">\r\n              {this.state.loading === false ? (\r\n                <Field\r\n                  label=\"Jenis\"\r\n                  name=\"kode_dept\"\r\n                  options={dataJenis}\r\n                  placeholder={\"Silahkan Pilih Kode Jenis\"}\r\n                  component={ReanderSelect}\r\n                />\r\n              ) : (\r\n                <SkeletonLoading label=\"Kode Jenis\" />\r\n              )}\r\n            </div>\r\n            <div className=\"col-3\">\r\n              {this.state.loading === false ? (\r\n                <Field\r\n                  label=\"Baki\"\r\n                  name=\"kode_toko\"\r\n                  options={databaki}\r\n                  placeholder={\"Silahkan Pilih Kode Baki\"}\r\n                  component={ReanderSelect}\r\n                />\r\n              ) : (\r\n                <SkeletonLoading label=\"Kode Baki\" />\r\n              )}\r\n            </div>\r\n            <div className=\"col-4 mb-2\">\r\n              <label> &nbsp; </label>\r\n              <button\r\n                className=\"btn btn-primary btn-block\"\r\n                disabled={this.submitting}\r\n                type=\"submit\"\r\n                onClick={() =>\r\n                  this.setState({\r\n                    table_per_normal: true,\r\n                    table_per_baki: false,\r\n                    table_per_jenis: false,\r\n                  })\r\n                }\r\n              >\r\n                {this.props.isLoading ? (\r\n                  <>\r\n                    <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Sedang\r\n                    Memfilter\r\n                  </>\r\n                ) : (\r\n                  \"Lihat Laporan\"\r\n                )}\r\n              </button>\r\n            </div>\r\n            <div className=\"col-4 mb-2\">\r\n              <label> &nbsp; </label>\r\n              <button\r\n                className=\"btn btn-primary btn-block\"\r\n                disabled={this.submitting}\r\n                type=\"button\"\r\n                onClick={() => this.GlobalPerBaki()}\r\n              >\r\n                {this.state.isLoading ? (\r\n                  <>\r\n                    <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Sedang\r\n                    Memfilter\r\n                  </>\r\n                ) : (\r\n                  \"Global Per baki\"\r\n                )}\r\n              </button>\r\n            </div>\r\n            <div className=\"col-4 mb-2\">\r\n              <label> &nbsp; </label>\r\n              <button\r\n                className=\"btn btn-primary btn-block\"\r\n                disabled={this.submitting}\r\n                type=\"button\"\r\n                onClick={() => this.GlobalPerJenis()}\r\n              >\r\n                {this.state.isLoading ? (\r\n                  <>\r\n                    <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Sedang\r\n                    Memfilter\r\n                  </>\r\n                ) : (\r\n                  \"Global Per Jenis\"\r\n                )}\r\n              </button>\r\n            </div>\r\n            <div className=\"col-12\">\r\n              {this.state.table_per_baki ? (\r\n                <Tabel\r\n                  keyField=\"kode_barcode\"\r\n                  data={this.state.data_per_baki}\r\n                  columns={this.props.columns_per_baki}\r\n                  empty={true}\r\n                  textEmpty=\"Data Laporan Barang Global Per Baki Kosong\"\r\n                />\r\n              ) : this.state.table_per_jenis ? (\r\n                <Tabel\r\n                  keyField=\"kode_barcode\"\r\n                  data={this.state.data_per_jenis}\r\n                  columns={this.props.columns_per_jenis}\r\n                  empty={true}\r\n                  textEmpty=\"Data Laporan Barang Detail Kosong\"\r\n                />\r\n              ) : (\r\n                <Tabel\r\n                  keyField=\"kode_barcode\"\r\n                  data={this.props.data}\r\n                  columns={this.props.columns}\r\n                  empty={true}\r\n                  textEmpty=\"Data Laporan Barang Detail Kosong\"\r\n                />\r\n              )}\r\n            </div>\r\n            {this.props.export ? (\r\n              this.state.table_per_normal ? (\r\n                <>\r\n                  <div className=\"col-lg-6\">\r\n                    <button\r\n                      type=\"button\"\r\n                      onClick={() => this.exportPdf()}\r\n                      className=\"btn btn-warning btn-block\"\r\n                    >\r\n                      {\" \"}\r\n                      Export PDF{\" \"}\r\n                    </button>\r\n                  </div>\r\n                  <div className=\"col-lg-6\">\r\n                    <LaporanDetailBarangExel\r\n                      data={this.props.data}\r\n                      kode_baki={this.props.kode_baki}\r\n                    />\r\n                  </div>\r\n                </>\r\n              ) : null\r\n            ) : null}\r\n            {this.state.table_per_baki ? (\r\n              <>\r\n                <div className=\"col-lg-6\">\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => this.exportPdfGlobalBaki()}\r\n                    className=\"btn btn-warning btn-block\"\r\n                  >\r\n                    {\" \"}\r\n                    Export PDF{\" \"}\r\n                  </button>\r\n                </div>\r\n                <div className=\"col-lg-6\">\r\n                  <LaporanTambahBarangExelGlobalBaki\r\n                    data={this.state.data_per_baki}\r\n                    kode_baki={this.props.kode_baki}\r\n                  />\r\n                </div>\r\n              </>\r\n            ) : null}\r\n            {this.state.table_per_jenis ? (\r\n              <>\r\n                <div className=\"col-lg-6\">\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => this.exportPdfGlobalJenis()}\r\n                    className=\"btn btn-warning btn-block\"\r\n                  >\r\n                    {\" \"}\r\n                    Export PDF{\" \"}\r\n                  </button>\r\n                </div>\r\n                <div className=\"col-lg-6\">\r\n                  <LaporanTambahBarangExelGlobalJenis\r\n                    data={this.state.data_per_jenis}\r\n                    kode_baki={this.props.kode_baki}\r\n                  />\r\n                </div>\r\n              </>\r\n            ) : null}\r\n          </div>\r\n          {this.props.isLoading ? (\r\n            <Loading\r\n              loading\r\n              background=\"rgba(0, 0, 0, 0.35)\"\r\n              loaderColor=\"rgba(94, 147, 117, 1)\"\r\n            />\r\n          ) : null}\r\n          {this.state.isLoading ? (\r\n            <Loading\r\n              loading\r\n              background=\"rgba(0, 0, 0, 0.35)\"\r\n              loaderColor=\"rgba(94, 147, 117, 1)\"\r\n            />\r\n          ) : null}\r\n        </form>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\n// HeadFilterLaporan = reduxForm({\r\n//   form: \"HeadFilterLaporan\",\r\n//   enableReinitialize: true,\r\n// })(HeadFilterLaporan);\r\n// export default connect((state) => {\r\n//   return {\r\n//     databaki: state.datamaster.getDataBaki,\r\n//     dataJenis: state.datamaster.getDataJenis,\r\n//     initialValues: {\r\n//       tgl_awal: getTglSystem(),\r\n//       tgl_akhir: getTglSystem(),\r\n//     },\r\n//   };\r\n// })(HeadFilterLaporan);\r\n\r\nHeadFilterLaporan = reduxForm({\r\n  form: \"HeadFilterLaporan\",\r\n  enableReinitialize: true,\r\n})(HeadFilterLaporan);\r\nconst selector = formValueSelector(\"HeadFilterLaporan\"); // <-- same as form name\r\nexport default connect((state) => {\r\n  return {\r\n    databaki: state.datamaster.getDataBaki,\r\n    dataJenis: state.datamaster.getDataJenis,\r\n    tgl_awal: selector(state, \"tgl_awal\"),\r\n    tgl_akhir: selector(state, \"tgl_akhir\"),\r\n    initialValues: {\r\n      tgl_awal: getTglSystem(),\r\n      tgl_akhir: getTglSystem(),\r\n    },\r\n  };\r\n})(HeadFilterLaporan);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Panel, PanelHeader } from \"../../../../components/panel/panel.jsx\";\r\nimport { connect } from \"react-redux\";\r\nimport { reduxForm } from \"redux-form\";\r\nimport { formatDate, formatGram, getTglSystem, localStoragedecryp, localStorageencryp } from \"../../../../components/helpers/function.jsx\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport {\r\n  NotifError,\r\n  ToastNotification,\r\n} from \"../../../../components/helpers/notification.jsx\";\r\n// import CetakLaporanDetailBarang from \"./CetakLaporanDetailBarang.jsx\";\r\n// import FormFilter from \"./FormFilter.jsx\";\r\nimport {  postDataNoTImeOut } from \"../../../../config/axios.jsx\";\r\nimport HeadFilterLaporan from \"./HeadFilterLaporan.jsx\";\r\nimport moment from \"moment\";\r\n// import LaporanDetailexel from \"./LaporanDetailExel.jsx\";\r\nconst maptostate = (state) => {\r\n  return {\r\n    hideModal: state.datamaster.modalDialog,\r\n  };\r\n};\r\n\r\nclass FormLaporanTambahBarang extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isEdit: false,\r\n      modalDialog: false,\r\n      isLoading: false,\r\n      export: false,\r\n      kode_baki: [],\r\n      LaporanBarangDetail: false,\r\n      columns: [\r\n        {\r\n          dataField: \"kode_barcode\",\r\n          text: \"Kode Barcode\",\r\n        },\r\n        {\r\n          dataField: \"kode_gudang\",\r\n          text: \"Kode Gudang\",\r\n        },\r\n\r\n        {\r\n          dataField: \"kode_toko\",\r\n          text: \"Kode Baki\",\r\n        },\r\n     \r\n        {\r\n          dataField: \"kode_group\",\r\n          text: \"Kode Group\",\r\n        },\r\n        {\r\n          dataField: \"kode_dept\",\r\n          text: \"Kode Jenis\",\r\n        },\r\n        {\r\n          dataField: \"nama_barang\",\r\n          text: \"Nama Barang\",\r\n        },\r\n        {\r\n          dataField: \"nama_atribut\",\r\n          text: \"Nama Atribut\",\r\n        },\r\n        // {\r\n        //   dataField: \"berat_tambah\",\r\n        //   text: \"Berat Tambah\",\r\n        //   headerClasses: 'text-right',\r\n        //   formatter: (cell) => {\r\n        //     return <div className=\"text-right\"> {formatGram(cell, 3)} </div>;\r\n        //   },\r\n        // },\r\n        {\r\n          dataField: \"berat\",\r\n          text: \"Berat\",\r\n          headerClasses: 'text-right',\r\n          formatter: (cell) => {\r\n            return <div className=\"text-right\"> {formatGram(cell, 3)} </div>;\r\n          },\r\n        },\r\n        {\r\n          dataField: \"berat_asli\",\r\n          text: \"Berat Asli\",\r\n          headerClasses: 'text-right',\r\n          formatter: (cell) => {\r\n            return <div className=\"text-right\"> {formatGram(cell, 3)} </div>;\r\n          },\r\n        },\r\n       \r\n        {\r\n          dataField: \"berat_atribut\",\r\n          text: \"Berat Atribut\",\r\n          headerClasses: 'text-right',\r\n          formatter: (cell) => {\r\n            return <div className=\"text-right\"> {formatGram(cell, 3)} </div>;\r\n          },\r\n        },\r\n        {\r\n          dataField: \"harga_jual\",\r\n          text: \"Harga Jual\",\r\n          headerClasses: 'text-right',\r\n          formatter: (data) => {\r\n            return <div className=\"text-right\"> {parseFloat(data).toLocaleString(\"kr-KO\")}</div>;\r\n          },\r\n        },\r\n      ],\r\n      columns_per_baki : [\r\n        {\r\n          dataField: \"kode_toko\",\r\n          text: \"Kode Baki\",\r\n        },\r\n        {\r\n          dataField: \"nama_toko\",\r\n          text: \"Nama Baki\",\r\n        },\r\n        {\r\n          dataField: \"stock_tambah\",\r\n          text: \"Tambah Ptg\",\r\n          headerClasses: 'text-right',\r\n          formatter: (cell) => {\r\n            return <div className=\"text-right\"> {cell} </div>;\r\n          },\r\n        },\r\n        {\r\n          dataField: \"berat_tambah\",\r\n          text: \"Tambah Berat\",\r\n          headerClasses: 'text-right',\r\n          formatter: (cell) => {\r\n            return <div className=\"text-right\"> {formatGram(cell, 3)} </div>;\r\n          },\r\n        },\r\n        {\r\n          dataField: \"berat_asli_tambah\",\r\n          text: \"Tambah Berat Asli\",\r\n          headerClasses: 'text-right',\r\n          formatter: (cell) => {\r\n            return <div className=\"text-right\"> {formatGram(cell, 3)} </div>;\r\n          },\r\n        },\r\n\r\n      ],\r\n      columns_per_jenis : [\r\n        {\r\n          dataField: \"kode_dept\",\r\n          text: \"Kode Jenis\",\r\n        },\r\n        {\r\n          dataField: \"nama_dept\",\r\n          text: \"Nama Jenis\",\r\n        },\r\n        {\r\n          dataField: \"stock_tambah\",\r\n          text: \"Tambah Ptg\",\r\n          headerClasses: 'text-right',\r\n          formatter: (cell) => {\r\n            return <div className=\"text-right\"> {cell} </div>;\r\n          },\r\n        },\r\n        {\r\n          dataField: \"berat_tambah\",\r\n          text: \"Tambah Berat\",\r\n          headerClasses: 'text-right',\r\n          formatter: (cell) => {\r\n            return <div className=\"text-right\"> {formatGram(cell, 3)} </div>;\r\n          },\r\n        },\r\n        {\r\n          dataField: \"berat_asli_tambah\",\r\n          text: \"Tambah Berat Asli\",\r\n          headerClasses: 'text-right',\r\n          formatter: (cell) => {\r\n            return <div className=\"text-right\"> {formatGram(cell, 3)} </div>;\r\n          },\r\n        },\r\n      ],\r\n    };\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    let data = JSON.parse(localStoragedecryp(\"userdata\"));\r\n    this.setState({ username: data.user_id });\r\n  }\r\n  handleSubmit(data) {\r\n    let data_post = {\r\n      tgl_awal: formatDate(moment(new Date(data.tgl_awal || getTglSystem())).format('YYYY-MM-DD')),\r\n      tgl_akhir: formatDate(moment(new Date(data.tgl_akhir || getTglSystem())).format('YYYY-MM-DD')),\r\n    };\r\n    this.setState({ isLoading: true, kode_toko: data.kode_baki });\r\n    postDataNoTImeOut(`barang/tambah-barangs?tanggal[gte]=${data_post.tgl_awal}&tanggal[lte]=${data_post.tgl_akhir}&kode_dept=${data.kode_dept}&kode_toko=${data.kode_toko}`)\r\n      .then((res) => {\r\n        if (res.data.length === 0) {\r\n          this.setState({\r\n            export: false,\r\n            LaporanBarangDetail: [],\r\n          });\r\n          ToastNotification(\"info\", \"Laporan Tambah Barang Tidak Tersedia\");\r\n        } else {\r\n          ToastNotification(\"success\", \"Laporan Tambah Barang Tersedia\");\r\n          localStorageencryp('tgl_laporan', JSON.stringify(data_post))\r\n          this.setState({\r\n            export: true,\r\n            LaporanBarangDetail: res.data,\r\n          });\r\n        }\r\n      })\r\n      .then(() => {\r\n        this.setState({ isLoading: false });\r\n      })\r\n      .catch((error) => this.errorHandling(error));\r\n  }\r\n  errorHandling(err) {\r\n    NotifError(err);\r\n    this.setState({ isLoading: false });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ol className=\"breadcrumb float-xl-right\">\r\n          <li className=\"breadcrumb-item\">\r\n            <Link to=\"#\">Laporan Tambah Barang</Link>\r\n          </li>\r\n          <li className=\"breadcrumb-item active\">Laporan Tambah Barang Detail</li>\r\n        </ol>\r\n        <h1 className=\"page-header\">Laporan Tambah Barang</h1>\r\n        <Panel>\r\n          <PanelHeader>Filter Laporan</PanelHeader>\r\n          <br />\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-12\">\r\n                <HeadFilterLaporan\r\n                  kode_baki={this.state.kode_baki}\r\n                  export={this.state.export}\r\n                  columns={this.state.columns}\r\n                  data={this.state.LaporanBarangDetail}\r\n                  isLoading={this.state.isLoading}\r\n                  columns_per_baki={this.state.columns_per_baki}\r\n                  columns_per_jenis ={this.state.columns_per_jenis}\r\n                  onSubmit={(data) => this.handleSubmit(data)}\r\n                />\r\n              </div>\r\n        \r\n            </div>\r\n          </div>\r\n          <br />\r\n        </Panel>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nFormLaporanTambahBarang = reduxForm({\r\n  form: \"FormLaporanTambahBarang\",\r\n  enableReinitialize: true,\r\n})(FormLaporanTambahBarang);\r\nexport default connect(maptostate, null)(FormLaporanTambahBarang);\r\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n/* global window, document, Blob */\n\n\nvar propTypes = {\n  table: _propTypes2.default.string.isRequired,\n  filename: _propTypes2.default.string.isRequired,\n  sheet: _propTypes2.default.string.isRequired,\n  id: _propTypes2.default.string,\n  className: _propTypes2.default.string,\n  buttonText: _propTypes2.default.string\n};\nvar defaultProps = {\n  id: 'button-download-as-xls',\n  className: 'button-download',\n  buttonText: 'Download'\n};\n\nvar ReactHTMLTableToExcel = function (_Component) {\n  _inherits(ReactHTMLTableToExcel, _Component);\n\n  function ReactHTMLTableToExcel(props) {\n    _classCallCheck(this, ReactHTMLTableToExcel);\n\n    var _this = _possibleConstructorReturn(this, (ReactHTMLTableToExcel.__proto__ || Object.getPrototypeOf(ReactHTMLTableToExcel)).call(this, props));\n\n    _this.handleDownload = _this.handleDownload.bind(_this);\n    return _this;\n  }\n\n  _createClass(ReactHTMLTableToExcel, [{\n    key: 'handleDownload',\n    value: function handleDownload() {\n      if (!document) {\n        if (process.env.NODE_ENV !== 'production') {\n          console.error('Failed to access document object');\n        }\n\n        return null;\n      }\n\n      if (document.getElementById(this.props.table).nodeType !== 1 || document.getElementById(this.props.table).nodeName !== 'TABLE') {\n        if (process.env.NODE_ENV !== 'production') {\n          console.error('Provided table property is not html table element');\n        }\n\n        return null;\n      }\n\n      var table = document.getElementById(this.props.table).outerHTML;\n      var sheet = String(this.props.sheet);\n      var filename = String(this.props.filename) + '.xls';\n      var uri = 'data:application/vnd.ms-excel;base64,';\n      var template = '<html xmlns:o=\"urn:schemas-microsoft-com:office:office\" xmlns:x=\"urn:schemas-mic' + 'rosoft-com:office:excel\" xmlns=\"http://www.w3.org/TR/REC-html40\"><head><meta cha' + 'rset=\"UTF-8\"><!--[if gte mso 9]><xml><x:ExcelWorkbook><x:ExcelWorksheets><x:Exce' + 'lWorksheet><x:Name>{worksheet}</x:Name><x:WorksheetOptions><x:DisplayGridlines/>' + '</x:WorksheetOptions></x:ExcelWorksheet></x:ExcelWorksheets></x:ExcelWorkbook></' + 'xml><![endif]--></head><body>{table}</body></html>';\n      var context = {\n        worksheet: sheet || 'Worksheet',\n        table: table\n      }; // If IE11\n\n      if (window.navigator.msSaveOrOpenBlob) {\n        var fileData = ['' + ('<html xmlns:o=\"urn:schemas-microsoft-com:office:office\" xmlns:x=\"urn:schemas-mic' + 'rosoft-com:office:excel\" xmlns=\"http://www.w3.org/TR/REC-html40\"><head><meta cha' + 'rset=\"UTF-8\"><!--[if gte mso 9]><xml><x:ExcelWorkbook><x:ExcelWorksheets><x:Exce' + 'lWorksheet><x:Name>{worksheet}</x:Name><x:WorksheetOptions><x:DisplayGridlines/>' + '</x:WorksheetOptions></x:ExcelWorksheet></x:ExcelWorksheets></x:ExcelWorkbook></' + 'xml><![endif]--></head><body>') + table + '</body></html>'];\n        var blobObject = new Blob(fileData);\n        document.getElementById('react-html-table-to-excel').click()(function () {\n          window.navigator.msSaveOrOpenBlob(blobObject, filename);\n        });\n        return true;\n      }\n\n      var element = window.document.createElement('a');\n      element.href = uri + ReactHTMLTableToExcel.base64(ReactHTMLTableToExcel.format(template, context));\n      element.download = filename;\n      document.body.appendChild(element);\n      element.click();\n      document.body.removeChild(element);\n      return true;\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      return _react2.default.createElement('button', {\n        id: this.props.id,\n        className: this.props.className,\n        type: 'button',\n        onClick: this.handleDownload\n      }, this.props.buttonText);\n    }\n  }], [{\n    key: 'base64',\n    value: function base64(s) {\n      return window.btoa(unescape(encodeURIComponent(s)));\n    }\n  }, {\n    key: 'format',\n    value: function format(s, c) {\n      return s.replace(/{(\\w+)}/g, function (m, p) {\n        return c[p];\n      });\n    }\n  }]);\n\n  return ReactHTMLTableToExcel;\n}(_react.Component);\n\nReactHTMLTableToExcel.propTypes = propTypes;\nReactHTMLTableToExcel.defaultProps = defaultProps;\nexports.default = ReactHTMLTableToExcel;"],"sourceRoot":""}