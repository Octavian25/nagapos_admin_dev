{"version":3,"sources":["pages/Laporan/LaporanPenjualan/LaporanStockJual/pdf/LaporanStockJualPdf.jsx","pages/Laporan/LaporanPenjualan/LaporanStockJual/exel/LaporanStockJualExel.jsx","pages/Laporan/LaporanPenjualan/LaporanStockJual/HeadLaporanStockJual.jsx","pages/Laporan/LaporanPenjualan/LaporanStockJual/index.jsx","../node_modules/react-html-table-to-excel/index.js","Validasi/ValidasiTanggalLaporan.jsx"],"names":["LaporanStockJualPdf","tableColumn","data","arguments","length","undefined","doc","jsPDF","tableRows","finalY","setFontSize","text","getUserdata","nama_toko","jml_alamat","alamat_toko","slice","setProperties","title","concat","localStoragedecryp","JSON","parse","tgl_awal","tgl_akhir","content","styles","halign","total","forEach","item","index","harga_total","rows","kode_barcode","kode_dept","nama_barang","kadar_cetak","berat","toFixed","parseInt","harga_gram","toLocaleString","harga_jual","harga_atribut","ongkos","push","footer","colSpan","fillColor","textColor","printed","user_id","getToday","fontStyle","autoTable","head","body","startY","theme","rowPageBreak","margin","top","footStyles","fontSize","bodyStyles","headStyles","tableLineColor","tableLineWidth","autoTableEndPosY","pages","internal","getNumberOfPages","pageWidth","pageSize","width","pageHeight","height","j","horizontalPos","verticalPos","setPage","align","save","LaporanStockJualExel","props","_this","Object","classCallCheck","this","_super","call","state","react_default","a","createElement","Fragment","react_html_table_to_excel_default","id","className","table","filename","sheet","buttonText","style","display","textAlign","backgroundColor","color","map","row","key","list","reduce","b","Component","HeadLaporanServiceAmbil","date","Date","setStartDate","bind","assertThisInitialized","setLastDate","LaporanStockJual","setState","_this2","dispatch","getDataJenis","getDataBaki","setTimeout","change","_this3","databaki","value","name","kode_baki","nama_baki","dataJenis","nama_dept","columns","dataField","footerAttrs","coulmdata","headerClasses","formatter","cell","formatGram","num","onSubmit","handleSubmit","autoComplete","Field","component","InputDate","label","type","selected","onChange","placeholder","options","ReanderSelect","isLoading","tabel","keyField","export","empty","textEmpty","onClick","exportPdf","exel_LaporanStockJualExel","loading_default","loading","background","loaderColor","reduxForm","form","enableReinitialize","validate","ValidasiTanggalLaporan","connect","datamaster","initialValues","getTglSystem","data_post","tgl_from","formatDate","moment","format","tgl_to","tgl_laporan","postDataNoTImeOut","then","res","ToastNotification","localStorageencryp","stringify","catch","err","library","to","HeadLaporanStockJual","React","defineProperty","exports","_createClass","defineProperties","target","i","descriptor","enumerable","configurable","writable","Constructor","protoProps","staticProps","prototype","_react","__webpack_require__","_react2","_interopRequireDefault","_propTypes2","obj","__esModule","default","propTypes","string","isRequired","ReactHTMLTableToExcel","_Component","instance","TypeError","_classCallCheck","self","ReferenceError","_possibleConstructorReturn","__proto__","getPrototypeOf","handleDownload","subClass","superClass","create","constructor","setPrototypeOf","_inherits","document","getElementById","nodeType","nodeName","outerHTML","String","context","worksheet","window","navigator","msSaveOrOpenBlob","blobObject","Blob","click","element","href","base64","download","appendChild","removeChild","s","btoa","unescape","encodeURIComponent","c","replace","m","p","defaultProps","event","errors"],"mappings":"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","file":"static/js/45.51e65c8a.chunk.js","sourcesContent":["import jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\nimport {\r\n  getToday,\r\n  getUserdata,\r\n  localStoragedecryp,\r\n} from \"../../../../../components/helpers/function\";\r\n// Date Fns is used to format the dates we receive\r\n\r\n// define a generatePDF function that accepts a tickets argument\r\nconst LaporanStockJualPdf = (\r\n  data = \"\",\r\n  username = \"\",\r\n  tanggal_dari = \"\",\r\n  tanggal_sampai = \"\"\r\n) => {\r\n  // initialize jsPDF\r\n  const doc = new jsPDF(\"l\", \"mm\", [297, 210]);\r\n  //   let data = JSON.parse(localStorage.getItem(\"tt_pengeluaran_barang\")) || [];\r\n  let tableRows = [];\r\n  // let footRows = [];\r\n  let tableColumn = [];\r\n  let finalY = 30;\r\n\r\n\r\n  doc.setFontSize(15);\r\n  doc.text(\"LAPORAN STOCK JUAL\", 14, 15);\r\n  doc.setFontSize(20);\r\n  doc.text(getUserdata().nama_toko, 200, 15);\r\n  doc.setFontSize(8);\r\n  let jml_alamat = getUserdata().alamat_toko.length;\r\n  if (jml_alamat > 20) {\r\n    doc.text(getUserdata().alamat_toko.slice(0,48), 200, 20);\r\n  }\r\n  if (jml_alamat > 50) {\r\n    doc.text(getUserdata().alamat_toko.slice(48,90), 200, 25);\r\n  }\r\n  doc.setFontSize(10);\r\n  doc.setProperties({\r\n    title: \"LAPORAN STOCK JUAL\",\r\n  });\r\n  //row 1\r\n  doc.text(\r\n    `PERIODE : ${\r\n      localStoragedecryp(\"tgl_laporan\").length === 0\r\n        ? null\r\n        : JSON.parse(localStoragedecryp(\"tgl_laporan\")).tgl_awal +\r\n          \" s/d \" +\r\n          JSON.parse(localStoragedecryp(\"tgl_laporan\")).tgl_akhir\r\n    }`,\r\n    14,\r\n    25\r\n  );\r\n  tableColumn = [\r\n    [\r\n      {\r\n        content: `BARCODE`,\r\n      },\r\n      {\r\n        content: `KODE JENIS`,\r\n      },\r\n      {\r\n        content: `NAMA BARANG`,\r\n      },\r\n      {\r\n        content: `KADAR CETAK`,\r\n        styles: {\r\n          halign: 'right',\r\n        },\r\n      },\r\n      {\r\n        content: `BERAT`,\r\n        styles: {\r\n          halign: 'right',\r\n        },\r\n      },\r\n      {\r\n        content: `HARGA / GRAM`,\r\n        styles: {\r\n          halign: 'right',\r\n        },\r\n      },\r\n      {\r\n        content: `HARGA JUAL`,\r\n        styles: {\r\n          halign: 'right',\r\n        },\r\n      },\r\n      {\r\n        content: `HARGA ATRIBUT`,\r\n        styles: {\r\n          halign: 'right',\r\n        },\r\n      },\r\n      {\r\n        content: `ONGKOS`,\r\n        styles: {\r\n          halign: 'right',\r\n        },\r\n      },\r\n      {\r\n        content: `TOTAL`,\r\n        styles: {\r\n          halign: 'right',\r\n        },\r\n      },\r\n    ],\r\n  ];\r\n  let total = 0;\r\n  data.forEach((item, index) => {\r\n    total = total + item.harga_total;\r\n    let rows = [\r\n      item.kode_barcode,\r\n      item.kode_dept,\r\n      item.nama_barang,\r\n      {\r\n        content: item.kadar_cetak,\r\n        styles: {\r\n          halign: 'right',\r\n        },\r\n      },\r\n      {\r\n        content: item.berat.toFixed(3),\r\n        styles: {\r\n          halign: 'right',\r\n        },\r\n      },\r\n      {\r\n        content: parseInt(item.harga_gram).toLocaleString(\"kr-KO\"),\r\n        styles: {\r\n          halign: 'right',\r\n        },\r\n      },\r\n      {\r\n        content: parseInt(item.harga_jual).toLocaleString(\"kr-KO\"),\r\n        styles: {\r\n          halign : \"right\",\r\n        }\r\n      },\r\n      {\r\n        content: parseInt(item.harga_atribut).toLocaleString(\"kr-KO\"),\r\n        styles: {\r\n          halign : \"right\",\r\n        }\r\n      },\r\n      {\r\n        content: parseInt(item.ongkos).toLocaleString(\"kr-KO\"),\r\n        styles: {\r\n          halign : \"right\",\r\n        }\r\n      },\r\n      {\r\n        content: parseInt(item.harga_total).toLocaleString(\"kr-KO\"),\r\n        styles: {\r\n          halign : \"right\",\r\n        }\r\n      },\r\n\r\n    ];\r\n    tableRows.push(rows)\r\n  })\r\n  \r\n  let footer = [\r\n    {\r\n      content: `Total Transaksi: ${data.length}`,\r\n      colSpan: 9,\r\n      styles: {\r\n        halign: 'center',\r\n        fillColor: \"#E8E5E5\",\r\n        textColor: \"#000\",\r\n      },\r\n    },\r\n    {\r\n      content: parseInt(total).toLocaleString(\"kr-KO\"),\r\n      styles: {\r\n        halign: \"right\",\r\n        fillColor: \"#E8E5E5\",\r\n        textColor: \"#000\",\r\n      }\r\n    },\r\n  ]\r\n  tableRows.push(footer)\r\n\r\n  let printed = [\r\n    {\r\n      content: `Printed By ${JSON.parse(localStoragedecryp(\"userdata\")).user_id} / ${getToday()}`,\r\n      colSpan: 7,\r\n      styles: {\r\n        // lineWidth: 0.1,\r\n        fontStyle: \"italic\",\r\n        textColor: \"#000\",\r\n        // fillColor: \"#E8E5E5\"\r\n      },\r\n    },\r\n  ]\r\n  tableRows.push(printed);\r\n\r\n  doc.autoTable({\r\n    head: tableColumn,\r\n    body: tableRows,\r\n    // foot: tbl_barang,\r\n    startY: finalY,\r\n    theme: \"plain\",\r\n    rowPageBreak: \"avoid\",\r\n    // pageBreak: \"avoid\",\r\n    margin: { top: 10 },\r\n    footStyles: {\r\n      // lineWidth: 0.02,\r\n      // lineColor: \"#000\",\r\n      fontSize: 8,\r\n    },\r\n    bodyStyles: {\r\n      // lineWidth: 0.02,\r\n      // lineColor: \"#000\",\r\n      fontSize: 8,\r\n    },\r\n    headStyles: {\r\n      fontSize: 8,\r\n      // lineWidth: 0.02,\r\n      // lineColor: \"#000\",\r\n      fillColor: \"#E8E5E5\",\r\n      textColor: \"#000\",\r\n    },\r\n    tableLineColor: [255, 255, 255],\r\n    tableLineWidth: 1,\r\n  });\r\n  finalY = doc.autoTableEndPosY() + 3;\r\n  tableRows = [];\r\n  // footRows = [];\r\n  // tbl_barang = [];\r\n  // const date = Date().split(\" \");\r\n  // we use a date string to generate our filename.\r\n  // const dateStr = date[2] + date[3] + date[4];\r\n  // ticket title. and margin-top + margin-left\r\n  // doc.text(\r\n  //   `User                          : ${\r\n  //     JSON.parse(localStoragedecryp(\"userdata\")).user_id\r\n  //   }`,\r\n  //   14,\r\n  //   finalY + 10\r\n  // );\r\n  // doc.text(`Cetak                        : ${getToday()}`, 14, finalY + 16);\r\n  const pages = doc.internal.getNumberOfPages();\r\n  const pageWidth = doc.internal.pageSize.width; //Optional\r\n  const pageHeight = doc.internal.pageSize.height; //Optional\r\n  doc.setFontSize(10); //Optional\r\n  for (let j = 1; j < pages + 1; j++) {\r\n    let horizontalPos = pageWidth / 2; //Can be fixed number\r\n    let verticalPos = pageHeight - 10; //Can be fixed number\r\n    doc.setPage(j);\r\n    doc.text(`${j} of ${pages}`, horizontalPos, verticalPos, {\r\n      align: \"center\",\r\n    });\r\n  }\r\n  // doc.autoPrint();\r\n  doc.save(`LAPORAN STOCK JUAL.pdf`);\r\n  // var string = doc.output(\"datauristring\");\r\n  // // var embed = \"<embed width='100%' height='100%' src='\" + string + \"'/>\";\r\n  // var x = window.open();\r\n  // x.document.open();\r\n  // x.document.write(\r\n  //   \"<html><head><title>LAPORAN STOCK JUAL</title></head><body style='margin:0 !important'><embed width='100%' height='100%'  src=\" +\r\n  //     string +\r\n  //     \"></embed></body></html>\"\r\n  // );\r\n  // x.document.write(embed);\r\n  // setInterval(() => {\r\n  //   x.close();\r\n  // }, 1000);\r\n};\r\n\r\nexport default LaporanStockJualPdf;\r\n","import React, { Component } from \"react\";\r\nimport ReactHTMLTableToExcel from \"react-html-table-to-excel\";\r\nimport {\r\n  getUserdata,\r\n  localStoragedecryp,\r\n} from \"../../../../../components/helpers/function\";\r\nclass LaporanStockJualExel extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n        <ReactHTMLTableToExcel\r\n          id=\"test-table-xls-button\"\r\n          className=\"btn btn-success btn-block\"\r\n          table=\"table-to-xls\"\r\n          filename=\"Laporan Stock Jual\"\r\n          sheet=\"Laporan Stock Jual\"\r\n          buttonText=\"Export Exel\"\r\n        />\r\n        <table id=\"table-to-xls\" style={{ display: \"none\" }}>\r\n          <thead>\r\n            <tr>\r\n              <th colSpan=\"10\" style={{ textAlign: \"center\" }}>\r\n                {\" \"}\r\n                LAPORAN Stock Jual{\" \"}\r\n              </th>\r\n            </tr>\r\n            <tr>\r\n              <th colSpan=\"10\"> Periode </th>\r\n            </tr>\r\n            <tr>\r\n              <th colSpan=\"10\">\r\n                {\" \"}\r\n                {localStoragedecryp(\"tgl_laporan\").length === 0\r\n                  ? null\r\n                  : JSON.parse(localStoragedecryp(\"tgl_laporan\")).tgl_awal +\r\n                    \" s/d \" +\r\n                    JSON.parse(localStoragedecryp(\"tgl_laporan\"))\r\n                      .tgl_akhir}{\" \"}\r\n              </th>\r\n            </tr>\r\n            <tr>\r\n              <th colSpan=\"10\"> TOKO : {getUserdata().nama_toko} </th>\r\n            </tr>\r\n            <tr>\r\n              <th colSpan=\"10\"> ALAMAT : {getUserdata().alamat_toko} </th>\r\n            </tr>\r\n            <tr></tr>\r\n            <tr>\r\n              <td style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>\r\n                BARCODE\r\n              </td>\r\n              <td style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>\r\n                KODE JENIS\r\n              </td>\r\n              <td style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>\r\n                NAMA BARANG\r\n              </td>\r\n              <td\r\n                style={{\r\n                  backgroundColor: \"#E8E5E5\",\r\n                  color: \"#000\",\r\n                  textAlign: \"right\",\r\n                }}\r\n              >\r\n                KADAR CETAK\r\n              </td>\r\n              <td\r\n                style={{\r\n                  backgroundColor: \"#E8E5E5\",\r\n                  color: \"#000\",\r\n                  textAlign: \"right\",\r\n                }}\r\n              >\r\n                BERAT\r\n              </td>\r\n              <td\r\n                style={{\r\n                  backgroundColor: \"#E8E5E5\",\r\n                  color: \"#000\",\r\n                  textAlign: \"right\",\r\n                }}\r\n              >\r\n                HARGA / GRAM\r\n              </td>\r\n              <td\r\n                style={{\r\n                  backgroundColor: \"#E8E5E5\",\r\n                  color: \"#000\",\r\n                  textAlign: \"right\",\r\n                }}\r\n              >\r\n                HARGA JUAL\r\n              </td>\r\n              <td\r\n                style={{\r\n                  backgroundColor: \"#E8E5E5\",\r\n                  color: \"#000\",\r\n                  textAlign: \"right\",\r\n                }}\r\n              >\r\n                HARGA ATRIBUT\r\n              </td>\r\n              <td\r\n                style={{\r\n                  backgroundColor: \"#E8E5E5\",\r\n                  color: \"#000\",\r\n                  textAlign: \"right\",\r\n                }}\r\n              >\r\n                ONGKOS\r\n              </td>\r\n              <td\r\n                style={{\r\n                  backgroundColor: \"#E8E5E5\",\r\n                  color: \"#000\",\r\n                  textAlign: \"right\",\r\n                }}\r\n              >\r\n                HARGA TOTAL\r\n              </td>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.props.data.map((row, index) => (\r\n              <tr key={index}>\r\n                <td>&nbsp;{row.kode_barcode}</td>\r\n                <td>{row.kode_dept}</td>\r\n                <td>{row.nama_barang}</td>\r\n                <td>&nbsp;{row.kadar_cetak}</td>\r\n                <td style={{ textAlign: \"right\" }}>&nbsp;{row.berat.toFixed(2)}</td>\r\n                <td style={{ textAlign: \"right\" }}>\r\n                &nbsp;{row.harga_gram.toLocaleString(\"kr-KO\")}\r\n                </td>\r\n                <td style={{ textAlign: \"right\" }}>\r\n                &nbsp;{row.harga_jual.toLocaleString(\"kr-KO\")}\r\n                </td>\r\n                <td style={{ textAlign: \"right\" }}>\r\n                &nbsp;{row.harga_atribut.toLocaleString(\"kr-KO\")}\r\n                </td>\r\n                <td style={{ textAlign: \"right\" }}>\r\n                &nbsp;{row.ongkos.toLocaleString(\"kr-KO\")}\r\n                </td>\r\n                <td style={{ textAlign: \"right\" }}>\r\n                  &nbsp;{row.harga_total.toLocaleString(\"kr-KO\")}\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n          <tfoot>\r\n            <tr>\r\n              <td\r\n                colSpan=\"9\"\r\n                style={{\r\n                  backgroundColor: \"#E8E5E5\",\r\n                  color: \"#000\",\r\n                  textAlign: \"center\",\r\n                }}\r\n              >\r\n                Grand Total Barang :\r\n              </td>\r\n              <td\r\n                style={{\r\n                  backgroundColor: \"#E8E5E5\",\r\n                  color: \"#000\",\r\n                  textAlign: \"right\",\r\n                }}\r\n              >\r\n                {\" \"}\r\n                {this.props.data\r\n                  .map((list) => list.harga_total)\r\n                  .reduce((a, b) => a + b, 0)\r\n                  .toLocaleString(\"ko-KO\")}{\" \"}\r\n              </td>\r\n            </tr>\r\n          </tfoot>\r\n        </table>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default LaporanStockJualExel;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { InputDate, ReanderSelect } from \"../../../../components/helpers/field\";\r\nimport {\r\n  formatGram,\r\n  getTglSystem,\r\n} from \"../../../../components/helpers/function\";\r\nimport Tabel from \"../../../../components/helpers/tabel\";\r\nimport ValidasiTanggalLaporan from \"../../../../Validasi/ValidasiTanggalLaporan\";\r\nimport Loading from \"react-fullscreen-loading\";\r\nimport LaporanStockJualPdf from \"./pdf/LaporanStockJualPdf\";\r\nimport LaporanStockJualExel from \"./exel/LaporanStockJualExel\";\r\nimport {\r\n  getDataBaki,\r\n  getDataJenis,\r\n} from \"../../../../actions/datamaster_action\";\r\nclass HeadLaporanServiceAmbil extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      date: new Date(),\r\n    };\r\n    this.setStartDate = this.setStartDate.bind(this);\r\n    this.setLastDate = this.setLastDate.bind(this);\r\n  }\r\n\r\n  exportPdf() {\r\n    LaporanStockJualPdf(this.props.LaporanStockJual);\r\n  }\r\n  setStartDate(date) {\r\n    this.setState({\r\n      tgl_awal: new Date(date),\r\n    });\r\n  }\r\n  setLastDate(date) {\r\n    this.setState({\r\n      tgl_akhir: new Date(date),\r\n    });\r\n  }\r\n  componentDidMount() {\r\n    this.props.dispatch(getDataJenis());\r\n    this.props.dispatch(getDataBaki());\r\n    setTimeout(() => {\r\n      this.props.change(\"kode_dept\",\"ALL\")\r\n      this.props.change(\"kode_baki\",\"ALL\")\r\n  }, 100);\r\n  }\r\n\r\n  render() {\r\n    let databaki = [\r\n      {\r\n        value: \"ALL\",\r\n        name: \"SEMUA\",\r\n      },\r\n    ];\r\n    this.props.databaki.forEach((list) => {\r\n      let data = {\r\n        value: list.kode_baki,\r\n        name: list.kode_baki + \" - \" + list.nama_baki,\r\n      };\r\n      databaki.push(data);\r\n    });\r\n    let dataJenis = [\r\n      {\r\n        value: \"ALL\",\r\n        name: \"SEMUA\",\r\n      },\r\n    ];\r\n    this.props.dataJenis.forEach((list) => {\r\n      let data = {\r\n        value: list.kode_dept,\r\n        name: list.kode_dept + \" - \" + list.nama_dept,\r\n      };\r\n      dataJenis.push(data);\r\n    });\r\n    const columns = [\r\n      {\r\n        dataField: \"kode_barcode\",\r\n        text: \"Kode Barcode\",\r\n        footerAttrs: {\r\n          colSpan: \"9\",\r\n        },\r\n        footer: (coulmdata) => {\r\n          return <div>Total Transaksi : {coulmdata.length} </div>;\r\n        },\r\n      },\r\n      {\r\n        dataField: \"kode_dept\",\r\n        text: \"Kode Jenis\",\r\n      },\r\n      {\r\n        dataField: \"nama_barang\",\r\n        text: \"Nama Barang\",\r\n      },\r\n      {\r\n        dataField: \"kadar_cetak\",\r\n        text: \"Kadar Cetak\",\r\n        headerClasses: \"text-right\",\r\n        formatter: (cell) => {\r\n          return <div className=\"text-right\">{cell}</div>;\r\n        },\r\n      },\r\n      {\r\n        dataField: \"berat\",\r\n        text: \"Berat\",\r\n        headerClasses: \"text-right\",\r\n\r\n        formatter: (cell) => {\r\n          return <div className=\"text-right\">{formatGram(cell, 3)}</div>;\r\n        },\r\n      },\r\n      {\r\n        dataField: \"harga_gram\",\r\n        text: \"Harga / Gram\",\r\n        headerClasses: \"text-right\",\r\n\r\n        formatter: (cell) => {\r\n          return (\r\n            <div className=\"text-right\">{cell.toLocaleString(\"kr-KO\")}</div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        dataField: \"harga_jual\",\r\n        text: \"Harga Jual\",\r\n        headerClasses: \"text-right\",\r\n\r\n        formatter: (cell) => {\r\n          return (\r\n            <div className=\"text-right\">{cell.toLocaleString(\"kr-KO\")}</div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        dataField: \"harga_atribut\",\r\n        text: \"Harga Atribut\",\r\n        headerClasses: \"text-right\",\r\n\r\n        formatter: (cell) => {\r\n          return (\r\n            <div className=\"text-right\">{cell.toLocaleString(\"kr-KO\")}</div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        dataField: \"ongkos\",\r\n        text: \"Ongkos\",\r\n        headerClasses: \"text-right\",\r\n\r\n        formatter: (cell) => {\r\n          return (\r\n            <div className=\"text-right\">{cell.toLocaleString(\"kr-KO\")}</div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        dataField: \"harga_total\",\r\n        text: \"Harga Total\",\r\n        headerClasses: \"text-right\",\r\n        footer: (cell, row, num, index) => {\r\n          return (\r\n            <div className=\"text-right\">\r\n              {cell.reduce((a, b) => a + b, 0).toLocaleString(\"kr-KO\")}\r\n            </div>\r\n          );\r\n        },\r\n        formatter: (cell) => {\r\n          return (\r\n            <div className=\"text-right\">{(cell || 0).toLocaleString(\"kr-KO\")}</div>\r\n          );\r\n        },\r\n      },\r\n    ];\r\n    return (\r\n      <form onSubmit={this.props.handleSubmit} autoComplete=\"off\">\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-2\">\r\n            <Field\r\n              name=\"tgl_awal\"\r\n              component={InputDate}\r\n              label=\"Tanggal Dari\"\r\n              type=\"text\"\r\n              selected={this.state.tgl_awal}\r\n              onChange={(date) => this.setStartDate(date)}\r\n              placeholder=\"Masukan Tanggal Dari\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"col-lg-2\">\r\n            <Field\r\n              name=\"tgl_akhir\"\r\n              component={InputDate}\r\n              type=\"text\"\r\n              selected={this.state.tgl_akhir}\r\n              onChange={(date) => this.setLastDate(date)}\r\n              label=\"Tanggal Akhir\"\r\n              placeholder=\"Masukan Tanggal Akhir\"\r\n            />\r\n          </div>\r\n          <div className=\"col-lg-2\">\r\n            <Field\r\n              label=\"Jenis\"\r\n              name=\"kode_dept\"\r\n              options={dataJenis}\r\n              placeholder={\"Silahkan Pilih Kode Jenis\"}\r\n              component={ReanderSelect}\r\n            />\r\n          </div>\r\n          <div className=\"col-lg-2\">\r\n            <Field\r\n              label=\"Kode Baki\"\r\n              name=\"kode_baki\"\r\n              options={databaki}\r\n              placeholder={\"Silahkan Pilih Kode Baki\"}\r\n              component={ReanderSelect}\r\n            />\r\n          </div>\r\n          <div className=\"col-lg-4\">\r\n            <div className=\"text-right\">\r\n              <label>&nbsp;</label>\r\n              <button\r\n                type=\"submit\"\r\n                value=\"PDF\"\r\n                name=\"type_btn\"\r\n                className=\"btn btn-primary btn-block\"\r\n              >\r\n                {this.props.isLoading ? (\r\n                  <>\r\n                    <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Sedang\r\n                    Mencari\r\n                  </>\r\n                ) : (\r\n                  \"Cari Laporan\"\r\n                )}\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-lg-12\">\r\n            <Tabel\r\n              keyField=\"kode_barcode\"\r\n              data={this.props.export ? this.props.LaporanStockJual : []}\r\n              columns={columns}\r\n              empty={true}\r\n              textEmpty=\"Data Laporan Stock Jual Kosong\"\r\n            />\r\n          </div>\r\n          <div className={this.props.export ? \"col-lg-12\" : \"col-lg-12 d-none\"}>\r\n            {/* <label htmlFor=\"\">&nbsp;</label> */}\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-6\">\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => this.exportPdf()}\r\n                  className=\"btn btn-warning btn-block\"\r\n                >\r\n                  {\" \"}\r\n                  Export PDF{\" \"}\r\n                </button>\r\n              </div>\r\n              <div className=\"col-lg-6\">\r\n                <LaporanStockJualExel data={this.props.LaporanStockJual} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {this.props.isLoading ? (\r\n          <Loading\r\n            loading\r\n            background=\"rgba(0, 0, 0, 0.35)\"\r\n            loaderColor=\"rgba(94, 147, 117, 1)\"\r\n          />\r\n        ) : null}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nHeadLaporanServiceAmbil = reduxForm({\r\n  form: \"HeadLaporanServiceAmbil\",\r\n  enableReinitialize: true,\r\n  validate: ValidasiTanggalLaporan,\r\n})(HeadLaporanServiceAmbil);\r\n// export default connect()(HeadLaporanServiceAmbil);\r\nexport default connect((state) => {\r\n  return {\r\n    databaki: state.datamaster.getDataBaki,\r\n    dataJenis: state.datamaster.getDataJenis,\r\n    initialValues: {\r\n      tgl_awal: getTglSystem(),\r\n      tgl_akhir: getTglSystem(),\r\n    },\r\n  };\r\n})(HeadLaporanServiceAmbil);\r\n","import {\r\n  React,\r\n  connect,\r\n  Link,\r\n  reduxForm,\r\n  Panel,\r\n  PanelHeader,\r\n  formatDate,\r\n  moment,\r\n  ToastNotification,\r\n  localStorageencryp,\r\n  PanelBody,\r\n  postDataNoTImeOut,\r\n} from \"../../../../components/helpers/library\";\r\nimport HeadLaporanStockJual from \"./HeadLaporanStockJual\";\r\n\r\nclass LaporanStockJual extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      LaporanStockJual: [],\r\n      export: false,\r\n    };\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleSubmit(data) {\r\n    let data_post = {\r\n      tgl_from: formatDate(\r\n        moment(new Date(data.tgl_awal)).format(\"YYYY-MM-DD\")\r\n      ),\r\n      tgl_to: formatDate(\r\n        moment(new Date(data.tgl_akhir)).format(\"YYYY-MM-DD\")\r\n      ),\r\n      kode_dept : data.kode_dept,\r\n      kode_baki : data.kode_baki,\r\n    };\r\n    let tgl_laporan = {\r\n      tgl_awal: formatDate(\r\n        moment(new Date(data.tgl_awal)).format(\"YYYY-MM-DD\")\r\n      ),\r\n      tgl_akhir: formatDate(\r\n        moment(new Date(data.tgl_akhir)).format(\"YYYY-MM-DD\")\r\n      ),\r\n    };\r\n    this.setState({\r\n      isLoading: true,\r\n    });\r\n  \r\n    postDataNoTImeOut(\"penjualan/report-stock-terjual\" , data_post)\r\n      .then((res) => {\r\n        // console.log(res);\r\n        if (res.data.length === 0) {\r\n          ToastNotification(\"info\", \"Laporan Stock Terjual Kosong\");\r\n          this.setState({\r\n            export: false,\r\n            isLoading: false,\r\n          });\r\n          return false;\r\n        }\r\n        ToastNotification(\"success\", \"Laporan Stock Jual Tersedia\");\r\n        localStorageencryp(\"tgl_laporan\", JSON.stringify(tgl_laporan));\r\n        this.setState({\r\n          LaporanStockJual: res.data,\r\n          isLoading: false,\r\n          export: true,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        ToastNotification(\"info\", \"Data Yang Di Cari Tidak Ada !!!\");\r\n        this.setState({\r\n          export: false,\r\n          isLoading: false,\r\n        });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ol className=\"breadcrumb float-xl-right\">\r\n          <li className=\"breadcrumb-item\">\r\n            <Link to=\"#\">Laporan</Link>\r\n          </li>\r\n          <li className=\"breadcrumb-item active\">Laporan Stock Jual</li>\r\n        </ol>\r\n        <h1 className=\"page-header\">Laporan Stock Jual </h1>\r\n        <Panel>\r\n          <PanelHeader>Laporan Stock Jual</PanelHeader>\r\n          <br />\r\n          {/* Blank Page */}\r\n          <PanelBody>\r\n            <HeadLaporanStockJual\r\n              export={this.state.export}\r\n              isLoading={this.state.isLoading}\r\n              LaporanStockJual={this.state.LaporanStockJual}\r\n              onSubmit={(data) => this.handleSubmit(data)}\r\n            />\r\n          </PanelBody>\r\n          <br />\r\n          {/* End Tambah Blank Page  */}\r\n        </Panel>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLaporanStockJual = reduxForm({\r\n  form: \"LaporanStockJual\",\r\n  enableReinitialize: true,\r\n})(LaporanStockJual);\r\nexport default connect(null)(LaporanStockJual);\r\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n/* global window, document, Blob */\n\n\nvar propTypes = {\n  table: _propTypes2.default.string.isRequired,\n  filename: _propTypes2.default.string.isRequired,\n  sheet: _propTypes2.default.string.isRequired,\n  id: _propTypes2.default.string,\n  className: _propTypes2.default.string,\n  buttonText: _propTypes2.default.string\n};\nvar defaultProps = {\n  id: 'button-download-as-xls',\n  className: 'button-download',\n  buttonText: 'Download'\n};\n\nvar ReactHTMLTableToExcel = function (_Component) {\n  _inherits(ReactHTMLTableToExcel, _Component);\n\n  function ReactHTMLTableToExcel(props) {\n    _classCallCheck(this, ReactHTMLTableToExcel);\n\n    var _this = _possibleConstructorReturn(this, (ReactHTMLTableToExcel.__proto__ || Object.getPrototypeOf(ReactHTMLTableToExcel)).call(this, props));\n\n    _this.handleDownload = _this.handleDownload.bind(_this);\n    return _this;\n  }\n\n  _createClass(ReactHTMLTableToExcel, [{\n    key: 'handleDownload',\n    value: function handleDownload() {\n      if (!document) {\n        if (process.env.NODE_ENV !== 'production') {\n          console.error('Failed to access document object');\n        }\n\n        return null;\n      }\n\n      if (document.getElementById(this.props.table).nodeType !== 1 || document.getElementById(this.props.table).nodeName !== 'TABLE') {\n        if (process.env.NODE_ENV !== 'production') {\n          console.error('Provided table property is not html table element');\n        }\n\n        return null;\n      }\n\n      var table = document.getElementById(this.props.table).outerHTML;\n      var sheet = String(this.props.sheet);\n      var filename = String(this.props.filename) + '.xls';\n      var uri = 'data:application/vnd.ms-excel;base64,';\n      var template = '<html xmlns:o=\"urn:schemas-microsoft-com:office:office\" xmlns:x=\"urn:schemas-mic' + 'rosoft-com:office:excel\" xmlns=\"http://www.w3.org/TR/REC-html40\"><head><meta cha' + 'rset=\"UTF-8\"><!--[if gte mso 9]><xml><x:ExcelWorkbook><x:ExcelWorksheets><x:Exce' + 'lWorksheet><x:Name>{worksheet}</x:Name><x:WorksheetOptions><x:DisplayGridlines/>' + '</x:WorksheetOptions></x:ExcelWorksheet></x:ExcelWorksheets></x:ExcelWorkbook></' + 'xml><![endif]--></head><body>{table}</body></html>';\n      var context = {\n        worksheet: sheet || 'Worksheet',\n        table: table\n      }; // If IE11\n\n      if (window.navigator.msSaveOrOpenBlob) {\n        var fileData = ['' + ('<html xmlns:o=\"urn:schemas-microsoft-com:office:office\" xmlns:x=\"urn:schemas-mic' + 'rosoft-com:office:excel\" xmlns=\"http://www.w3.org/TR/REC-html40\"><head><meta cha' + 'rset=\"UTF-8\"><!--[if gte mso 9]><xml><x:ExcelWorkbook><x:ExcelWorksheets><x:Exce' + 'lWorksheet><x:Name>{worksheet}</x:Name><x:WorksheetOptions><x:DisplayGridlines/>' + '</x:WorksheetOptions></x:ExcelWorksheet></x:ExcelWorksheets></x:ExcelWorkbook></' + 'xml><![endif]--></head><body>') + table + '</body></html>'];\n        var blobObject = new Blob(fileData);\n        document.getElementById('react-html-table-to-excel').click()(function () {\n          window.navigator.msSaveOrOpenBlob(blobObject, filename);\n        });\n        return true;\n      }\n\n      var element = window.document.createElement('a');\n      element.href = uri + ReactHTMLTableToExcel.base64(ReactHTMLTableToExcel.format(template, context));\n      element.download = filename;\n      document.body.appendChild(element);\n      element.click();\n      document.body.removeChild(element);\n      return true;\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      return _react2.default.createElement('button', {\n        id: this.props.id,\n        className: this.props.className,\n        type: 'button',\n        onClick: this.handleDownload\n      }, this.props.buttonText);\n    }\n  }], [{\n    key: 'base64',\n    value: function base64(s) {\n      return window.btoa(unescape(encodeURIComponent(s)));\n    }\n  }, {\n    key: 'format',\n    value: function format(s, c) {\n      return s.replace(/{(\\w+)}/g, function (m, p) {\n        return c[p];\n      });\n    }\n  }]);\n\n  return ReactHTMLTableToExcel;\n}(_react.Component);\n\nReactHTMLTableToExcel.propTypes = propTypes;\nReactHTMLTableToExcel.defaultProps = defaultProps;\nexports.default = ReactHTMLTableToExcel;","const ValidasiTanggalLaporan = (value, event) => {\r\n    const errors = {};\r\n    // console.log(event.charCode==13);\r\n    if (!value.tgl_awal) {\r\n      errors.tgl_awal = \"Tanggal Awal Tidak Boleh Kosong\";\r\n    }\r\n    if (!value.tgl_akhir) {\r\n      errors.tgl_akhir = \"Tanggal Akhir Tidak Boleh Kosong\";\r\n    }\r\n    return errors;\r\n  };\r\n  \r\n  export default ValidasiTanggalLaporan;\r\n  "],"sourceRoot":""}