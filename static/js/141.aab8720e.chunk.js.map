{"version":3,"sources":["pages/utility/SettingNota/SettingNota.jsx"],"names":["SettingNota","props","_this","Object","C_Users_Octavian_OneDrive_Documents_GitHub_nagapos_admin_master_repo_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_super","call","state","date","getDate","Date","toDateString","setState","isLoading","localStoragedecryp","getToday","history","push","window","pushState","document","title","location","href","addEventListener","event","context","handleSetPageSidebar","handleSetPageHeader","handleSetBodyWhiteBg","replace","react__WEBPACK_IMPORTED_MODULE_4___default","a","createElement","Fragment","React","Component","contextType","PageSettings","withRouter"],"mappings":"gLAOMA,oDAGJ,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAI,EAAAC,KAAAF,KAAMJ,IAORO,MAAQ,CACNC,KAAM,IATWP,EAYnBQ,QAAU,WACR,IAAID,GAAO,IAAIE,MAAOC,eACtBV,EAAKW,SAAS,CAAEJ,UAZhBP,EAAKM,MAAQ,CACXM,WAAW,GAHIZ,kEAkBOa,YAAmB,aACnBC,eACtBX,KAAKJ,MAAMgB,QAAQC,KAAK,cAE1BC,OAAOF,QAAQG,UAAU,KAAMC,SAASC,MAAOH,OAAOI,SAASC,MAC/DL,OAAOM,iBAAiB,WAAY,SAAUC,GAC5CP,OAAOF,QAAQG,UAAU,KAAMC,SAASC,MAAOH,OAAOI,SAASC,QAGjEnB,KAAKsB,QAAQC,sBAAqB,GAClCvB,KAAKsB,QAAQE,qBAAoB,GACjCxB,KAAKsB,QAAQG,sBAAqB,GAClCzB,KAAKK,UACLS,OAAOI,SAASQ,QAAQ,yFAMxB1B,KAAKsB,QAAQC,sBAAqB,GAClCvB,KAAKsB,QAAQE,qBAAoB,GACjCxB,KAAKsB,QAAQG,sBAAqB,oCAKlC,OACCE,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,iBAhDqBC,IAAMC,WAA1BrC,EACGsC,YAAcC,IAoDRC,sBAAWxC","file":"static/js/141.aab8720e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport {\r\n  getToday,\r\n  localStoragedecryp,\r\n} from \"../../../components/helpers/function.jsx\";\r\nimport { PageSettings } from \"../../../config/page-settings.js\";\r\nclass SettingNota extends React.Component {\r\n  static contextType = PageSettings;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      // isSettingNota: false,\r\n    };\r\n  }\r\n\r\n  state = {\r\n    date: \"\",\r\n  };\r\n\r\n  getDate = () => {\r\n    var date = new Date().toDateString();\r\n    this.setState({ date });\r\n  };\r\n\r\n  componentDidMount() {\r\n    const isAuthenticated = localStoragedecryp(\"islogin\");\r\n    if (isAuthenticated === getToday()) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n    window.history.pushState(null, document.title, window.location.href);\r\n    window.addEventListener(\"popstate\", function (event) {\r\n      window.history.pushState(null, document.title, window.location.href);\r\n    });\r\n\r\n    this.context.handleSetPageSidebar(false);\r\n    this.context.handleSetPageHeader(false);\r\n    this.context.handleSetBodyWhiteBg(true);\r\n    this.getDate();\r\n    window.location.replace('http://localhost:3000/settingnota.html')\r\n    // console.log(encryptascii('sa'));\r\n    // console.log(decryptascii('BF95'));\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.context.handleSetPageSidebar(true);\r\n    this.context.handleSetPageHeader(true);\r\n    this.context.handleSetBodyWhiteBg(false);\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n     <> </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(SettingNota);"],"sourceRoot":""}