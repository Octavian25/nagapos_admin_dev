{"version":3,"sources":["pages/DataMaster/MasterRekening/HeadMasterRekening.jsx","pages/DataMaster/MasterRekening/index.jsx","Validasi/ValidasiMasterSales.jsx"],"names":["HeadMasterRekening","state","aktif","this","props","dispatch","getDataBanks","setTimeout","document","getElementById","focus","_this2","react_default","a","createElement","onSubmit","handleSubmit","onKeyPress","e","key","preventDefault","autoComplete","isEdit","Fragment","Field","name","component","HiidenFiled","type","readOnly","tabIndex","id","ReanderField","normalize","NumberOnly","label","placeholder","ReanderSelect","options","data","map","list","nama_bank","value","kode_bank","onChange","setState","className","onClick","hideModal","disabled","isLoading","submitting","loading_default","loading","background","loaderColor","Component","reduxForm","form","enableReinitialize","validate","ValidasiMasterSales","connect","datamaster","ShowDataModal","initialValues","no_rekening","nama_rekening","MasterRekening","_this","Object","classCallCheck","_super","call","settings","columns","dataField","text","sort","csvExport","headerClasses","formatter","rowcontent","row","dataEdit","_id","library","modalEdit","hapusData","bind","assertThisInitialized","Swal","fire","html","icon","position","cancelButtonText","showCancelButton","confirmButtonText","showConfirmButton","then","result","isConfirmed","deleteData","res","ToastNotification","message","getDataRekening","catch","err","_err$response","_err$response$data","response","_this3","putDataNoTImeOut","_res$data","_err$response2","_err$response2$data","postDataNoTImeOut","_res$data2","reset","_err$response3","_err$response3$data","showModal","_this4","to","keyField","tambahData","handleClick","exportCsv","empty","textEmpty","title","size","content","MasterRekening_HeadMasterRekening","React","event","errors","kode_sales","nama_sales"],"mappings":"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","file":"static/js/69.7c05d966.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { getDataBanks, hideModal } from \"../../../actions/datamaster_action\";\r\nimport {\r\n  HiidenFiled,\r\n  ReanderField,\r\n  ReanderSelect,\r\n} from \"../../../components/helpers/field\";\r\nimport ValidasiMasterSales from \"../../../Validasi/ValidasiMasterSales.jsx\";\r\nimport Loading from \"react-fullscreen-loading\";\r\nimport { NumberOnly } from \"../../../Validasi/normalize\";\r\n\r\nconst maptostate = (state) => {\r\n  if (state.datamaster.ShowDataModal !== null) {\r\n    return {\r\n      data: state.datamaster.getDataBanks,\r\n      initialValues: {\r\n        id: state.datamaster.ShowDataModal.id,\r\n        no_rekening: state.datamaster.ShowDataModal.no_rekening,\r\n        kode_bank: state.datamaster.ShowDataModal.kode_bank,\r\n        nama_rekening: state.datamaster.ShowDataModal.nama_rekening,\r\n      },\r\n    };\r\n  }\r\n};\r\nclass HeadMasterRekening extends Component {\r\n  state = {\r\n    aktif: false,\r\n  };\r\n  componentDidMount() {\r\n    this.props.dispatch(getDataBanks());\r\n    setTimeout(() => {\r\n      document.getElementById(\"no_rekening\").focus();\r\n    }, 100);\r\n  }\r\n  render() {\r\n    return (\r\n      <form\r\n        onSubmit={this.props.handleSubmit}\r\n        onKeyPress={(e) => {\r\n          e.key === \"Enter\" && e.preventDefault();\r\n        }}\r\n        autoComplete=\"off\"\r\n      >\r\n        {this.props.isEdit ? (\r\n          <>\r\n            <Field\r\n              name=\"id\"\r\n              component={HiidenFiled}\r\n              type=\"hidden\"\r\n              readOnly={this.props.isEdit}\r\n            />\r\n          </>\r\n        ) : null}\r\n        <Field\r\n          tabIndex=\"1\"\r\n          id=\"no_rekening\"\r\n          name=\"no_rekening\"\r\n          component={ReanderField}\r\n          type=\"text\"\r\n          normalize={NumberOnly}\r\n          label=\"No Rekening\"\r\n          placeholder=\"Masukan No Rekening\"\r\n        />\r\n         <Field\r\n          tabIndex=\"2\"\r\n          id=\"nama_rekening\"\r\n          name=\"nama_rekening\"\r\n          component={ReanderField}\r\n          type=\"text\"\r\n          label=\"Nama Rekening\"\r\n          placeholder=\"Masukan Nama Rekening\"\r\n        />\r\n        <Field\r\n          id=\"kode_bank\"\r\n          name=\"kode_bank\"\r\n          component={ReanderSelect}\r\n          options={this.props.data.map((list) => {\r\n            let row = {\r\n              name: list.nama_bank,\r\n              value: list.kode_bank,\r\n            };\r\n            return row;\r\n          })}\r\n          type=\"text\"\r\n          label=\"Kode Bank\"\r\n          onChange={() => this.setState({ aktif: true })}\r\n          placeholder=\"Masukan Kode Bank\"\r\n        />\r\n       \r\n        <div className=\"row\">\r\n          <div className=\"col-12 text-right\">\r\n            <button\r\n              className=\"btn btn-white\"\r\n              onClick={() => this.props.dispatch(hideModal())}\r\n              type=\"button\"\r\n              disabled={this.props.isLoading}\r\n            >\r\n              Batal\r\n            </button>\r\n            &nbsp;\r\n            <button\r\n              tabIndex=\"3\"\r\n              className={this.state.aktif ? \"btn btn-primary\" : \"btn btn-white\"}\r\n              disabled={this.props.submitting}\r\n              type=\"submit\"\r\n            >\r\n              {this.props.isLoading ? (\r\n                <>\r\n                  <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Sedang\r\n                  Menyimpan\r\n                </>\r\n              ) : (\r\n                \"Simpan Data\"\r\n              )}\r\n            </button>\r\n          </div>\r\n        </div>\r\n        {this.props.isLoading ? (\r\n          <Loading\r\n            loading\r\n            background=\"rgba(0, 0, 0, 0.35)\"\r\n            loaderColor=\"rgba(94, 147, 117, 1)\"\r\n          />\r\n        ) : null}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nHeadMasterRekening = reduxForm({\r\n  form: \"ModalDataSales\",\r\n  enableReinitialize: true,\r\n  validate: ValidasiMasterSales,\r\n})(HeadMasterRekening);\r\nexport default connect(maptostate, null)(HeadMasterRekening);\r\n","\r\nimport {\r\n    React,\r\n    connect,\r\n    Link,\r\n    reduxForm,\r\n    Panel,\r\n    PanelHeader,\r\n    PanelBody,\r\n    ModalGlobal,\r\n    Tabel,\r\n    putDataNoTImeOut,\r\n    postDataNoTImeOut,\r\n    reset,\r\n    ToastNotification,\r\n    deleteData,\r\n    Swal\r\n  } from \"../../../components/helpers/library\";\r\nimport HeadMasterRekening from \"./HeadMasterRekening\";\r\nimport { hideModal,getDataRekening, ShowDataModal, showModal } from \"../../../actions/datamaster_action\";\r\n\r\n  \r\n  const maptostate = (state) => {\r\n      return {\r\n          data : state.datamaster.getDataRekening\r\n      }\r\n  }\r\n  class MasterRekening extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        isLoading: false,\r\n        settings : \"\",\r\n        columns: [\r\n            {\r\n              dataField: \"no_rekening\",\r\n              text: \"No Rekening\",\r\n              sort: true,\r\n            },\r\n            {\r\n              dataField: \"nama_rekening\",\r\n              text: \"Nama Rekening\",\r\n            },\r\n            {\r\n              dataField: \"kode_bank\",\r\n              text: \"Kode Bank\",\r\n            },\r\n            {\r\n              dataField: \"action\",\r\n              text: \"Action\",\r\n              csvExport: false,\r\n              headerClasses: \"text-center\",\r\n              formatter: (rowcontent, row) => {\r\n                let dataEdit = {\r\n                  id: row._id,\r\n                  kode_bank: row.kode_bank,\r\n                  nama_rekening: row.nama_rekening,\r\n                  no_rekening: row.no_rekening,\r\n                };\r\n                 \r\n                return (\r\n                  <div className=\"row text-center\">\r\n                    <div className=\"col-12\">\r\n                      <button\r\n                        onClick={() => this.modalEdit(dataEdit)}\r\n                        className=\"btn btn-primary mr-3\"\r\n                      >\r\n                        <i className=\"fa fa-edit\"></i>\r\n                      </button>\r\n                      <button\r\n                        onClick={() =>\r\n                          this.hapusData(row)\r\n                        }\r\n                        className=\"btn btn-danger\"\r\n                      >\r\n                        <i className=\"fa fa-trash\"></i>\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              },\r\n            },\r\n          ],\r\n      };\r\n      this.handleSubmit = this.handleSubmit.bind(this);\r\n      // this.print = this.print.bind(this);\r\n    }\r\n    hapusData(row){\r\n        Swal.fire({\r\n          // title: \"Anda Yakin !!\",\r\n          // text: \"Ingin Menghapus Data Ini ?\",\r\n          html:\r\n            \"Apakah Anda Yakin Ingin \" +\r\n            \"Menghapus \" +\r\n            \"<h1><b>No Rekening \" +\r\n            row.no_rekening +\r\n            \"</b> ?</h1>\",\r\n          icon: \"warning\",\r\n          position: \"top-center\",\r\n          cancelButtonText: \"Tidak\",\r\n          showCancelButton: true,\r\n          confirmButtonText: \"OK\",\r\n          showConfirmButton: true,\r\n        }).then((result) => {\r\n          if (result.isConfirmed) {\r\n            deleteData('rekenings/'+row._id).then((res)=>{\r\n              ToastNotification('success',res.data.message || \"Berhasil Menghapus Data\")\r\n              this.setState({\r\n                isLoading: false,\r\n              });\r\n              this.props.dispatch(getDataRekening())\r\n            }).catch((err)=>{\r\n              ToastNotification('info',err.response?.data?.message || \"Gagal Menghapus Data\")\r\n              this.setState({\r\n                isLoading: false,\r\n              });\r\n            })\r\n          }\r\n        });\r\n      }\r\n    handleSubmit(data) {\r\n        this.setState({\r\n            isLoading: true,\r\n          });\r\n          this.state.isEdit ?\r\n          putDataNoTImeOut('rekenings/'+data.id,data).then((res)=>{\r\n            ToastNotification(\"success\",res?.data?.message || \"Berhasil Menyimpan Data\")\r\n            this.setState({\r\n              isLoading: false,\r\n            });\r\n            this.props.dispatch(hideModal());\r\n            this.props.dispatch(getDataRekening())\r\n          }).catch((err)=>{\r\n            this.setState({\r\n              isLoading: false,\r\n            });\r\n            ToastNotification(\"info\",err.response?.data?.message || \"Terjadi Kesalhaan Saat Mengirim Data\")\r\n          })\r\n          :\r\n          postDataNoTImeOut('rekenings',data).then((res)=>{\r\n            ToastNotification(\"success\",res?.data?.message || \"Berhasil Menyimpan Data\")\r\n            this.setState({\r\n              isLoading: false,\r\n            });\r\n            this.props.dispatch(hideModal());\r\n            this.props.dispatch(getDataRekening())\r\n            this.props.dispatch(reset());\r\n          }).catch((err)=>{\r\n            this.setState({\r\n              isLoading: false,\r\n            });\r\n            ToastNotification(\"info\",err.response?.data?.message || \"Terjadi Kesalhaan Saat Mengirim Data\")\r\n          })\r\n    }\r\n  \r\n    componentDidMount() {\r\n     this.props.dispatch(getDataRekening())\r\n    }\r\n    modalEdit(row){\r\n        this.props.dispatch(showModal());\r\n        this.props.dispatch(ShowDataModal(row));\r\n        this.setState({\r\n          isEdit: true,\r\n        });\r\n      }\r\n      showModal(){\r\n          this.props.dispatch(showModal());\r\n          this.props.dispatch(ShowDataModal(false));\r\n          this.setState({\r\n            isEdit: false,\r\n          });\r\n      }\r\n    render() {\r\n      return (\r\n        <div>\r\n          <ol className=\"breadcrumb float-xl-right\">\r\n            <li className=\"breadcrumb-item\">\r\n              <Link to=\"#\">Data Master</Link>\r\n            </li>\r\n            <li className=\"breadcrumb-item active\">Master Rekening</li>\r\n          </ol>\r\n          <h1 className=\"page-header\">Master Rekening </h1>\r\n          <Panel>\r\n            <PanelHeader>Master Rekening</PanelHeader>\r\n            <PanelBody>\r\n            <Tabel\r\n              keyField=\"no_rekening\"\r\n              tambahData={true}\r\n              handleClick={() => this.showModal()}\r\n              exportCsv={true}\r\n              data={this.props.data}\r\n              columns={this.state.columns}\r\n              empty={this.props.data}\r\n              textEmpty=\"Data Rekening\"\r\n            />\r\n            </PanelBody>\r\n          </Panel>\r\n          <ModalGlobal\r\n            title={this.state.isEdit ? \"Edit Data Rekening\" : \"Tambah Data Rekening\"}\r\n            size=\"P\"\r\n            content={\r\n              <HeadMasterRekening\r\n                isLoading={this.state.isLoading}\r\n                isEdit={this.state.isEdit}\r\n                onSubmit={(data) => this.handleSubmit(data)}\r\n              />\r\n            }\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  MasterRekening = reduxForm({\r\n    form: \"MasterRekening\",\r\n    enableReinitialize: true,\r\n  })(MasterRekening);\r\n  export default connect(maptostate)(MasterRekening);","const ValidasiMasterSales = (value, event) => {\r\n  const errors = {};\r\n  // console.log(event.charCode==13);\r\n  if (!value.kode_sales) {\r\n    errors.kode_sales = \"Kode Sales Tidak Boleh Kosong\";\r\n  }\r\n  if (!value.nama_sales) {\r\n    errors.nama_sales = \"Nama Sales Tidak Boleh Kosong\";\r\n  }\r\n  if (!value.kode_bank) {\r\n    errors.kode_bank = \"Kode Bank Tidak Boleh Kosong\";\r\n  }\r\n  if (!value.nama_bank) {\r\n    errors.nama_bank = \"Nama Bank Tidak Boleh Kosong\";\r\n  }\r\n  if (!value.no_rekening) {\r\n    errors.no_rekening = \"No Rekening Tidak Boleh Kosong\";\r\n  }\r\n  if (!value.nama_rekening) {\r\n    errors.nama_rekening = \"Nama Rekening Tidak Boleh Kosong\";\r\n  }\r\n  return errors;\r\n};\r\n\r\nexport default ValidasiMasterSales;\r\n"],"sourceRoot":""}