{"version":3,"sources":["pages/Laporan/LaporanService/LaporanServiceSelesai/pdf/LaporanServiceSelesaiPdf.jsx","pages/Laporan/LaporanService/LaporanServiceSelesai/exel/LaporanServiceSelesaiExel.jsx","pages/Laporan/LaporanService/LaporanServiceSelesai/HeadServiceSelesai.jsx","pages/Laporan/LaporanService/LaporanServiceSelesai/index.jsx","../node_modules/react-html-table-to-excel/index.js","Validasi/ValidasiTanggalLaporan.jsx"],"names":["LaporanServiceSelesaiPdf","tableColumn","data","arguments","length","undefined","doc","jsPDF","tableRows","finalY","setFontSize","text","getUserdata","nama_toko","jml_alamat","alamat_toko","slice","setProperties","title","concat","localStoragedecryp","JSON","parse","tgl_awal","tgl_akhir","content","styles","halign","total","forEach","item","index","detail_barang","ongkos","rows","no_faktur_service","tgl_system","nama_customer","kode_sales","deskripsi","berat","toFixed","parseInt","jumlah","toLocaleString","push","footer","colSpan","fillColor","textColor","printed","user_id","getToday","fontStyle","autoTable","head","body","startY","theme","rowPageBreak","margin","top","footStyles","fontSize","bodyStyles","headStyles","tableLineColor","tableLineWidth","autoTableEndPosY","pages","internal","getNumberOfPages","pageWidth","pageSize","width","pageHeight","height","j","horizontalPos","verticalPos","setPage","align","save","LaporanServiceSelesaiExel","props","_this","Object","classCallCheck","this","_super","call","state","react_default","a","createElement","Fragment","react_html_table_to_excel_default","id","className","table","filename","sheet","buttonText","style","display","textAlign","backgroundColor","color","map","row","key","Component","HeadServiceSelesai","date","Date","columns","dataField","footerAttrs","cell","num","LaporanServiceSelesai","headerClasses","formatter","setStartDate","bind","assertThisInitialized","setLastDate","setState","_this2","onSubmit","handleSubmit","autoComplete","Field","name","component","InputDate","label","type","selected","onChange","placeholder","value","isLoading","tabel","keyField","export","empty","textEmpty","onClick","exportPdf","exel_LaporanServiceSelesaiExel","loading_default","loading","background","loaderColor","reduxForm","form","enableReinitialize","validate","ValidasiTanggalLaporan","connect","initialValues","getTglSystem","data_post","formatDate","moment","format","postDataNoTImeOut","then","res","ToastNotification","catch","err","_this3","library","to","LaporanServiceSelesai_HeadServiceSelesai","React","defineProperty","exports","_createClass","defineProperties","target","i","descriptor","enumerable","configurable","writable","Constructor","protoProps","staticProps","prototype","_react","__webpack_require__","_react2","_interopRequireDefault","_propTypes2","obj","__esModule","default","propTypes","string","isRequired","ReactHTMLTableToExcel","_Component","instance","TypeError","_classCallCheck","self","ReferenceError","_possibleConstructorReturn","__proto__","getPrototypeOf","handleDownload","subClass","superClass","create","constructor","setPrototypeOf","_inherits","document","getElementById","nodeType","nodeName","outerHTML","String","context","worksheet","window","navigator","msSaveOrOpenBlob","blobObject","Blob","click","element","href","base64","download","appendChild","removeChild","s","btoa","unescape","encodeURIComponent","c","replace","m","p","defaultProps","event","errors"],"mappings":"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","file":"static/js/49.c3b9e025.chunk.js","sourcesContent":["import jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\nimport {\r\n  getToday,\r\n  getUserdata,\r\n  localStoragedecryp,\r\n} from \"../../../../../components/helpers/function\";\r\n// Date Fns is used to format the dates we receive\r\n\r\n// define a generatePDF function that accepts a tickets argument\r\nconst LaporanServiceSelesaiPdf = (\r\n  data = \"\",\r\n  username = \"\",\r\n  tanggal_dari = \"\",\r\n  tanggal_sampai = \"\"\r\n) => {\r\n  // initialize jsPDF\r\n  const doc = new jsPDF(\"l\", \"mm\", [297, 210]);\r\n  //   let data = JSON.parse(localStorage.getItem(\"tt_pengeluaran_barang\")) || [];\r\n  let tableRows = [];\r\n  // let footRows = [];\r\n  let tableColumn = [];\r\n  let finalY = 30;\r\n\r\n\r\n  doc.setFontSize(15);\r\n  doc.text(\"LAPORAN SERVICE SELESAI\", 14, 15);\r\n  doc.setFontSize(20);\r\n  doc.text(getUserdata().nama_toko, 200, 15);\r\n  doc.setFontSize(8);\r\n  let jml_alamat = getUserdata().alamat_toko.length;\r\n  if (jml_alamat > 20) {\r\n    doc.text(getUserdata().alamat_toko.slice(0,48), 200, 20);\r\n  }\r\n  if (jml_alamat > 50) {\r\n    doc.text(getUserdata().alamat_toko.slice(48,90), 200, 25);\r\n  }\r\n  doc.setFontSize(10);\r\n  doc.setProperties({\r\n    title: \"LAPORAN SERVICE SELESAI\",\r\n  });\r\n  //row 1\r\n  doc.text(\r\n    `PERIODE : ${\r\n      localStoragedecryp(\"tgl_laporan\").length === 0\r\n        ? null\r\n        : JSON.parse(localStoragedecryp(\"tgl_laporan\")).tgl_awal +\r\n          \" s/d \" +\r\n          JSON.parse(localStoragedecryp(\"tgl_laporan\")).tgl_akhir\r\n    }`,\r\n    14,\r\n    25\r\n  );\r\n  tableColumn = [\r\n    [\r\n      {\r\n        content: `NO SERVICE`,\r\n      },\r\n      {\r\n        content: `TGL TRANSAKSI`,\r\n      },\r\n      {\r\n        content: `NAMA CUSTOMER`,\r\n      },\r\n      {\r\n        content: `SALES`,\r\n      },\r\n      {\r\n        content: `DESKRIPSI`,\r\n      },\r\n      {\r\n        content: `BERAT`,\r\n        styles: {\r\n          halign: 'right',\r\n        },\r\n      },\r\n      {\r\n        content: `QTY`,\r\n        styles: {\r\n          halign: 'right',\r\n        },\r\n      },\r\n      {\r\n        content: `ONGKOS`,\r\n        styles: {\r\n          halign: 'right',\r\n        },\r\n      },\r\n    ],\r\n  ];\r\n  let total = 0;\r\n  data.forEach((item, index) => {\r\n    total = total + item.detail_barang.ongkos;\r\n    let rows = [\r\n      item.no_faktur_service,\r\n      item.tgl_system,\r\n      item.nama_customer,\r\n      item.kode_sales,\r\n      item.detail_barang.deskripsi,\r\n      {\r\n        content: item.detail_barang.berat.toFixed(3),\r\n        styles: {\r\n          halign: 'right',\r\n        },\r\n      },\r\n    \r\n      {\r\n        content: parseInt(item.detail_barang.jumlah),\r\n        styles: {\r\n          halign : \"right\",\r\n        }\r\n      },\r\n      {\r\n        content: parseInt(item.detail_barang.ongkos).toLocaleString(\"kr-KO\"),\r\n        styles: {\r\n          halign : \"right\",\r\n        }\r\n      },\r\n      \r\n\r\n    ];\r\n    tableRows.push(rows)\r\n  })\r\n  \r\n  let footer = [\r\n    {\r\n      content: `Total Transaksi: ${data.length}`,\r\n      colSpan: 8,\r\n      styles: {\r\n        halign: 'center',\r\n        fillColor: \"#E8E5E5\",\r\n        textColor: \"#000\",\r\n      },\r\n    },\r\n    {\r\n      content: parseInt(total).toLocaleString(\"kr-KO\"),\r\n      styles: {\r\n        halign: \"right\",\r\n        fillColor: \"#E8E5E5\",\r\n        textColor: \"#000\",\r\n      }\r\n    },\r\n  ]\r\n  tableRows.push(footer)\r\n\r\n  let printed = [\r\n    {\r\n      content: `Printed By ${JSON.parse(localStoragedecryp(\"userdata\")).user_id} / ${getToday()}`,\r\n      colSpan: 7,\r\n      styles: {\r\n        // lineWidth: 0.1,\r\n        fontStyle: \"italic\",\r\n        textColor: \"#000\",\r\n        // fillColor: \"#E8E5E5\"\r\n      },\r\n    },\r\n  ]\r\n  tableRows.push(printed);\r\n\r\n  doc.autoTable({\r\n    head: tableColumn,\r\n    body: tableRows,\r\n    // foot: tbl_barang,\r\n    startY: finalY,\r\n    theme: \"plain\",\r\n    rowPageBreak: \"avoid\",\r\n    // pageBreak: \"avoid\",\r\n    margin: { top: 10 },\r\n    footStyles: {\r\n      // lineWidth: 0.02,\r\n      // lineColor: \"#000\",\r\n      fontSize: 8,\r\n    },\r\n    bodyStyles: {\r\n      // lineWidth: 0.02,\r\n      // lineColor: \"#000\",\r\n      fontSize: 8,\r\n    },\r\n    headStyles: {\r\n      fontSize: 8,\r\n      // lineWidth: 0.02,\r\n      // lineColor: \"#000\",\r\n      fillColor: \"#E8E5E5\",\r\n      textColor: \"#000\",\r\n    },\r\n    tableLineColor: [255, 255, 255],\r\n    tableLineWidth: 1,\r\n  });\r\n  finalY = doc.autoTableEndPosY() + 3;\r\n  tableRows = [];\r\n  // footRows = [];\r\n  // tbl_barang = [];\r\n  // const date = Date().split(\" \");\r\n  // we use a date string to generate our filename.\r\n  // const dateStr = date[2] + date[3] + date[4];\r\n  // ticket title. and margin-top + margin-left\r\n  // doc.text(\r\n  //   `User                          : ${\r\n  //     JSON.parse(localStoragedecryp(\"userdata\")).user_id\r\n  //   }`,\r\n  //   14,\r\n  //   finalY + 10\r\n  // );\r\n  // doc.text(`Cetak                        : ${getToday()}`, 14, finalY + 16);\r\n  const pages = doc.internal.getNumberOfPages();\r\n  const pageWidth = doc.internal.pageSize.width; //Optional\r\n  const pageHeight = doc.internal.pageSize.height; //Optional\r\n  doc.setFontSize(10); //Optional\r\n  for (let j = 1; j < pages + 1; j++) {\r\n    let horizontalPos = pageWidth / 2; //Can be fixed number\r\n    let verticalPos = pageHeight - 10; //Can be fixed number\r\n    doc.setPage(j);\r\n    doc.text(`${j} of ${pages}`, horizontalPos, verticalPos, {\r\n      align: \"center\",\r\n    });\r\n  }\r\n  // doc.autoPrint();\r\n  doc.save(`LAPORAN SERVICE SELESAI.pdf`);\r\n  // var string = doc.output(\"datauristring\");\r\n  // // var embed = \"<embed width='100%' height='100%' src='\" + string + \"'/>\";\r\n  // var x = window.open();\r\n  // x.document.open();\r\n  // x.document.write(\r\n  //   \"<html><head><title>LAPORAN SERVICE SELESAI</title></head><body style='margin:0 !important'><embed width='100%' height='100%'  src=\" +\r\n  //     string +\r\n  //     \"></embed></body></html>\"\r\n  // );\r\n  // x.document.write(embed);\r\n  // setInterval(() => {\r\n  //   x.close();\r\n  // }, 1000);\r\n};\r\n\r\nexport default LaporanServiceSelesaiPdf;\r\n","import React, { Component } from \"react\";\r\nimport ReactHTMLTableToExcel from \"react-html-table-to-excel\";\r\nimport {\r\n  getUserdata,\r\n  localStoragedecryp,\r\n} from \"../../../../../components/helpers/function\";\r\nclass LaporanServiceSelesaiExel extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n        <ReactHTMLTableToExcel\r\n          id=\"test-table-xls-button\"\r\n          className=\"btn btn-success btn-block\"\r\n          table=\"table-to-xls\"\r\n          filename=\"Laporan Service Masuk\"\r\n          sheet=\"Laporan Service Masuk\"\r\n          buttonText=\"Export Exel\"\r\n        />\r\n        <table id=\"table-to-xls\" style={{ display: \"none\" }}>\r\n          <thead>\r\n            <tr>\r\n              <th colSpan=\"8\" style={{ textAlign: \"center\" }}>\r\n                {\" \"}\r\n                LAPORAN SERVICE MASUK{\" \"}\r\n              </th>\r\n            </tr>\r\n            <tr>\r\n              <th colSpan=\"8\"> Periode </th>\r\n            </tr>\r\n            <tr>\r\n              <th colSpan=\"8\">\r\n                {\" \"}\r\n                {localStoragedecryp(\"tgl_laporan\").length === 0\r\n                  ? null\r\n                  : JSON.parse(localStoragedecryp(\"tgl_laporan\")).tgl_awal +\r\n                    \" s/d \" +\r\n                    JSON.parse(localStoragedecryp(\"tgl_laporan\"))\r\n                      .tgl_akhir}{\" \"}\r\n              </th>\r\n            </tr>\r\n            <tr>\r\n              <th colSpan=\"8\"> TOKO : {getUserdata().nama_toko} </th>\r\n            </tr>\r\n\r\n            <tr>\r\n              <th colSpan=\"8\"> ALAMAT : {getUserdata().alamat_toko} </th>\r\n            </tr>\r\n            <tr></tr>\r\n            <tr>\r\n              <td style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>\r\n                NO SERVICE\r\n              </td>\r\n              <td style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>\r\n                TGL TRANSAKSI\r\n              </td>\r\n              <td style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>\r\n                NAMA CUSTOMER\r\n              </td>\r\n             \r\n              <td\r\n                style={{\r\n                  backgroundColor: \"#E8E5E5\",\r\n                  color: \"#000\",\r\n                  textAlign: \"right\",\r\n                }}\r\n              >\r\n                SALES\r\n              </td>\r\n              <td\r\n                style={{\r\n                  backgroundColor: \"#E8E5E5\",\r\n                  color: \"#000\",\r\n                  textAlign: \"right\",\r\n                }}\r\n              >\r\n                DESKRIPSI\r\n              </td>\r\n              <td\r\n                style={{\r\n                  backgroundColor: \"#E8E5E5\",\r\n                  color: \"#000\",\r\n                  textAlign: \"right\",\r\n                }}\r\n              >\r\n                BERAT\r\n              </td>\r\n              <td\r\n                style={{\r\n                  backgroundColor: \"#E8E5E5\",\r\n                  color: \"#000\",\r\n                  textAlign: \"right\",\r\n                }}\r\n              >\r\n                QTY\r\n              </td>\r\n              <td\r\n                style={{\r\n                  backgroundColor: \"#E8E5E5\",\r\n                  color: \"#000\",\r\n                  textAlign: \"right\",\r\n                }}\r\n              >\r\n                ONGKOS\r\n              </td>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.props.data.map((row, index) => (\r\n              <>\r\n                <tr key={index}>\r\n                  <td>{row.no_faktur_service}</td>\r\n                  <td>{row.tgl_system}</td>\r\n                  <td>{row.nama_customer}</td>\r\n                  <td>{row.kode_sales}</td>\r\n                  <td>{row.detail_barang.deskripsi}</td>\r\n                  <td style={{textAlign: \"right\",}}>&nbsp;{row.detail_barang.berat.toFixed(2)}</td>\r\n                  <td style={{textAlign: \"right\",}}>&nbsp;{row.detail_barang.jumlah.toLocaleString(\"kr-KO\")}</td>\r\n                  <td style={{textAlign: \"right\",}}>&nbsp;{row.detail_barang.ongkos.toLocaleString(\"kr-KO\")}</td>\r\n                </tr>\r\n              </>\r\n            ))}\r\n          </tbody>\r\n          <tfoot>\r\n            <tr>\r\n              <td\r\n                style={{\r\n                  backgroundColor: \"#E8E5E5\",\r\n                  color: \"#000\",\r\n                  textAlign: \"center\",\r\n                }}\r\n                colSpan=\"8\"\r\n              >\r\n                Total Transaksi {this.props.data.length}\r\n              </td>\r\n            </tr>\r\n          </tfoot>\r\n        </table>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default LaporanServiceSelesaiExel;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { InputDate } from \"../../../../components/helpers/field\";\r\nimport { getTglSystem } from \"../../../../components/helpers/function\";\r\nimport Tabel from \"../../../../components/helpers/tabel\";\r\nimport ValidasiTanggalLaporan from \"../../../../Validasi/ValidasiTanggalLaporan\";\r\nimport Loading from \"react-fullscreen-loading\";\r\nimport LaporanServiceSelesaiPdf from \"./pdf/LaporanServiceSelesaiPdf\";\r\nimport LaporanServiceSelesaiExel from \"./exel/LaporanServiceSelesaiExel\";\r\nclass HeadServiceSelesai extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      date: new Date(),\r\n      columns: [\r\n        {\r\n          dataField: \"no_faktur_service\",\r\n          text: \"No Service\",\r\n          footerAttrs: {\r\n            colSpan: \"8\",\r\n          },\r\n          footer: (cell, row, num, index) => {\r\n            return (\r\n              <div>\r\n                Total Transaksi : {this.props.LaporanServiceSelesai.length}{\" \"}\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n        {\r\n          dataField: \"tgl_system\",\r\n          text: \"Tgl Transaksi\",\r\n        },\r\n        {\r\n          dataField: \"nama_customer\",\r\n          text: \"Nama Customer\",\r\n        },\r\n\r\n        {\r\n          dataField: \"alamat_customer\",\r\n          text: \"Alamat\",\r\n        },\r\n        {\r\n          dataField: \"kode_sales\",\r\n          text: \"Sales\",\r\n        },\r\n        {\r\n          dataField: \"detail_barang.deskripsi\",\r\n          text: \"Deskripsi\",\r\n        },\r\n        {\r\n          dataField: \"detail_barang.berat\",\r\n          text: \"Berat\",\r\n          headerClasses: \"text-right\",\r\n          formatter: (cell) => {\r\n            return <div className=\"text-right\">{cell.toFixed(2)}</div>;\r\n          },\r\n        },\r\n        {\r\n          dataField: \"detail_barang.ongkos\",\r\n          text: \"Ongkos\",\r\n          headerClasses: \"text-right\",\r\n          formatter: (cell) => {\r\n            return (\r\n              <div className=\"text-right\">{cell.toLocaleString(\"kr-KO\")}</div>\r\n            );\r\n          },\r\n        },\r\n      ],\r\n    };\r\n    this.setStartDate = this.setStartDate.bind(this);\r\n    this.setLastDate = this.setLastDate.bind(this);\r\n  }\r\n\r\n  exportPdf() {\r\n    LaporanServiceSelesaiPdf(this.props.LaporanServiceSelesai);\r\n  }\r\n  setStartDate(date) {\r\n    this.setState({\r\n      tgl_awal: new Date(date),\r\n    });\r\n  }\r\n  setLastDate(date) {\r\n    this.setState({\r\n      tgl_akhir: new Date(date),\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.props.handleSubmit} autoComplete=\"off\">\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-4\">\r\n            <Field\r\n              name=\"tgl_awal\"\r\n              component={InputDate}\r\n              label=\"Tanggal Dari\"\r\n              type=\"text\"\r\n              selected={this.state.tgl_awal}\r\n              onChange={(date) => this.setStartDate(date)}\r\n              placeholder=\"Masukan Tanggal Dari\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"col-lg-4\">\r\n            <Field\r\n              name=\"tgl_akhir\"\r\n              component={InputDate}\r\n              type=\"text\"\r\n              selected={this.state.tgl_akhir}\r\n              onChange={(date) => this.setLastDate(date)}\r\n              label=\"Tanggal Akhir\"\r\n              placeholder=\"Masukan Tanggal Akhir\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"col-lg-4\">\r\n            <div className=\"text-right\">\r\n              <label>&nbsp;</label>\r\n              <button\r\n                type=\"submit\"\r\n                value=\"PDF\"\r\n                name=\"type_btn\"\r\n                className=\"btn btn-primary btn-block\"\r\n              >\r\n                {this.props.isLoading ? (\r\n                  <>\r\n                    <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Sedang\r\n                    Mencari\r\n                  </>\r\n                ) : (\r\n                  \"Cari Laporan\"\r\n                )}\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-lg-12\">\r\n            <Tabel\r\n              keyField=\"no_faktur_service\"\r\n              data={this.props.export ? this.props.LaporanServiceSelesai : []}\r\n              columns={this.state.columns}\r\n              empty={true}\r\n              textEmpty=\"Data Laporan Service Selesai Kosong\"\r\n            />\r\n          </div>\r\n          <div className={this.props.export ? \"col-lg-12\" : \"col-lg-12 d-none\"}>\r\n            {/* <label htmlFor=\"\">&nbsp;</label> */}\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-6\">\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => this.exportPdf()}\r\n                  className=\"btn btn-warning btn-block\"\r\n                >\r\n                  {\" \"}\r\n                  Export PDF{\" \"}\r\n                </button>\r\n              </div>\r\n              <div className=\"col-lg-6\">\r\n                <LaporanServiceSelesaiExel\r\n                  data={this.props.LaporanServiceSelesai}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {this.props.isLoading ? (\r\n          <Loading\r\n            loading\r\n            background=\"rgba(0, 0, 0, 0.35)\"\r\n            loaderColor=\"rgba(94, 147, 117, 1)\"\r\n          />\r\n        ) : null}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nHeadServiceSelesai = reduxForm({\r\n  form: \"HeadServiceSelesai\",\r\n  enableReinitialize: true,\r\n  validate: ValidasiTanggalLaporan,\r\n})(HeadServiceSelesai);\r\n// export default connect()(HeadServiceSelesai);\r\nexport default connect((state) => {\r\n  return {\r\n    initialValues: {\r\n      tgl_awal: getTglSystem(),\r\n      tgl_akhir: getTglSystem(),\r\n    },\r\n  };\r\n})(HeadServiceSelesai);\r\n","import {\r\n  React,\r\n  connect,\r\n  Link,\r\n  reduxForm,\r\n  Panel,\r\n  PanelHeader,\r\n  postDataNoTImeOut,\r\n  formatDate,\r\n  moment,\r\n  ToastNotification,\r\n  PanelBody,\r\n} from \"../../../../components/helpers/library\";\r\nimport HeadServiceSelesai from \"./HeadServiceSelesai\";\r\n\r\nclass LaporanServiceSelesai extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      LaporanServiceSelesai: [],\r\n      export: false,\r\n    };\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleSubmit(data) {\r\n    let data_post = {\r\n      tgl_awal: formatDate(\r\n        moment(new Date(data.tgl_awal)).format(\"YYYY-MM-DD\")\r\n      ),\r\n      tgl_akhir: formatDate(\r\n        moment(new Date(data.tgl_akhir)).format(\"YYYY-MM-DD\")\r\n      ),\r\n    };\r\n    this.setState({\r\n      isLoading: true,\r\n    });\r\n    postDataNoTImeOut(\"service/get/serviceselesai\", data_post)\r\n      .then((res) => {\r\n        // console.log(res);\r\n        if (res.data.length === 0) {\r\n          ToastNotification(\"info\", \"Laporan Service Selesai Kosong\");\r\n          this.setState({\r\n            export: false,\r\n            isLoading: false,\r\n          });\r\n          return false;\r\n        }\r\n        ToastNotification(\"success\", \"Laporan Service Selesai Tersedia\");\r\n        this.setState({\r\n          LaporanServiceSelesai: res.data,\r\n          isLoading: false,\r\n          export: true,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        ToastNotification(\"info\", \"Data Yang Di Cari Tidak Ada !!!\");\r\n        this.setState({\r\n          export: false,\r\n          isLoading: false,\r\n        });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ol className=\"breadcrumb float-xl-right\">\r\n          <li className=\"breadcrumb-item\">\r\n            <Link to=\"#\">Laporan</Link>\r\n          </li>\r\n          <li className=\"breadcrumb-item active\">Laporan Service Selesai</li>\r\n        </ol>\r\n        <h1 className=\"page-header\">Laporan Service Selesai </h1>\r\n        <Panel>\r\n          <PanelHeader>Laporan Service Selesai</PanelHeader>\r\n          <br />\r\n          {/* Blank Page */}\r\n          <PanelBody>\r\n            <HeadServiceSelesai\r\n              export={this.state.export}\r\n              isLoading={this.state.isLoading}\r\n              LaporanServiceSelesai={this.state.LaporanServiceSelesai}\r\n              onSubmit={(data) => this.handleSubmit(data)}\r\n            />\r\n          </PanelBody>\r\n          <br />\r\n          {/* End Tambah Blank Page  */}\r\n        </Panel>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLaporanServiceSelesai = reduxForm({\r\n  form: \"LaporanServiceSelesai\",\r\n  enableReinitialize: true,\r\n})(LaporanServiceSelesai);\r\nexport default connect(null)(LaporanServiceSelesai);\r\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n/* global window, document, Blob */\n\n\nvar propTypes = {\n  table: _propTypes2.default.string.isRequired,\n  filename: _propTypes2.default.string.isRequired,\n  sheet: _propTypes2.default.string.isRequired,\n  id: _propTypes2.default.string,\n  className: _propTypes2.default.string,\n  buttonText: _propTypes2.default.string\n};\nvar defaultProps = {\n  id: 'button-download-as-xls',\n  className: 'button-download',\n  buttonText: 'Download'\n};\n\nvar ReactHTMLTableToExcel = function (_Component) {\n  _inherits(ReactHTMLTableToExcel, _Component);\n\n  function ReactHTMLTableToExcel(props) {\n    _classCallCheck(this, ReactHTMLTableToExcel);\n\n    var _this = _possibleConstructorReturn(this, (ReactHTMLTableToExcel.__proto__ || Object.getPrototypeOf(ReactHTMLTableToExcel)).call(this, props));\n\n    _this.handleDownload = _this.handleDownload.bind(_this);\n    return _this;\n  }\n\n  _createClass(ReactHTMLTableToExcel, [{\n    key: 'handleDownload',\n    value: function handleDownload() {\n      if (!document) {\n        if (process.env.NODE_ENV !== 'production') {\n          console.error('Failed to access document object');\n        }\n\n        return null;\n      }\n\n      if (document.getElementById(this.props.table).nodeType !== 1 || document.getElementById(this.props.table).nodeName !== 'TABLE') {\n        if (process.env.NODE_ENV !== 'production') {\n          console.error('Provided table property is not html table element');\n        }\n\n        return null;\n      }\n\n      var table = document.getElementById(this.props.table).outerHTML;\n      var sheet = String(this.props.sheet);\n      var filename = String(this.props.filename) + '.xls';\n      var uri = 'data:application/vnd.ms-excel;base64,';\n      var template = '<html xmlns:o=\"urn:schemas-microsoft-com:office:office\" xmlns:x=\"urn:schemas-mic' + 'rosoft-com:office:excel\" xmlns=\"http://www.w3.org/TR/REC-html40\"><head><meta cha' + 'rset=\"UTF-8\"><!--[if gte mso 9]><xml><x:ExcelWorkbook><x:ExcelWorksheets><x:Exce' + 'lWorksheet><x:Name>{worksheet}</x:Name><x:WorksheetOptions><x:DisplayGridlines/>' + '</x:WorksheetOptions></x:ExcelWorksheet></x:ExcelWorksheets></x:ExcelWorkbook></' + 'xml><![endif]--></head><body>{table}</body></html>';\n      var context = {\n        worksheet: sheet || 'Worksheet',\n        table: table\n      }; // If IE11\n\n      if (window.navigator.msSaveOrOpenBlob) {\n        var fileData = ['' + ('<html xmlns:o=\"urn:schemas-microsoft-com:office:office\" xmlns:x=\"urn:schemas-mic' + 'rosoft-com:office:excel\" xmlns=\"http://www.w3.org/TR/REC-html40\"><head><meta cha' + 'rset=\"UTF-8\"><!--[if gte mso 9]><xml><x:ExcelWorkbook><x:ExcelWorksheets><x:Exce' + 'lWorksheet><x:Name>{worksheet}</x:Name><x:WorksheetOptions><x:DisplayGridlines/>' + '</x:WorksheetOptions></x:ExcelWorksheet></x:ExcelWorksheets></x:ExcelWorkbook></' + 'xml><![endif]--></head><body>') + table + '</body></html>'];\n        var blobObject = new Blob(fileData);\n        document.getElementById('react-html-table-to-excel').click()(function () {\n          window.navigator.msSaveOrOpenBlob(blobObject, filename);\n        });\n        return true;\n      }\n\n      var element = window.document.createElement('a');\n      element.href = uri + ReactHTMLTableToExcel.base64(ReactHTMLTableToExcel.format(template, context));\n      element.download = filename;\n      document.body.appendChild(element);\n      element.click();\n      document.body.removeChild(element);\n      return true;\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      return _react2.default.createElement('button', {\n        id: this.props.id,\n        className: this.props.className,\n        type: 'button',\n        onClick: this.handleDownload\n      }, this.props.buttonText);\n    }\n  }], [{\n    key: 'base64',\n    value: function base64(s) {\n      return window.btoa(unescape(encodeURIComponent(s)));\n    }\n  }, {\n    key: 'format',\n    value: function format(s, c) {\n      return s.replace(/{(\\w+)}/g, function (m, p) {\n        return c[p];\n      });\n    }\n  }]);\n\n  return ReactHTMLTableToExcel;\n}(_react.Component);\n\nReactHTMLTableToExcel.propTypes = propTypes;\nReactHTMLTableToExcel.defaultProps = defaultProps;\nexports.default = ReactHTMLTableToExcel;","const ValidasiTanggalLaporan = (value, event) => {\r\n    const errors = {};\r\n    // console.log(event.charCode==13);\r\n    if (!value.tgl_awal) {\r\n      errors.tgl_awal = \"Tanggal Awal Tidak Boleh Kosong\";\r\n    }\r\n    if (!value.tgl_akhir) {\r\n      errors.tgl_akhir = \"Tanggal Akhir Tidak Boleh Kosong\";\r\n    }\r\n    return errors;\r\n  };\r\n  \r\n  export default ValidasiTanggalLaporan;\r\n  "],"sourceRoot":""}