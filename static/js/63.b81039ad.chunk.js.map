{"version":3,"sources":["pages/DataMaster/DataBandrol/FormBandrol.jsx","pages/DataMaster/DataBandrol/MasterBandrol.jsx","Validasi/ValidasiMasterGudang.jsx"],"names":["FormBandrol","state","aktif","_this2","this","setTimeout","props","isEdit","document","getElementById","focus","_this3","react_default","a","createElement","onSubmit","handleSubmit","autoComplete","onKeyPress","e","key","preventDefault","Field","id","tabIndex","name","component","ReanderField","type","label","readOnly","placeholder","Gramasi","onBlur","setState","className","onClick","dispatch","hideModal","disabled","isLoading","submitting","Fragment","loading_default","loading","background","loaderColor","Component","reduxForm","form","enableReinitialize","validate","ValidasiMasterGudang","connect","datamaster","ShowModalBandrol","initialValues","keterangan","berat_bandrol","MasterBandrol","_this","Object","classCallCheck","_super","call","modalDialog","columns","dataField","text","csvExport","headerClasses","formatter","rowcontent","row","dataEdit","formEditDataKategori","data","data_edit","data_post","putData","then","ToastNotification","getBandrol","reset","catch","error","postData","ErrorHandling","err","NotifError","showModal","react_router_dom","to","panel","react_bootstrap_table2_toolkit_lib_default","keyField","DataBandrol","search","exportCSV","fileName","length","showModalKategori","lib_default","baseProps","ModalGlobal","size","title","content","DataBandrol_FormBandrol","React","value","event","errors","kode_gudang","nama_gudang"],"mappings":"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","file":"static/js/63.b81039ad.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { hideModal } from \"../../../actions/datamaster_action\";\r\nimport { Gramasi, ReanderField } from \"../../../components/helpers/field\";\r\nimport ValidasiMasterGudang from \"../../../Validasi/ValidasiMasterGudang.jsx\";\r\nimport Loading from 'react-fullscreen-loading';\r\n\r\nconst maptostate = (state) => {\r\n  if (state.datamaster.ShowModalBandrol !== null) {\r\n    return {\r\n      initialValues: {\r\n        keterangan: state.datamaster.ShowModalBandrol.keterangan,\r\n        berat_bandrol: state.datamaster.ShowModalBandrol.berat_bandrol,\r\n      },\r\n    };\r\n  }\r\n};\r\nclass FormBandrol extends Component {\r\n  state = {\r\n    aktif: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    setTimeout(() => {\r\n      this.props.isEdit\r\n        ? document.getElementById(\"berat_bandrol\").focus()\r\n        : document.getElementById(\"keterangan\").focus();\r\n    }, 100);\r\n  }\r\n  render() {\r\n    return (\r\n      <form\r\n        onSubmit={this.props.handleSubmit}\r\n        autoComplete=\"off\"\r\n        onKeyPress={(e) => {\r\n          e.key === \"Enter\" && e.preventDefault();\r\n        }}\r\n      >\r\n        <Field\r\n          id=\"keterangan\"\r\n          tabIndex=\"1\"\r\n          name=\"keterangan\"\r\n          component={ReanderField}\r\n          type=\"text\"\r\n          label=\"Keterangan\"\r\n          readOnly={this.props.isEdit}\r\n          placeholder=\"Masukan Keterangan\"\r\n        />\r\n\r\n        <Field\r\n          tabIndex=\"2\"\r\n          id=\"berat_bandrol\"\r\n          name=\"berat_bandrol\"\r\n          component={Gramasi}\r\n          type=\"text\"\r\n          label=\"Berat Bandrol\"\r\n          onBlur={() => this.setState({ aktif: true })}\r\n          placeholder=\"Berat Bandrol\"\r\n        />\r\n        <div className=\"row\">\r\n          <div className=\"col-12 text-right\">\r\n            <button\r\n              className=\"btn btn-white\"\r\n              onClick={() => this.props.dispatch(hideModal())}\r\n              type=\"button\"\r\n              disabled={this.props.isLoading}\r\n            >\r\n              Batal\r\n            </button>\r\n            &nbsp;\r\n            <button\r\n              tabIndex=\"3\"\r\n              className={this.state.aktif ? \"btn btn-primary\" : \"btn btn-white\"}\r\n              disabled={this.props.submitting}\r\n              type=\"submit\"\r\n            >\r\n              {this.props.isLoading ? (\r\n                <>\r\n                  <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Sedang\r\n                  Menyimpan\r\n                </>\r\n              ) : (\r\n                \"Simpan Data\"\r\n              )}\r\n            </button>\r\n          </div>\r\n        </div>\r\n        {this.props.isLoading ? (\r\n        <Loading \r\n        loading\r\n        background=\"rgba(0, 0, 0, 0.35)\"\r\n         loaderColor=\"rgba(94, 147, 117, 1)\" />\r\n      ) : null}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nFormBandrol = reduxForm({\r\n  form: \"FormBandrol\",\r\n  enableReinitialize: true,\r\n  validate: ValidasiMasterGudang,\r\n})(FormBandrol);\r\nexport default connect(maptostate, null)(FormBandrol);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Panel, PanelHeader } from \"../../../components/panel/panel.jsx\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport { connect } from \"react-redux\";\r\nimport ToolkitProvider from \"react-bootstrap-table2-toolkit\";\r\nimport {\r\n  getBandrol,\r\n  hideModal,\r\n  showModal,\r\n  ShowModalBandrol,\r\n} from \"../../../actions/datamaster_action.jsx\";\r\nimport FormBandrol from \"./FormBandrol.jsx\";\r\nimport {\r\n  NotifError,\r\n  ToastNotification,\r\n} from \"../../../components/helpers/notification.jsx\";\r\nimport { reset } from \"redux-form\";\r\nimport { postData, putData } from \"../../../config/axios.jsx\";\r\nimport ModalGlobal from \"../../../components/helpers/ModalGlobal.jsx\";\r\n\r\nconst maptostate = (state) => {\r\n  return {\r\n    DataBandrol: state.datamaster.getBandrol,\r\n    hideModal: state.datamaster.modalDialog,\r\n  };\r\n};\r\n\r\nclass MasterBandrol extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isEdit: false,\r\n      modalDialog: false,\r\n      columns: [\r\n        {\r\n          dataField: \"keterangan\",\r\n          text: \"Keterangan \",\r\n        },\r\n        {\r\n          dataField: \"berat_bandrol\",\r\n          text: \"Berat Bandrol \",\r\n        },\r\n        {\r\n          dataField: \"action\",\r\n          text: \"Action\",\r\n          csvExport: false,\r\n          headerClasses: \"text-center\",\r\n          formatter: (rowcontent, row) => {\r\n            let dataEdit = {\r\n              keterangan: row.keterangan,\r\n              berat_bandrol: row.berat_bandrol,\r\n            };\r\n            return (\r\n              <div className=\"row text-center\">\r\n                <div className=\"col-12\">\r\n                  <button\r\n                    onClick={() => this.formEditDataKategori(dataEdit)}\r\n                    className=\"btn btn-primary mr-3\"\r\n                  >\r\n                    <i className=\"fa fa-edit\"></i>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n      ],\r\n    };\r\n  }\r\n\r\n  handleSubmit(data) {\r\n    this.setState({\r\n      isLoading: true,\r\n    });\r\n    // console.log(data);\r\n    let data_edit = {\r\n      berat_bandrol: data.berat_bandrol,\r\n    };\r\n    let data_post = {\r\n      keterangan: data.keterangan,\r\n      berat_bandrol: data.berat_bandrol,\r\n    };\r\n    this.state.isEdit\r\n      ? putData(\"parabandrol/edit/by-keterangan/\" + data.keterangan, data_edit)\r\n          .then(() => {\r\n            this.props.dispatch(hideModal());\r\n          })\r\n          .then(() => {\r\n            ToastNotification(\"success\", \"Data Berhasil Diedit\");\r\n          })\r\n          .then(() => {\r\n            this.props.dispatch(getBandrol());\r\n          })\r\n          .then(() => {\r\n            this.setState({ isLoading: false });\r\n          })\r\n          .then(() => {\r\n            this.props.dispatch(reset(\"FormBandrol\"));\r\n          })\r\n        .catch((error) => {\r\n          ToastNotification(\"info\", \"Terjadi Kesalahan Saat Mengirim Data\")\r\n          this.setState({ isLoading: false });\r\n          })\r\n      : postData(\"pababandrol/add\", data_post)\r\n          .then(() => {\r\n            this.props.dispatch(hideModal());\r\n          })\r\n          .then(() => {\r\n            ToastNotification(\"success\", \"Data Berhasil Disimpan\");\r\n          })\r\n          .then(() => {\r\n            this.props.dispatch(getBandrol());\r\n          })\r\n          .then(() => {\r\n            this.props.dispatch(reset(\"FormBandrol\"));\r\n          })\r\n          .then(() => {\r\n            this.setState({ isLoading: false });\r\n          })\r\n          .catch((error) => this.ErrorHandling(error));\r\n  }\r\n  ErrorHandling(err) {\r\n    this.setState({ isLoading: false });\r\n    NotifError(err);\r\n  }\r\n  componentDidMount() {\r\n    // getData(\"parabandrol/get/all\")\r\n    //   .then((res) => {\r\n    //     this.setState({\r\n    //       listBandrol: res.data,\r\n    //     });\r\n    //   })\r\n    //   .catch((err) => {\r\n    //     console.log(err);\r\n    //   });\r\n    this.props.dispatch(getBandrol());\r\n  }\r\n  formEditDataKategori(dataEdit) {\r\n    this.props.dispatch(showModal());\r\n    this.props.dispatch(ShowModalBandrol(dataEdit));\r\n    this.setState({\r\n      isEdit: true,\r\n    });\r\n  }\r\n\r\n  showModalKategori() {\r\n    this.props.dispatch(showModal());\r\n    this.props.dispatch(ShowModalBandrol(false));\r\n    this.setState({\r\n      isEdit: false,\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ol className=\"breadcrumb float-xl-right\">\r\n          <li className=\"breadcrumb-item\">\r\n            <Link to=\"#\">Data Master</Link>\r\n          </li>\r\n          <li className=\"breadcrumb-item active\">Master Bandrol</li>\r\n        </ol>\r\n        <h1 className=\"page-header\">Master Bandrol </h1>\r\n        <Panel>\r\n          <PanelHeader>Master Bandrol</PanelHeader>\r\n          <br />\r\n          <div className=\"container\">\r\n            <ToolkitProvider\r\n              keyField=\"keterangan\"\r\n              data={this.props.DataBandrol || []}\r\n              columns={this.state.columns}\r\n              search\r\n              exportCSV={{\r\n                fileName: \"Export Master Gudang.csv\",\r\n              }}\r\n            >\r\n              {(props) => (\r\n                <div className=\"row\">\r\n                  <div className=\"col-6 mb-3\">\r\n                    {this.props.DataBandrol.length === 0 ? (\r\n                      <button\r\n                        onClick={() => this.showModalKategori()}\r\n                        className=\"btn btn-primary\"\r\n                      >\r\n                        <i className=\"fa fa-plus\"></i>\r\n                      </button>\r\n                    ) : null}\r\n                  </div>\r\n                  <div className=\"col-12\">\r\n                    <BootstrapTable {...props.baseProps} />\r\n                    <br />\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </ToolkitProvider>\r\n          </div>\r\n          <br />\r\n          <ModalGlobal\r\n            size=\"P\"\r\n            title={\r\n              this.state.isEdit ? \"Edit Data Bandrol\" : \"Tambah Data Bandrol\"\r\n            }\r\n            content={\r\n              <FormBandrol\r\n                isEdit={this.state.isEdit}\r\n                isLoading={this.state.isLoading}\r\n                onSubmit={(data) => this.handleSubmit(data)}\r\n              />\r\n            }\r\n          />\r\n        </Panel>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(maptostate, null)(MasterBandrol);\r\n","const ValidasiMasterGudang = (value, event) => {\r\n  const errors = {};\r\n  // console.log(event.charCode==13);\r\n  if (!value.kode_gudang) {\r\n    errors.kode_gudang = \"Kode Gudang Tidak Boleh Kosong\";\r\n  }\r\n  if (!value.nama_gudang) {\r\n    errors.nama_gudang = \"Nama Gudang Tidak Boleh Kosong\";\r\n  }\r\n  return errors;\r\n};\r\n\r\nexport default ValidasiMasterGudang;\r\n"],"sourceRoot":""}