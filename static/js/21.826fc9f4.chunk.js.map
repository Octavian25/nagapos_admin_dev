{"version":3,"sources":["pages/Laporan/LaporanPembelian/LaporanPembelianBarang/pdf/ExportTransaksiPembelian.jsx","pages/Laporan/LaporanPembelian/LaporanPembelianBarang/exel/ExportTransaksiPembelianPdf.jsx","pages/Laporan/LaporanPembelian/LaporanPembelianBarang/HeadFormLaporanPembelianBarang.jsx","../node_modules/react-html-table-to-excel/index.js","Validasi/LaporanKeuangan/ValidasiLaporanKeuangan.jsx"],"names":["ExportTransaksiPembelian","tableColumn","data","arguments","length","undefined","doc","jsPDF","tableRows","footRows","finalY","setFontSize","text","getUserdata","nama_toko","jml_alamat","alamat_toko","slice","setProperties","title","concat","localStoragedecryp","JSON","parse","tgl_awal","tgl_akhir","total_berat","total_berat_nota","total_harga_nota","total_harga","total_harga_rata","total_barang","content","styles","halign","forEach","item","index","_id","pembayaran","header_detail","jenis","parseInt","jumlah_rp","toLocaleString","colSpan","push","detail","rows","no_faktur_beli","kode_sales","kode_member","nama_customer","nama_barang","kondisi","kode_dept","formatGram","berat_nota","berat","harga_nota","harga","harga_rata","parseFloat","grand","fillColor","textColor","toFixed","printed","user_id","getToday","fontStyle","autoTable","head","body","foot","startY","theme","rowPageBreak","margin","top","bodyStyles","fontSize","headStyles","autoTableEndPosY","pages","internal","getNumberOfPages","pageWidth","pageSize","width","pageHeight","height","j","horizontalPos","verticalPos","setPage","align","save","ExportTransaksiPembelianPdf","props","_this","Object","classCallCheck","this","_super","call","state","barang","react_default","a","createElement","Fragment","react_html_table_to_excel_default","id","className","table","filename","sheet","buttonText","style","display","backgroundColor","color","map","row","textAlign","Component","HeadFormLaporanPembelianBarang","date","Date","type","isLoading","setStartDate","bind","assertThisInitialized","setLastDate","change","dispatch","GetDataGroup","_this2","setState","setTimeout","LaporanTransaksiPembelian","_this3","datagroup","value","name","list","kode_group","databarang","element","ongkos","harga_gram","columns","dataField","footerAttrs","footer","cell","num","headerClasses","formatter","columnData","reduce","acc","rowIndex","colIndex","status_valid","onSubmit","handleSubmit","autoComplete","Field","component","InputDate","label","selected","onChange","placeholder","ReanderSelect","options","e","tabel","keyField","export","empty","textEmpty","onClick","exportPdf","exel_ExportTransaksiPembelianPdf","loading_default","loading","background","loaderColor","reduxForm","form","enableReinitialize","validate","ValidasiLaporanKeuangan","connect","datamaster","initialValues","getTglSystem","defineProperty","exports","_createClass","defineProperties","target","i","descriptor","enumerable","configurable","writable","key","Constructor","protoProps","staticProps","prototype","_react","__webpack_require__","_react2","_interopRequireDefault","_propTypes2","obj","__esModule","default","propTypes","string","isRequired","ReactHTMLTableToExcel","_Component","instance","TypeError","_classCallCheck","self","ReferenceError","_possibleConstructorReturn","__proto__","getPrototypeOf","handleDownload","subClass","superClass","create","constructor","setPrototypeOf","_inherits","document","getElementById","nodeType","nodeName","outerHTML","String","context","worksheet","window","navigator","msSaveOrOpenBlob","blobObject","Blob","click","href","base64","format","download","appendChild","removeChild","s","btoa","unescape","encodeURIComponent","c","replace","m","p","defaultProps","event","errors","tanggal_awal","type_laporan"],"mappings":"oOA+YeA,UAzYkB,WAK5B,IAMCC,EAVJC,EAIGC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAJI,GAMDG,GAFHH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GAAAA,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GAAAA,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GAES,IAAII,UAAM,IAAK,KAAM,CAAC,IAAK,OAEnCC,EAAY,GACZC,EAAW,GAEXC,EAAS,GAIbJ,EAAIK,YAAY,IAChBL,EAAIM,KAAK,8BAA+B,GAAI,IAC5CN,EAAIK,YAAY,IAChBL,EAAIM,KAAKC,cAAcC,UAAW,IAAK,IACvCR,EAAIK,YAAY,GAChB,IAAII,EAAaF,cAAcG,YAAYZ,OACxCW,GAAc,IACfT,EAAIM,KAAKC,cAAcG,YAAa,IAAK,IAEvCD,EAAa,IACfT,EAAIM,KAAKC,cAAcG,YAAYC,MAAM,EAAE,IAAK,IAAK,IAEnDF,EAAa,IACfT,EAAIM,KAAKC,cAAcG,YAAYC,MAAM,GAAG,IAAK,IAAK,IAExDX,EAAIK,YAAY,IAChBL,EAAIY,cAAc,CAChBC,MAAO,gCAGTb,EAAIM,KAAJ,aAAAQ,OAEiD,IAA7CC,YAAmB,eAAejB,OAC9B,KACAkB,KAAKC,MAAMF,YAAmB,gBAAgBG,SAC9C,QACAF,KAAKC,MAAMF,YAAmB,gBAAgBI,WAEpD,GACA,IAEF,IAAIC,EAAc,EACdC,EAAmB,EACnBC,EAAmB,EACnBC,EAAc,EACdC,EAAmB,EACnBC,EAAe,EACnB9B,EAAc,CAOZ,CACE,CACE+B,QAAO,WAET,CACEA,QAAO,cAET,CACEA,QAAO,gBAET,CACEA,QAAO,eAET,CACEA,QAAO,eAWT,CACEA,QAAO,WAET,CACEA,QAAO,aAET,CACEA,QAAO,aACPC,OAAQ,CACNC,OAAQ,UAGZ,CACEF,QAAO,QACPC,OAAQ,CACNC,OAAQ,UAGZ,CACEF,QAAO,aACPC,OAAQ,CACNC,OAAQ,UAGZ,CACEF,QAAO,aACPC,OAAQ,CACNC,OAAQ,UAGZ,CACEF,QAAO,aACPC,OAAQ,CACNC,OAAQ,YAMhBhC,EAAKiC,QAAQ,SAACC,EAAMC,GAQlBD,EAAKE,IAAIC,WAAWJ,QAAQ,SAACK,EAAeH,GAE1C,IAAIE,EAAa,CACf,CACEP,QAAO,GAAAZ,OAAKoB,EAAcC,MAAnB,OAAArB,OAA8BsB,SAASF,EAAcG,WAAWC,eAAe,SAA/E,KACPC,QAAS,KAGbrC,EAAUsC,KAAKP,KAGjBH,EAAKW,OAAOZ,QAAQ,SAACC,EAAMC,GACzB,IAAIW,EAAO,CACTZ,EAAKa,eACLb,EAAKc,WACLd,EAAKe,YACLf,EAAKgB,cACLhB,EAAKiB,YAILjB,EAAKkB,QACLlB,EAAKmB,UACL,CACEvB,QAASwB,YAAWpB,EAAKqB,WAAY,GACrCxB,OAAQ,CACNC,OAAQ,UAGZ,CACEF,QAASwB,YAAWpB,EAAKsB,MAAO,GAChCzB,OAAQ,CACNC,OAAQ,UAIZ,CACEF,QAASU,SAASN,EAAKuB,YAAYf,eAAe,SAClDX,OAAQ,CACNC,OAAQ,UAIZ,CACEF,QAASU,SAASN,EAAKwB,OAAOhB,eAAe,SAC7CX,OAAQ,CACNC,OAAQ,UAIZ,CACEF,QAAQU,SAASN,EAAKyB,YAAYjB,eAAe,SACjDX,OAAQ,CACNC,OAAQ,WAKU4B,WAAW1B,EAAKsB,OACNI,WAAW1B,EAAKqB,YAChBK,WAAW1B,EAAKuB,YAC1BG,WAAW1B,EAAKwB,OACNE,WAAW1B,EAAKyB,YAElDnC,GAA4BoC,WAAW1B,EAAKsB,OAC5C/B,GAAsCmC,WAAW1B,EAAKqB,YACtD7B,GAAsCkC,WAAW1B,EAAKuB,YACtD9B,GAA4BiC,WAAW1B,EAAKwB,OAC5C9B,GAAsCgC,WAAW1B,EAAKyB,YAEtDrD,EAAUsC,KAAKE,KAEjBjB,GAA8BK,EAAKW,OAAO3C,SAwD5C,IAAI2D,EAAQ,CACV,CACE/B,QAAO,iBAAAZ,OAAmBW,EAAnB,cACPc,QAAS,EACTZ,OAAQ,CACNC,OAAQ,SACR8B,UAAW,UACXC,UAAW,SAGf,CACEjC,QAAO,GAAAZ,OAAIO,EAAiBuC,QAAQ,IACpCjC,OAAQ,CACN+B,UAAW,UACXC,UAAW,OACX/B,OAAQ,UAIZ,CACEF,QAAO,GAAAZ,OAAIM,EAAYwC,QAAQ,IAC/BjC,OAAQ,CACN+B,UAAW,UACXC,UAAW,OACX/B,OAAQ,UAIZ,CACEF,QAAO,GAAAZ,OAAIsB,SAASd,GAAkBgB,eAAe,UACrDX,OAAQ,CACN+B,UAAW,UACXC,UAAW,OACX/B,OAAQ,UAIZ,CACEF,QAAO,GAAAZ,OAAIsB,SAASb,GAAae,eAAe,UAChDX,OAAQ,CACN+B,UAAW,UACXC,UAAW,OACX/B,OAAQ,UAIZ,CACEF,QAAO,GAAAZ,OAAIsB,SAASZ,GAAkBc,eAAe,UACrDX,OAAQ,CACN+B,UAAW,UACXC,UAAW,OACX/B,OAAQ,WAMd1B,EAAUsC,KAAKiB,GACf,IAAII,EAAU,CACZ,CACEtB,QAAQ,EACRb,QAAO,cAAAZ,OAAgBE,KAAKC,MAAMF,YAAmB,aAAa+C,QAA3D,OAAAhD,OAAwEiD,eAC/EpC,OAAQ,CAENqC,UAAW,SACXL,UAAW,UAKjBzD,EAAUsC,KAAKqB,GACf7D,EAAIiE,UAAU,CACZC,KAAMvE,EACNwE,KAAMjE,EACNkE,KAAMjE,EACNkE,OAASjE,EACTkE,MAAO,QACPC,aAAc,QAEdC,OAAQ,CAAEC,IAAK,IACfC,WAAY,CAGVC,SAAU,GAEZC,WAAY,CACVD,SAAU,EAGVjB,UAAW,UACXC,UAAW,UAIfvD,EAASJ,EAAI6E,mBAAqB,EAClC3E,EAAY,GACZC,EAAW,GAQX,IAAM2E,EAAQ9E,EAAI+E,SAASC,mBACrBC,EAAYjF,EAAI+E,SAASG,SAASC,MAClCC,EAAapF,EAAI+E,SAASG,SAASG,OACzCrF,EAAIK,YAAY,IAChB,IAAK,IAAIiF,EAAI,EAAGA,EAAIR,EAAQ,EAAGQ,IAAK,CAClC,IAAIC,EAAgBN,EAAY,EAC5BO,EAAcJ,EAAa,GAC/BpF,EAAIyF,QAAQH,GACZtF,EAAIM,KAAJ,GAAAQ,OAAYwE,EAAZ,QAAAxE,OAAoBgE,GAASS,EAAeC,EAAa,CACvDE,MAAO,WAIX1F,EAAI2F,KAAJ,yECOaC,oDAlYb,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAI,EAAAC,KAAAF,KAAMJ,IACDO,MAAQ,GAFIN,uDAKjB,IAAI1E,EAAc,EACdC,EAAmB,EACnBC,EAAmB,EACnBC,EAAc,EACdC,EAAmB,EACnBC,EAAe,EAYnB,OAVAwE,KAAKJ,MAAMjG,KAAKiC,QAAQ,SAACwE,EAAQtE,GAC/BsE,EAAO5D,OAAOZ,QAAQ,SAACC,EAAMC,GAC3BX,GAA4BoC,WAAW1B,EAAKsB,OAC5C/B,GAAsCmC,WAAW1B,EAAKqB,YACtD7B,GAAsCkC,WAAW1B,EAAKuB,YACtD9B,GAA4BiC,WAAW1B,EAAKwB,OAC5C9B,GAAsCgC,WAAW1B,EAAKyB,cAExD9B,GAA8B4E,EAAO5D,OAAO3C,SAG5CwG,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAACE,EAAAH,EAAD,CACEI,GAAG,wBACHC,UAAU,4BACVC,MAAM,eACNC,SAAS,8BACTC,MAAM,8BACNC,WAAW,gBAEbV,EAAAC,EAAAC,cAAA,SAAOG,GAAG,eAAeM,MAAO,CAAEC,QAAS,SACzCZ,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAIjE,QAAQ,MAAZ,kCAEF+D,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAIjE,QAAQ,MAAZ,cAEF+D,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAIjE,QAAQ,MACT,IAC6C,IAA7CxB,YAAmB,eAAejB,OAC/B,KACAkB,KAAKC,MAAMF,YAAmB,gBAAgBG,SAC9C,QACAF,KAAKC,MAAMF,YAAmB,gBAC3BI,UAAW,MAGtBmF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAIjE,QAAQ,MAAZ,YAA2BhC,cAAcC,UAAzC,MAGF8F,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAIjE,QAAQ,MAAZ,cAA6BhC,cAAcG,YAA3C,MAEF4F,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAIjE,QAAQ,QAEd+D,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MACES,MAAO,CACLE,gBAAiB,UACjBC,MAAO,SAHX,WAQAd,EAAAC,EAAAC,cAAA,MACES,MAAO,CACLE,gBAAiB,UACjBC,MAAO,SAHX,cAQAd,EAAAC,EAAAC,cAAA,MACES,MAAO,CACLE,gBAAiB,UACjBC,MAAO,SAHX,eAQAd,EAAAC,EAAAC,cAAA,MACES,MAAO,CACLE,gBAAiB,UACjBC,MAAO,SAHX,eAQAd,EAAAC,EAAAC,cAAA,MACES,MAAO,CACLE,gBAAiB,UACjBC,MAAO,SAHX,eAgCEd,EAAAC,EAAAC,cAAA,MACAS,MAAO,CACLE,gBAAiB,UACjBC,MAAO,SAHT,WAQFd,EAAAC,EAAAC,cAAA,MACES,MAAO,CACLE,gBAAiB,UACjBC,MAAO,SAHX,aAQAd,EAAAC,EAAAC,cAAA,MACES,MAAO,CACLE,gBAAiB,UACjBC,MAAO,SAHX,cAQAd,EAAAC,EAAAC,cAAA,MACES,MAAO,CACLE,gBAAiB,UACjBC,MAAO,SAHX,SAQAd,EAAAC,EAAAC,cAAA,MACES,MAAO,CACLE,gBAAiB,UACjBC,MAAO,SAHX,cAQAd,EAAAC,EAAAC,cAAA,MACES,MAAO,CACLE,gBAAiB,UACjBC,MAAO,SAHX,cAQAd,EAAAC,EAAAC,cAAA,MACES,MAAO,CACLE,gBAAiB,UACjBC,MAAO,SAHX,gBAWJd,EAAAC,EAAAC,cAAA,aACGP,KAAKJ,MAAMjG,KAAKyH,IAAI,SAACvF,EAAMC,GAAP,OACnBuE,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACG3E,EAAKE,IAAIC,WAAWoF,IAAI,SAACnF,EAAeH,GAAhB,OACvBuE,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KAeEH,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAIjE,QAAQ,MACTL,EAAcC,MAAO,IACrBC,SAASF,EAAcG,WAAWC,eACjC,cAOTR,EAAKW,OAAO4E,IAAI,SAACC,EAAKvF,GAAN,OACfuE,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UAAKc,EAAI3E,gBACT2D,EAAAC,EAAAC,cAAA,UAAKc,EAAI1E,YACT0D,EAAAC,EAAAC,cAAA,UAAKc,EAAIzE,aACTyD,EAAAC,EAAAC,cAAA,UAAKc,EAAIxE,eACTwD,EAAAC,EAAAC,cAAA,UAAKc,EAAIvE,aAITuD,EAAAC,EAAAC,cAAA,UAAKc,EAAItE,SACTsD,EAAAC,EAAAC,cAAA,UAAKc,EAAIrE,WACTqD,EAAAC,EAAAC,cAAA,MAAIS,MAAO,CAACM,UAAY,UAAYrE,YAAWoE,EAAInE,WAAW,IAC9DmD,EAAAC,EAAAC,cAAA,MAAIS,MAAO,CAACM,UAAY,UAAYrE,YAAWoE,EAAIlE,MAAM,IACzDkD,EAAAC,EAAAC,cAAA,MAAIS,MAAO,CAACM,UAAY,UAAYD,EAAIjE,WAAWf,eAAe,UAClEgE,EAAAC,EAAAC,cAAA,MAAIS,MAAO,CAACM,UAAY,UAAYD,EAAIhE,MAAMhB,eAAe,UAC7DgE,EAAAC,EAAAC,cAAA,MAAIS,MAAO,CAACM,UAAY,UAAYD,EAAI/D,WAAWjB,eAAe,iBAqF5EgE,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MACEjE,QAAQ,IACR0E,MAAO,CACLE,gBAAiB,UACjBC,MAAO,OAEPG,UAAW,WANf,iBASiB9F,EATjB,cAWA6E,EAAAC,EAAAC,cAAA,MACES,MAAO,CACLE,gBAAiB,UACjBC,MAAO,OACPG,UAAW,UAGZrE,YAAW7B,EAAiB,IAE/BiF,EAAAC,EAAAC,cAAA,MACES,MAAO,CACLE,gBAAiB,UACjBC,MAAO,OACPG,UAAW,UAIZrE,YAAW9B,EAAY,IAE1BkF,EAAAC,EAAAC,cAAA,MACES,MAAO,CACLE,gBAAiB,UACjBC,MAAO,OACPG,UAAW,UAIZjG,EAAiBgB,eAAe,UAEnCgE,EAAAC,EAAAC,cAAA,MACES,MAAO,CACLE,gBAAiB,UACjBC,MAAO,OACPG,UAAW,UAIZhG,EAAYe,eAAe,UAE9BgE,EAAAC,EAAAC,cAAA,MACES,MAAO,CACLE,gBAAiB,UACjBC,MAAO,OACPG,UAAW,UAIZ/F,EAAiBc,eAAe,qBAzXPkF,oBCUpCC,oDACJ,SAAAA,EAAY5B,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAwB,IACjB3B,EAAAI,EAAAC,KAAAF,KAAMJ,IACDO,MAAQ,CACXsB,KAAM,IAAIC,KACVC,KAAM,QACNC,WAAY,GAEd/B,EAAKgC,aAAehC,EAAKgC,aAAaC,KAAlBhC,OAAAiC,EAAA,EAAAjC,CAAAD,IACpBA,EAAKmC,YAAcnC,EAAKmC,YAAYF,KAAjBhC,OAAAiC,EAAA,EAAAjC,CAAAD,IARFA,kEAYjBG,KAAKJ,MAAMqC,OAAO,OAAQ,SAC1BjC,KAAKJ,MAAMqC,OAAO,aAAc,OAChCjC,KAAKJ,MAAMqC,OAAO,cAAe,OACjCjC,KAAKJ,MAAMsC,SAASC,mDAEV,IAAAC,EAAApC,KACVA,KAAKqC,SAAS,CACZT,WAAY,IAEdU,WAAW,WACT7I,EAAyB2I,EAAKxC,MAAM2C,2BACpCH,EAAKC,SAAS,CACZT,WAAY,KAEb,0CAGQH,GACXzB,KAAKqC,SAAS,CACZpH,SAAU,IAAIyG,KAAKD,yCAGXA,GACVzB,KAAKqC,SAAS,CACZnH,UAAW,IAAIwG,KAAKD,sCAGf,IAAAe,EAAAxC,KACHyC,EAAY,CACd,CACEC,MAAQ,MACRC,KAAO,UAGX3C,KAAKJ,MAAMuC,aAAavG,QAAQ,SAAAgH,GAC9B,IAAIvB,EAAM,CACRsB,KAAOC,EAAKC,WACZH,MAAQE,EAAKC,YAEfJ,EAAUlG,KAAK8E,KAGjB,IAAIyB,EAAa,GAGbzF,EAAQ,EACRD,EAAa,EAGjB4C,KAAKJ,MAAM2C,0BAA0B3G,QAAQ,SAACmH,GAC5CA,EAAQvG,OAAOZ,QAAQ,SAACY,GACtBsG,EAAWvG,KAAKC,GACUA,EAAOU,WACjBV,EAAOW,MACLX,EAAOwG,OACzB3F,GAAgBb,EAAOa,MACvBD,GAA0BZ,EAAOY,WACPZ,EAAOyG,eAGrC,IAAMC,EAAU,CACd,CACEC,UAAW,iBACX9I,KAAM,QACN+I,YAAa,CACX9G,QAAS,KAEX+G,OAAQ,SAACC,EAAMjC,EAAKkC,EAAKzH,GACvB,OAAOuE,EAAAC,EAAAC,cAAA,gCAAwBuC,EAAWjJ,OAAnC,OAGX,CACEsJ,UAAW,aACX9I,KAAM,cAER,CACE8I,UAAW,cACX9I,KAAM,eAER,CACE8I,UAAW,gBACX9I,KAAM,eAER,CACE8I,UAAW,cACX9I,KAAM,eAER,CACE8I,UAAW,UACX9I,KAAM,UACNgJ,OAAS,IAGX,CACEF,UAAW,aACX9I,KAAM,aACNmJ,cAAe,aACfC,UAAW,SAACH,GACV,OAAOjD,EAAAC,EAAAC,cAAA,OAAKI,UAAU,cAAf,IAA8B1D,YAAWqG,EAAM,GAA/C,MAETD,OAAQ,SAACK,GACP,OAAOrD,EAAAC,EAAAC,cAAA,OAAKI,UAAU,cAAf,IAA8B1D,YAAWyG,EAAWC,OAAO,SAACC,EAAK/H,GAAN,OAAe+H,EAAM/H,GAAM,GAAI,GAA1F,OAIX,CACEsH,UAAW,QACX9I,KAAM,QACNmJ,cAAe,aACfC,UAAW,SAACH,GACV,OAAOjD,EAAAC,EAAAC,cAAA,OAAKI,UAAU,cAAf,IAA8B1D,YAAWqG,EAAM,GAA/C,MAETD,OAAQ,SAACK,GACP,OAAOrD,EAAAC,EAAAC,cAAA,OAAKI,UAAU,cAAf,IAA8B1D,YAAWyG,EAAWC,OAAO,SAACC,EAAK/H,GAAN,OAAe+H,EAAM/H,GAAM,GAAI,GAA1F,OAGX,CACEsH,UAAW,aACX9I,KAAM,aACNmJ,cAAe,aACfH,OAAQ,SAACC,EAAMjC,EAAKkC,EAAKzH,GACvB,OACEuE,EAAAC,EAAAC,cAAA,OAAKI,UAAU,cAAcvD,EAAWf,eAAe,SAAvD,MAGJoH,UAAW,SAACH,GACV,OACEjD,EAAAC,EAAAC,cAAA,OAAKI,UAAU,cAAc2C,EAAKjH,eAAe,YAKvD,CACE8G,UAAW,QACX9I,KAAM,QACNmJ,cAAe,aACfxC,MAAO,SAACsC,EAAMjC,EAAKwC,EAAUC,GAC3B,MAAyB,SAArBzC,EAAI0C,aACC,CACL7C,gBAAiB,WAGd,CACLA,gBAAiB,YAGrBmC,OAAQ,SAACC,EAAMjC,EAAKkC,EAAKzH,GACvB,OACEuE,EAAAC,EAAAC,cAAA,OAAKI,UAAU,cACZtD,EAAMhB,eAAe,SAAU,MAItCoH,UAAW,SAACH,GACV,OACEjD,EAAAC,EAAAC,cAAA,OAAKI,UAAU,cAAc2C,EAAKjH,eAAe,aAMzD,OACEgE,EAAAC,EAAAC,cAAA,QAAMyD,SAAUhE,KAAKJ,MAAMqE,aAAcC,aAAa,OACtD7D,EAAAC,EAAAC,cAAA,OAAKI,UAAU,OACbN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,YACbN,EAAAC,EAAAC,cAAC4D,EAAA,EAAD,CACExB,KAAK,WACLyB,UAAWC,IACXC,MAAM,eACN3C,KAAK,OACL4C,SAAUvE,KAAKG,MAAMlF,SACrBuJ,SAAU,SAAC/C,GAAD,OAAUe,EAAKX,aAAaJ,IACtCgD,YAAY,0BAIhBpE,EAAAC,EAAAC,cAAA,OAAKI,UAAU,YACbN,EAAAC,EAAAC,cAAC4D,EAAA,EAAD,CACExB,KAAK,YACLyB,UAAWC,IACX1C,KAAK,OACL4C,SAAUvE,KAAKG,MAAMjF,UACrBsJ,SAAU,SAAC/C,GAAD,OAAUe,EAAKR,YAAYP,IACrC6C,MAAM,gBACNG,YAAY,2BAGhBpE,EAAAC,EAAAC,cAAA,OAAKI,UAAU,YACXN,EAAAC,EAAAC,cAAC4D,EAAA,EAAD,CACExB,KAAK,aACLyB,UAAWM,IACXC,QAASlC,EACT+B,SAAU,SAACI,GAAD,OAAKpC,EAAKH,SAAS,CAACQ,WAAa+B,KAC3CN,MAAM,aACNG,YAAY,sBAGhBpE,EAAAC,EAAAC,cAAA,OAAKI,UAAU,YACbN,EAAAC,EAAAC,cAAC4D,EAAA,EAAD,CACExB,KAAK,cACLyB,UAAWM,IACXC,QACE,CACE,CACEjC,MAAQ,MACRC,KAAO,SAET,CACED,MAAQ,OACRC,KAAO,QAET,CACED,MAAQ,MACRC,KAAO,QAIb2B,MAAM,cACNG,YAAY,uBAmBlBpE,EAAAC,EAAAC,cAAA,OAAKI,UAAU,YACbN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,cACbN,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,UACEoB,KAAK,SACLe,MAAM,MACNC,KAAK,WACLhC,UAAU,6BAETX,KAAKJ,MAAMgC,UACVvB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAAA,KAAGI,UAAU,2BADf,wBAKA,kBAMNN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACbN,EAAAC,EAAAC,cAACsE,EAAA,EAAD,CACEC,SAAS,iBACTnL,KAAMqG,KAAKJ,MAAMmF,OAASjC,EAAa,GACvCI,QAASA,EACT8B,OAAO,EACPC,UAAU,6CAGhB5E,EAAAC,EAAAC,cAAA,OAAKI,UAAWX,KAAKJ,MAAMmF,OAAS,YAAc,oBAEhD1E,EAAAC,EAAAC,cAAA,OAAKI,UAAU,OACbN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,YACbN,EAAAC,EAAAC,cAAA,UACEoB,KAAK,SACLuD,QAAS,kBAAM1C,EAAK2C,aACpBxE,UAAU,6BAEVX,KAAKG,MAAMyB,UACXvB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAAA,KAAGI,UAAU,2BADf,oBAIA,eAIJN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,YACbN,EAAAC,EAAAC,cAAC6E,EAAD,CAA6BzL,KAAMqG,KAAKJ,MAAM2C,gCAKrDvC,KAAKJ,MAAMgC,WAAa5B,KAAKG,MAAMyB,UAClCvB,EAAAC,EAAAC,cAAC8E,EAAA/E,EAAD,CACAgF,SAAO,EACPC,WAAW,sBACVC,YAAY,0BACX,aArTmCjE,aA2T7CC,EAAiCiE,YAAU,CACzCC,KAAM,iCACNC,oBAAoB,EACpBC,SAAUC,KAHqBJ,CAI9BjE,GAEYsE,sBAAQ,SAAC3F,GACtB,MAAO,CACLgC,aAAchC,EAAM4F,WAAW5D,aAC/B6D,cAAe,CACb/K,SAAUgL,cACV/K,UAAW+K,iBALFH,CAQZtE,qCCpVH1B,OAAAoG,eAAAC,EAAA,cACAzD,OAAA,IAGA,IAAA0D,EAAA,WACA,SAAAC,EAAAC,EAAA1G,GACA,QAAA2G,EAAA,EAAmBA,EAAA3G,EAAA/F,OAAkB0M,IAAA,CACrC,IAAAC,EAAA5G,EAAA2G,GACAC,EAAAC,WAAAD,EAAAC,aAAA,EACAD,EAAAE,cAAA,EACA,UAAAF,MAAAG,UAAA,GACA7G,OAAAoG,eAAAI,EAAAE,EAAAI,IAAAJ,IAIA,gBAAAK,EAAAC,EAAAC,GAGA,OAFAD,GAAAT,EAAAQ,EAAAG,UAAAF,GACAC,GAAAV,EAAAQ,EAAAE,GACAF,GAdA,GAkBAI,EAAaC,EAAQ,GAErBC,EAAAC,EAAAH,GAIAI,EAAAD,EAFiBF,EAAQ,IAIzB,SAAAE,EAAAE,GACA,OAAAA,KAAAC,WAAAD,EAAA,CACAE,QAAAF,GAoCA,IAAAG,EAAA,CACA7G,MAAAyG,EAAAG,QAAAE,OAAAC,WACA9G,SAAAwG,EAAAG,QAAAE,OAAAC,WACA7G,MAAAuG,EAAAG,QAAAE,OAAAC,WACAjH,GAAA2G,EAAAG,QAAAE,OACA/G,UAAA0G,EAAAG,QAAAE,OACA3G,WAAAsG,EAAAG,QAAAE,QAQAE,EAAA,SAAAC,GAGA,SAAAD,EAAAhI,IAjDA,SAAAkI,EAAAjB,GACA,KAAAiB,aAAAjB,GACA,UAAAkB,UAAA,qCAgDAC,CAAAhI,KAAA4H,GAEA,IAAA/H,EA9CA,SAAAoI,EAAA/H,GACA,IAAA+H,EACA,UAAAC,eAAA,6DAGA,OAAAhI,GAAA,kBAAAA,GAAA,oBAAAA,EAAA+H,EAAA/H,EAyCAiI,CAAAnI,MAAA4H,EAAAQ,WAAAtI,OAAAuI,eAAAT,IAAA1H,KAAAF,KAAAJ,IAGA,OADAC,EAAAyI,eAAAzI,EAAAyI,eAAAxG,KAAAjC,GACAA,EAyEA,OAlHA,SAAA0I,EAAAC,GACA,uBAAAA,GAAA,OAAAA,EACA,UAAAT,UAAA,kEAAAS,GAGAD,EAAAvB,UAAAlH,OAAA2I,OAAAD,KAAAxB,UAAA,CACA0B,YAAA,CACAhG,MAAA6F,EACA9B,YAAA,EACAE,UAAA,EACAD,cAAA,KAGA8B,IAAA1I,OAAA6I,eAAA7I,OAAA6I,eAAAJ,EAAAC,GAAAD,EAAAH,UAAAI,GAoBAI,CAAAhB,EAkFCX,EAAA1F,WAvED6E,EAAAwB,EAAA,EACAhB,IAAA,iBACAlE,MAAA,WACA,IAAAmG,SAKA,YAGA,OAAAA,SAAAC,eAAA9I,KAAAJ,MAAAgB,OAAAmI,UAAA,UAAAF,SAAAC,eAAA9I,KAAAJ,MAAAgB,OAAAoI,SAKA,YAGA,IAAApI,EAAAiI,SAAAC,eAAA9I,KAAAJ,MAAAgB,OAAAqI,UACAnI,EAAAoI,OAAAlJ,KAAAJ,MAAAkB,OACAD,EAAAqI,OAAAlJ,KAAAJ,MAAAiB,UAAA,OAGAsI,EAAA,CACAC,UAAAtI,GAAA,YACAF,SAGA,GAAAyI,OAAAC,UAAAC,iBAAA,CACA,IACAC,EAAA,IAAAC,KADA,ubAA4T7I,EAAA,mBAK5T,OAHAiI,SAAAC,eAAA,6BAAAY,OAAAb,CAAA,WACAQ,OAAAC,UAAAC,iBAAAC,EAAA3I,MAEA,EAGA,IAAAkC,EAAAsG,OAAAR,SAAAtI,cAAA,KAMA,OALAwC,EAAA4G,KAjBA,wCAiBA/B,EAAAgC,OAAAhC,EAAAiC,OAhBA,2cAgBAV,IACApG,EAAA+G,SAAAjJ,EACAgI,SAAA3K,KAAA6L,YAAAhH,GACAA,EAAA2G,QACAb,SAAA3K,KAAA8L,YAAAjH,IACA,IAEG,CACH6D,IAAA,SACAlE,MAAA,WACA,OAAAyE,EAAAK,QAAAjH,cAAA,UACAG,GAAAV,KAAAJ,MAAAc,GACAC,UAAAX,KAAAJ,MAAAe,UACAgB,KAAA,SACAuD,QAAAlF,KAAAsI,gBACOtI,KAAAJ,MAAAmB,eAEJ,EACH6F,IAAA,SACAlE,MAAA,SAAAuH,GACA,OAAAZ,OAAAa,KAAAC,SAAAC,mBAAAH,OAEG,CACHrD,IAAA,SACAlE,MAAA,SAAAuH,EAAAI,GACA,OAAAJ,EAAAK,QAAA,WAA+B,SAAAC,EAAAC,GAC/B,OAAAH,EAAAG,SAKA5C,EAlFA,GAqFAA,EAAAH,YACAG,EAAA6C,aA5FA,CACA/J,GAAA,yBACAC,UAAA,kBACAI,WAAA,YA0FAoF,EAAAqB,QAAAI,oCC5JiB/B,IAfe,SAACnD,EAAOgI,GACpC,IAAMC,EAAS,GAWf,OATKjI,EAAMkI,eACTD,EAAOC,aAAe,8BAEnBlI,EAAMf,OACTgJ,EAAOhJ,KAAO,2BAEXe,EAAMmI,eACTF,EAAOE,aAAe,mCAEjBF","file":"static/js/21.826fc9f4.chunk.js","sourcesContent":["import jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\nimport { formatGram, getToday, getUserdata, localStoragedecryp } from \"../../../../../components/helpers/function\";\r\n// Date Fns is used to format the dates we receive\r\n\r\n// define a generatePDF function that accepts a tickets argument\r\nconst ExportTransaksiPembelian = (\r\n  data = \"\",\r\n  username = \"\",\r\n  tanggal_dari = \"\",\r\n  tanggal_sampai = \"\"\r\n) => {\r\n  // initialize jsPDF\r\n  const doc = new jsPDF(\"l\", \"mm\", [297, 210]);\r\n  //   let data = JSON.parse(localStorage.getItem(\"tt_pengeluaran_barang\")) || [];\r\n  let tableRows = [];\r\n  let footRows = [];\r\n  let tableColumn = []\r\n  let finalY = 30;\r\n \r\n\r\n\r\n  doc.setFontSize(15);\r\n  doc.text(\"LAPORAN TRANSAKSI PEMBELIAN\", 14, 15);\r\n  doc.setFontSize(20);\r\n  doc.text(getUserdata().nama_toko, 200, 15);\r\n  doc.setFontSize(8);\r\n  let jml_alamat = getUserdata().alamat_toko.length;\r\n  if(jml_alamat <= 20){\r\n    doc.text(getUserdata().alamat_toko, 200, 20);\r\n  }\r\n  if (jml_alamat > 20) {\r\n    doc.text(getUserdata().alamat_toko.slice(0,48), 200, 20);\r\n  }\r\n  if (jml_alamat > 50) {\r\n    doc.text(getUserdata().alamat_toko.slice(48,90), 200, 25);\r\n  }\r\n  doc.setFontSize(10);\r\n  doc.setProperties({\r\n    title: \"LAPORAN TRANSAKSI PEMBELIAN\",\r\n  });\r\n  //row 1\r\n  doc.text(\r\n    `PERIODE : ${\r\n      localStoragedecryp(\"tgl_laporan\").length === 0\r\n        ? null\r\n        : JSON.parse(localStoragedecryp(\"tgl_laporan\")).tgl_awal +\r\n          \" s/d \" +\r\n          JSON.parse(localStoragedecryp(\"tgl_laporan\")).tgl_akhir\r\n    }`,\r\n    14,\r\n    25\r\n  );\r\n  let total_berat = 0;\r\n  let total_berat_nota = 0;\r\n  let total_harga_nota = 0;\r\n  let total_harga = 0;\r\n  let total_harga_rata = 0;\r\n  let total_barang = 0;\r\n  tableColumn = [\r\n    // [\r\n    //   {\r\n    //     content: `No Faktur Group : ${item._id.no_faktur_group} \\n${header_detail.jenis}  (${parseInt(header_detail.jumlah_rp).toLocaleString(\"kr-KO\")})`,\r\n    //     colSpan: 13,\r\n    //   },\r\n    // ],\r\n    [\r\n      {\r\n        content: `NO BELI`,\r\n      },\r\n      {\r\n        content: `KODE SALES`,\r\n      },\r\n      {\r\n        content: `KODE MEMNBER`,\r\n      },\r\n      {\r\n        content: `NAMA MEMBER`,\r\n      },\r\n      {\r\n        content: `NAMA BARANG`,\r\n      },\r\n      // {\r\n      //   content: `NO HP`,\r\n      // },\r\n      // {\r\n      //   content: `ALAMAT CUSTOMER`,\r\n      // },\r\n      // {\r\n      //   content: `KODE GUDANG`,\r\n      // },\r\n      {\r\n        content: `KONDISI`,\r\n      },\r\n      {\r\n        content: `KODE DEPT`,\r\n      },\r\n      {\r\n        content: `BERAT NOTA`,\r\n        styles: {\r\n          halign: 'right',\r\n        },\r\n      },\r\n      {\r\n        content: `BERAT`,\r\n        styles: {\r\n          halign: 'right',\r\n        },\r\n      },\r\n      {\r\n        content: `HARGA NOTA`,\r\n        styles: {\r\n          halign: 'right',\r\n        },\r\n      },\r\n      {\r\n        content: `HARGA BELI`,\r\n        styles: {\r\n          halign: 'right',\r\n        },\r\n      },\r\n      {\r\n        content: `HARGA RATA`,\r\n        styles: {\r\n          halign: 'right',\r\n        },\r\n      },\r\n    \r\n    ],\r\n    ];\r\n  data.forEach((item, index) => {\r\n    let tot_berat = 0;\r\n    let tot_berat_nota = 0;\r\n    let tot_harga_nota = 0;\r\n    let tot_harga = 0;\r\n    let tot_harga_rata = 0;\r\n  \r\n  \r\n    item._id.pembayaran.forEach((header_detail, index) => {\r\n    // console.log(item._id.pembayaran[0].jenis);\r\n      let pembayaran = [\r\n        {\r\n          content: `${header_detail.jenis}  (${parseInt(header_detail.jumlah_rp).toLocaleString(\"kr-KO\")})`,\r\n          colSpan: 13,\r\n        },\r\n      ]\r\n      tableRows.push(pembayaran)\r\n    });\r\n      \r\n    item.detail.forEach((item, index) => {\r\n      let rows = [\r\n        item.no_faktur_beli,\r\n        item.kode_sales,\r\n        item.kode_member,\r\n        item.nama_customer,\r\n        item.nama_barang,\r\n        // item.no_hp,\r\n        // item.alamat_customer,\r\n        // item.kode_gudang,\r\n        item.kondisi,\r\n        item.kode_dept,\r\n        {\r\n          content: formatGram(item.berat_nota, 3),\r\n          styles: {\r\n            halign: 'right',\r\n          },\r\n        },\r\n        {\r\n          content: formatGram(item.berat, 3),\r\n          styles: {\r\n            halign: 'right',\r\n    \r\n          },\r\n        },\r\n        {\r\n          content: parseInt(item.harga_nota).toLocaleString(\"kr-KO\"),\r\n          styles: {\r\n            halign: 'right',\r\n    \r\n          },\r\n        },\r\n        {\r\n          content: parseInt(item.harga).toLocaleString(\"kr-KO\"),\r\n          styles: {\r\n            halign: 'right',\r\n    \r\n          },\r\n        },\r\n        {\r\n          content:parseInt(item.harga_rata).toLocaleString(\"kr-KO\"),\r\n          styles: {\r\n            halign: 'right',\r\n    \r\n          },\r\n        },\r\n      ];\r\n      tot_berat = tot_berat + parseFloat(item.berat);\r\n      tot_berat_nota = tot_berat_nota + parseFloat(item.berat_nota);\r\n      tot_harga_nota = tot_harga_nota + parseFloat(item.harga_nota);\r\n      tot_harga = tot_harga + parseFloat(item.harga);\r\n      tot_harga_rata = tot_harga_rata + parseFloat(item.harga_rata);\r\n      \r\n      total_berat = total_berat + parseFloat(item.berat);\r\n      total_berat_nota = total_berat_nota + parseFloat(item.berat_nota);\r\n      total_harga_nota = total_harga_nota + parseFloat(item.harga_nota);\r\n      total_harga = total_harga + parseFloat(item.harga);\r\n      total_harga_rata = total_harga_rata + parseFloat(item.harga_rata);\r\n     \r\n      tableRows.push(rows);\r\n    });\r\n    total_barang = total_barang + item.detail.length;\r\n    // let total = [\r\n    //   {\r\n    //     content: `Subtotal : ${item.detail.length} Transaksi`,\r\n    //     colSpan: 7,\r\n    //     styles: {\r\n    //       halign: 'center',\r\n    //       fillColor: \"#E8E5E5\",\r\n    //       textColor: \"#000\",\r\n    //     },\r\n    //   },\r\n    //   {\r\n    //     content:`${tot_berat_nota.toFixed(3)}`,\r\n    //     styles: {\r\n    //       halign: 'right',\r\n    //       fillColor: \"#E8E5E5\",\r\n    //       textColor: \"#000\",\r\n    //     },\r\n    //   },\r\n    //   {\r\n    //     content:`${tot_berat.toFixed(3)}`,\r\n    //     styles: {\r\n    //       halign: 'right',\r\n    //       fillColor: \"#E8E5E5\",\r\n    //       textColor: \"#000\",\r\n    //     },\r\n    //   },\r\n    //   {\r\n    //     content:`${parseInt(tot_harga_nota).toLocaleString(\"kr-KO\")}`,\r\n    //     styles: {\r\n    //       halign: 'right',\r\n    //       fillColor: \"#E8E5E5\",\r\n    //       textColor: \"#000\",\r\n    //     },\r\n    //   },\r\n    //   {\r\n    //     content:`${parseInt(tot_harga).toLocaleString(\"kr-KO\")}`,\r\n    //     styles: {\r\n    //       halign: 'right',\r\n    //       fillColor: \"#E8E5E5\",\r\n    //       textColor: \"#000\",\r\n    //     },\r\n    //   },\r\n    //   {\r\n    //     content:`${parseInt(tot_harga_rata).toLocaleString(\"kr-KO\")}`,\r\n    //     styles: {\r\n    //       halign: 'right',\r\n    //       fillColor: \"#E8E5E5\",\r\n    //       textColor: \"#000\",\r\n    //     },\r\n    //   },\r\n     \r\n    // ];\r\n    // tableRows.push(total);\r\n\r\n  });\r\n  let grand = [\r\n    {\r\n      content: `Grand Total : ${total_barang} Transaksi`,\r\n      colSpan: 7,\r\n      styles: {\r\n        halign: 'center',\r\n        fillColor: \"#E8E5E5\",\r\n        textColor: \"#000\",\r\n      },\r\n    },\r\n    {\r\n      content:`${total_berat_nota.toFixed(3)}`,\r\n      styles: {\r\n        fillColor: \"#E8E5E5\",\r\n        textColor: \"#000\",\r\n        halign: 'right',\r\n\r\n      },\r\n    },\r\n    {\r\n      content:`${total_berat.toFixed(3)}`,\r\n      styles: {\r\n        fillColor: \"#E8E5E5\",\r\n        textColor: \"#000\",\r\n        halign: 'right',\r\n\r\n      },\r\n    },\r\n    {\r\n      content:`${parseInt(total_harga_nota).toLocaleString(\"kr-KO\")}`,\r\n      styles: {\r\n        fillColor: \"#E8E5E5\",\r\n        textColor: \"#000\",\r\n        halign: 'right',\r\n\r\n      },\r\n    },\r\n    {\r\n      content:`${parseInt(total_harga).toLocaleString(\"kr-KO\")}`,\r\n      styles: {\r\n        fillColor: \"#E8E5E5\",\r\n        textColor: \"#000\",\r\n        halign: 'right',\r\n\r\n      },\r\n    },\r\n    {\r\n      content:`${parseInt(total_harga_rata).toLocaleString(\"kr-KO\")}`,\r\n      styles: {\r\n        fillColor: \"#E8E5E5\",\r\n        textColor: \"#000\",\r\n        halign: 'right',\r\n\r\n      },\r\n    },\r\n   \r\n  ];\r\n  tableRows.push(grand);\r\n  let printed = [\r\n    {\r\n      colSpan:9,\r\n      content: `Printed By ${JSON.parse(localStoragedecryp(\"userdata\")).user_id} / ${getToday()}`,\r\n      styles: {\r\n        // lineWidth: 0.1,\r\n        fontStyle: \"italic\",\r\n        textColor: \"#000\",\r\n        // fillColor: \"#E8E5E5\"\r\n      },\r\n    },\r\n  ]\r\n  tableRows.push(printed);\r\n  doc.autoTable({\r\n    head: tableColumn,\r\n    body: tableRows,\r\n    foot: footRows,\r\n    startY:  finalY,\r\n    theme: \"plain\",\r\n    rowPageBreak: \"avoid\",\r\n    // pageBreak: \"avoid\",\r\n    margin: { top: 10 },\r\n    bodyStyles: {\r\n      // lineWidth: 0.02,\r\n      // lineColor: \"#000\",\r\n      fontSize: 8,\r\n    },\r\n    headStyles: {\r\n      fontSize: 8,\r\n      // lineWidth: 0.02,\r\n      // lineColor: \"#000\",\r\n      fillColor: \"#E8E5E5\",\r\n      textColor: \"#000\",\r\n    },\r\n \r\n  });\r\n  finalY = doc.autoTableEndPosY() + 3;\r\n  tableRows = [];\r\n  footRows = [];\r\n\r\n  // const date = Date().split(\" \");\r\n  // we use a date string to generate our filename.\r\n  // const dateStr = date[2] + date[3] + date[4];\r\n  // ticket title. and margin-top + margin-left\r\n  // doc.text(`User                           : ${JSON.parse(localStoragedecryp(\"userdata\")).user_id}`, 14, finalY + 10);\r\n  // doc.text(`Cetak                        : ${getToday()}`, 14, finalY + 16);\r\n  const pages = doc.internal.getNumberOfPages();\r\n  const pageWidth = doc.internal.pageSize.width; //Optional\r\n  const pageHeight = doc.internal.pageSize.height; //Optional\r\n  doc.setFontSize(10); //Optional\r\n  for (let j = 1; j < pages + 1; j++) {\r\n    let horizontalPos = pageWidth / 2; //Can be fixed number\r\n    let verticalPos = pageHeight - 10; //Can be fixed number\r\n    doc.setPage(j);\r\n    doc.text(`${j} of ${pages}`, horizontalPos, verticalPos, {\r\n      align: \"center\",\r\n    });\r\n  }\r\n  // doc.autoPrint();\r\n  doc.save(`LAPORAN TRANSAKSI PEMBELIAN.pdf`);\r\n  // var string = doc.output(\"datauristring\");\r\n  // // var embed = \"<embed width='100%' height='100%' src='\" + string + \"'/>\";\r\n  // var x = window.open();\r\n  // x.document.open();\r\n  // x.document.write(\r\n  //   \"<html><head><title>LAPORAN TRANSAKSI PEMBELIAN</title></head><body style='margin:0 !important'><embed width='100%' height='100%'  src=\" +\r\n  //     string +\r\n  //     \"></embed></body></html>\"\r\n  // );\r\n  // x.document.write(embed);\r\n  // setInterval(() => {\r\n  //   x.close();\r\n  // }, 1000);\r\n};\r\n\r\nexport default ExportTransaksiPembelian;\r\n","import React, { Component } from \"react\";\r\nimport ReactHTMLTableToExcel from \"react-html-table-to-excel\";\r\nimport { formatGram, getUserdata, localStoragedecryp } from \"../../../../../components/helpers/function\";\r\nclass ExportTransaksiPembelianPdf extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  render() {\r\n    let total_berat = 0;\r\n    let total_berat_nota = 0;\r\n    let total_harga_nota = 0;\r\n    let total_harga = 0;\r\n    let total_harga_rata = 0;\r\n    let total_barang = 0;\r\n\r\n    this.props.data.forEach((barang, index) => {\r\n      barang.detail.forEach((item, index) => {\r\n        total_berat = total_berat + parseFloat(item.berat);\r\n        total_berat_nota = total_berat_nota + parseFloat(item.berat_nota);\r\n        total_harga_nota = total_harga_nota + parseFloat(item.harga_nota);\r\n        total_harga = total_harga + parseFloat(item.harga);\r\n        total_harga_rata = total_harga_rata + parseFloat(item.harga_rata);\r\n      });\r\n      total_barang = total_barang + barang.detail.length;\r\n    });\r\n    return (\r\n      <>\r\n        <ReactHTMLTableToExcel\r\n          id=\"test-table-xls-button\"\r\n          className=\"btn btn-success btn-block\"\r\n          table=\"table-to-xls\"\r\n          filename=\"Laporan Transaksi Pembelian\"\r\n          sheet=\"Laporan Transaksi Pembelian\"\r\n          buttonText=\"Export Exel\"\r\n        />\r\n        <table id=\"table-to-xls\" style={{ display: \"none\" }}>\r\n          <thead>\r\n            <tr>\r\n              <th colSpan=\"12\"> Laporan Transaksi Pembelian </th>\r\n            </tr>\r\n            <tr>\r\n              <th colSpan=\"12\"> Periode </th>\r\n            </tr>\r\n            <tr>\r\n              <th colSpan=\"12\">\r\n                {\" \"}\r\n                {localStoragedecryp(\"tgl_laporan\").length === 0\r\n                  ? null\r\n                  : JSON.parse(localStoragedecryp(\"tgl_laporan\")).tgl_awal +\r\n                    \" s/d \" +\r\n                    JSON.parse(localStoragedecryp(\"tgl_laporan\"))\r\n                      .tgl_akhir}{\" \"}\r\n              </th>\r\n            </tr>\r\n            <tr>\r\n              <th colSpan=\"12\"> TOKO :  {getUserdata().nama_toko} </th>\r\n            </tr>\r\n           \r\n            <tr>\r\n              <th colSpan=\"12\"> ALAMAT :  {getUserdata().alamat_toko} </th>\r\n            </tr>\r\n            <tr>\r\n              <th colSpan=\"12\"></th>\r\n            </tr>\r\n            <tr>\r\n              <td\r\n                style={{\r\n                  backgroundColor: \"#E8E5E5\",\r\n                  color: \"#000\",\r\n                }}\r\n              >\r\n                NO BELI\r\n              </td>\r\n              <td\r\n                style={{\r\n                  backgroundColor: \"#E8E5E5\",\r\n                  color: \"#000\",\r\n                }}\r\n              >\r\n                KODE SALES\r\n              </td>\r\n              <td\r\n                style={{\r\n                  backgroundColor: \"#E8E5E5\",\r\n                  color: \"#000\",\r\n                }}\r\n              >\r\n                KODE MEMBER\r\n              </td>\r\n              <td\r\n                style={{\r\n                  backgroundColor: \"#E8E5E5\",\r\n                  color: \"#000\",\r\n                }}\r\n              >\r\n                NAMA MEMBER\r\n              </td>\r\n              <td\r\n                style={{\r\n                  backgroundColor: \"#E8E5E5\",\r\n                  color: \"#000\",\r\n                }}\r\n              >\r\n                NAMA BARANG\r\n              </td>\r\n              {/* <td\r\n                style={{\r\n                  backgroundColor: \"#E8E5E5\",\r\n                  color: \"#000\",\r\n                }}\r\n              >\r\n                NO HP\r\n              </td>\r\n              <td\r\n                style={{\r\n                  backgroundColor: \"#E8E5E5\",\r\n                  color: \"#000\",\r\n                }}\r\n              >\r\n                ALAMT CUSTOMER\r\n              </td>\r\n              <td\r\n                style={{\r\n                  backgroundColor: \"#E8E5E5\",\r\n                  color: \"#000\",\r\n                }}\r\n              >\r\n                KODE GUDANG\r\n              </td> */}\r\n                <td\r\n                style={{\r\n                  backgroundColor: \"#E8E5E5\",\r\n                  color: \"#000\",\r\n                }}\r\n              >\r\n                KONDISI\r\n              </td>\r\n              <td\r\n                style={{\r\n                  backgroundColor: \"#E8E5E5\",\r\n                  color: \"#000\",\r\n                }}\r\n              >\r\n                KODE DEPT\r\n              </td>\r\n              <td\r\n                style={{\r\n                  backgroundColor: \"#E8E5E5\",\r\n                  color: \"#000\",\r\n                }}\r\n              >\r\n                BERAT NOTA\r\n              </td>\r\n              <td\r\n                style={{\r\n                  backgroundColor: \"#E8E5E5\",\r\n                  color: \"#000\",\r\n                }}\r\n              >\r\n                BERAT\r\n              </td>\r\n              <td\r\n                style={{\r\n                  backgroundColor: \"#E8E5E5\",\r\n                  color: \"#000\",\r\n                }}\r\n              >\r\n                HARGA NOTA\r\n              </td>\r\n              <td\r\n                style={{\r\n                  backgroundColor: \"#E8E5E5\",\r\n                  color: \"#000\",\r\n                }}\r\n              >\r\n                HARGA BELI\r\n              </td>\r\n              <td\r\n                style={{\r\n                  backgroundColor: \"#E8E5E5\",\r\n                  color: \"#000\",\r\n                }}\r\n              >\r\n                HARGA RATA\r\n              </td>\r\n            \r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.props.data.map((item, index) => (\r\n              <>\r\n                {item._id.pembayaran.map((header_detail, index) => (\r\n                  <>\r\n                    {/* <tr>\r\n                      <td\r\n                        style={{\r\n                          textAlign: \"center\",\r\n                         \r\n                        }}\r\n                      >\r\n                        No Faktur Group\r\n                      </td>\r\n                      <td colSpan=\"11\" style={{ border: \"1px solid #000\" }}>\r\n                        {\" \"}\r\n                        {header_detail.no_faktur_group}\r\n                      </td>\r\n                    </tr> */}\r\n                    <tr>\r\n                      <td colSpan=\"12\">\r\n                        {header_detail.jenis}{\" \"}\r\n                        {parseInt(header_detail.jumlah_rp).toLocaleString(\r\n                          \"kr-KO\"\r\n                        )}\r\n                      </td>\r\n                    </tr>\r\n                  </>\r\n                ))}\r\n\r\n                {item.detail.map((row, index) => (\r\n                  <tr>\r\n                    <td>{row.no_faktur_beli}</td>\r\n                    <td>{row.kode_sales}</td>\r\n                    <td>{row.kode_member}</td>\r\n                    <td>{row.nama_customer}</td>\r\n                    <td>{row.nama_barang}</td>\r\n                    {/* <td style={{ whiteSpace: \"nowrap\" }}>{row.no_hp}</td>\r\n                    <td>{row.alamat_customer}</td>\r\n                    <td>{row.kode_gudang}</td> */}\r\n                    <td>{row.kondisi}</td>\r\n                    <td>{row.kode_dept}</td>\r\n                    <td style={{textAlign : \"right\" }}>{formatGram(row.berat_nota,3)}</td>\r\n                    <td style={{textAlign : \"right\" }}>{formatGram(row.berat,3)}</td>\r\n                    <td style={{textAlign : \"right\" }}>{row.harga_nota.toLocaleString(\"kr-KO\")}</td>\r\n                    <td style={{textAlign : \"right\" }}>{row.harga.toLocaleString(\"kr-KO\")}</td>\r\n                    <td style={{textAlign : \"right\" }}>{row.harga_rata.toLocaleString(\"kr-KO\")}</td>\r\n                  </tr>\r\n                ))}\r\n                {/* <tr>\r\n                  <td\r\n                    colSpan=\"7\"\r\n                    style={{\r\n                      backgroundColor: \"#E8E5E5\",\r\n                      color: \"#000\",\r\n\r\n                      textAlign: \"center\",\r\n                    }}\r\n                  >\r\n                    Subtotal : {item.detail.length} Transaksi\r\n                  </td>\r\n                  <td\r\n                    style={{\r\n                      backgroundColor: \"#E8E5E5\",\r\n                      color: \"#000\",\r\n                  textAlign: \"right\",\r\n\r\n                    }}\r\n                  >\r\n                    {\" \"}\r\n                    {formatGram(item.detail\r\n                      .map((list) => list.berat_nota)\r\n                      .reduce((a, b) => a + b, 0),3)}{\" \"}\r\n                  </td>\r\n                  <td\r\n                    style={{\r\n                      backgroundColor: \"#E8E5E5\",\r\n                      color: \"#000\",\r\n                  textAlign: \"right\",\r\n\r\n                    }}\r\n                  >\r\n                    {\" \"}\r\n                    {formatGram(item.detail\r\n                      .map((list) => list.berat)\r\n                      .reduce((a, b) => a + b, 0),3)}{\" \"}\r\n                  </td>\r\n                  <td\r\n                    style={{\r\n                      backgroundColor: \"#E8E5E5\",\r\n                      color: \"#000\",\r\n                  textAlign: \"right\",\r\n\r\n                    }}\r\n                  >\r\n                    {\" \"}\r\n                    {item.detail\r\n                      .map((list) => list.harga_nota)\r\n                      .reduce((a, b) => a + b, 0).toLocaleString(\"kr-KO\")}{\" \"}\r\n                  </td>\r\n                  <td\r\n                    style={{\r\n                      backgroundColor: \"#E8E5E5\",\r\n                      color: \"#000\",\r\n                  textAlign: \"right\",\r\n\r\n                    }}\r\n                  >\r\n                    {\" \"}\r\n                    {item.detail\r\n                      .map((list) => list.harga)\r\n                      .reduce((a, b) => a + b, 0).toLocaleString(\"kr-KO\")}{\" \"}\r\n                  </td>\r\n                  <td\r\n                    style={{\r\n                      backgroundColor: \"#E8E5E5\",\r\n                      color: \"#000\",\r\n                  textAlign: \"right\",\r\n\r\n                    }}\r\n                  >\r\n                    {\" \"}\r\n                    {item.detail\r\n                      .map((list) => list.harga_rata)\r\n                      .reduce((a, b) => a + b, 0).toLocaleString(\"kr-KO\")}{\" \"}\r\n                  </td>\r\n                 \r\n                </tr> */}\r\n              </>\r\n            ))}\r\n          </tbody>\r\n          <tfoot>\r\n            <tr>\r\n              <td\r\n                colSpan=\"7\"\r\n                style={{\r\n                  backgroundColor: \"#E8E5E5\",\r\n                  color: \"#000\",\r\n\r\n                  textAlign: \"center\",\r\n                }}\r\n              >\r\n                Grand Total : {total_barang} Transaksi\r\n              </td>\r\n              <td\r\n                style={{\r\n                  backgroundColor: \"#E8E5E5\",\r\n                  color: \"#000\",\r\n                  textAlign: \"right\",\r\n                }}\r\n              >\r\n                {formatGram(total_berat_nota,3)}\r\n              </td>\r\n              <td\r\n                style={{\r\n                  backgroundColor: \"#E8E5E5\",\r\n                  color: \"#000\",\r\n                  textAlign: \"right\",\r\n\r\n                }}\r\n              >\r\n                {formatGram(total_berat,3)}\r\n              </td>\r\n              <td\r\n                style={{\r\n                  backgroundColor: \"#E8E5E5\",\r\n                  color: \"#000\",\r\n                  textAlign: \"right\",\r\n\r\n                }}\r\n              >\r\n                {total_harga_nota.toLocaleString(\"kr-KO\")}\r\n              </td>\r\n              <td\r\n                style={{\r\n                  backgroundColor: \"#E8E5E5\",\r\n                  color: \"#000\",\r\n                  textAlign: \"right\",\r\n\r\n                }}\r\n              >\r\n                {total_harga.toLocaleString(\"kr-KO\")}\r\n              </td>\r\n              <td\r\n                style={{\r\n                  backgroundColor: \"#E8E5E5\",\r\n                  color: \"#000\",\r\n                  textAlign: \"right\",\r\n\r\n                }}\r\n              >\r\n                {total_harga_rata.toLocaleString(\"kr-KO\")}\r\n              </td>\r\n              \r\n            </tr>\r\n          </tfoot>\r\n        </table>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default ExportTransaksiPembelianPdf;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport {\r\n  InputDate, ReanderSelect, \r\n} from \"../../../../components/helpers/field\";\r\nimport { formatGram, getTglSystem } from \"../../../../components/helpers/function\";\r\nimport Tabel from \"../../../../components/helpers/tabel\";\r\nimport ValidasiLaporanKeuangan from \"../../../../Validasi/LaporanKeuangan/ValidasiLaporanKeuangan\";\r\nimport ExportTransaksiPembelian from \"./pdf/ExportTransaksiPembelian\"\r\nimport Loading from 'react-fullscreen-loading';\r\nimport ExportTransaksiPembelianPdf from \"./exel/ExportTransaksiPembelianPdf\";\r\nimport { GetDataGroup } from \"../../../../actions/datamaster_action\";\r\nclass HeadFormLaporanPembelianBarang extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      date: new Date(),\r\n      type: \"SEMUA\",\r\n      isLoading : false\r\n    };\r\n    this.setStartDate = this.setStartDate.bind(this);\r\n    this.setLastDate = this.setLastDate.bind(this);\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.props.change(\"type\", \"SEMUA\")\r\n    this.props.change(\"kode_group\", \"ALL\");\r\n    this.props.change(\"jenis_group\", \"ALL\");\r\n    this.props.dispatch(GetDataGroup());\r\n  }\r\n  exportPdf() {\r\n    this.setState({\r\n      isLoading : true\r\n    })\r\n    setTimeout(() => {\r\n      ExportTransaksiPembelian(this.props.LaporanTransaksiPembelian);\r\n      this.setState({\r\n        isLoading : false\r\n      })\r\n    }, 1000);\r\n    \r\n  }\r\n  setStartDate(date) {\r\n    this.setState({\r\n      tgl_awal: new Date(date),\r\n    });\r\n  }\r\n  setLastDate(date) {\r\n    this.setState({\r\n      tgl_akhir: new Date(date),\r\n    });\r\n  }\r\n  render() {\r\n    let datagroup = [\r\n      {\r\n        value : \"ALL\",\r\n        name : \"SEMUA\"\r\n      }\r\n    ]\r\n    this.props.GetDataGroup.forEach(list => {\r\n      let row = {\r\n        name : list.kode_group,\r\n        value : list.kode_group,\r\n      }\r\n      datagroup.push(row) \r\n    });\r\n\r\n    let databarang = [];\r\n    let berat = 0;\r\n    let ongkos = 0;\r\n    let harga = 0;\r\n    let harga_nota = 0;\r\n    let harga_gram = 0;\r\n    let berat_nota = 0;\r\n    this.props.LaporanTransaksiPembelian.forEach((element) => {\r\n      element.detail.forEach((detail) => {\r\n        databarang.push(detail);\r\n        berat_nota = berat_nota + detail.berat_nota;\r\n        berat = berat + detail.berat;\r\n        ongkos = ongkos + detail.ongkos;\r\n        harga = harga + detail.harga;\r\n        harga_nota = harga_nota + detail.harga_nota;\r\n        harga_gram = harga_gram + detail.harga_gram;\r\n      });\r\n    });\r\n    const columns = [\r\n      {\r\n        dataField: \"no_faktur_beli\",\r\n        text: \"No FB\",\r\n        footerAttrs: {\r\n          colSpan: \"5\",\r\n        },\r\n        footer: (cell, row, num, index) => {\r\n          return <div>Total Transaksi : {databarang.length} </div>;\r\n        },\r\n      },\r\n      {\r\n        dataField: \"kode_sales\",\r\n        text: \"Kode Sales\",\r\n      },\r\n      {\r\n        dataField: \"kode_member\",\r\n        text: \"Kode Member\",\r\n      },\r\n      {\r\n        dataField: \"nama_customer\",\r\n        text: \"Nama Member\",\r\n      },\r\n      {\r\n        dataField: \"nama_barang\",\r\n        text: \"Nama Barang\",\r\n      },\r\n      {\r\n        dataField: \"kondisi\",\r\n        text: \"Kondisi\",\r\n        footer : ''\r\n      },\r\n     \r\n      {\r\n        dataField: \"berat_nota\",\r\n        text: \"Berat Nota\",\r\n        headerClasses: \"text-right\",\r\n        formatter: (cell) => {\r\n          return <div className=\"text-right\"> {formatGram(cell, 3)} </div>;\r\n        },\r\n        footer: (columnData) => {\r\n          return <div className=\"text-right\"> {formatGram(columnData.reduce((acc, item) => acc + item, 0), 3)} </div>\r\n        }\r\n\r\n      },\r\n      {\r\n        dataField: \"berat\",\r\n        text: \"Berat\",\r\n        headerClasses: \"text-right\",\r\n        formatter: (cell) => {\r\n          return <div className=\"text-right\"> {formatGram(cell, 3)} </div>;\r\n        },\r\n        footer: (columnData) => {\r\n          return <div className=\"text-right\"> {formatGram(columnData.reduce((acc, item) => acc + item, 0), 3)} </div>\r\n        }\r\n      },\r\n      {\r\n        dataField: \"harga_nota\",\r\n        text: \"Harga Nota\",\r\n        headerClasses: \"text-right\",\r\n        footer: (cell, row, num, index) => {\r\n          return (\r\n            <div className=\"text-right\">{harga_nota.toLocaleString(\"kr-KO\")} </div>\r\n          );\r\n        },\r\n        formatter: (cell) => {\r\n          return (\r\n            <div className=\"text-right\">{cell.toLocaleString(\"kr-KO\")}</div>\r\n          );\r\n        },\r\n      },\r\n    \r\n      {\r\n        dataField: \"harga\",\r\n        text: \"Harga\",\r\n        headerClasses: \"text-right\",\r\n        style: (cell, row, rowIndex, colIndex) => {\r\n          if (row.status_valid === \"CANC\") {\r\n            return {\r\n              backgroundColor: '#F6A6AD'\r\n            };\r\n          }\r\n          return {\r\n            backgroundColor: '#c8e6c9'\r\n          };\r\n        },\r\n        footer: (cell, row, num, index) => {\r\n          return (\r\n            <div className=\"text-right\">\r\n              {harga.toLocaleString(\"kr-KO\")}{\" \"}\r\n            </div>\r\n          );\r\n        },\r\n        formatter: (cell) => {\r\n          return (\r\n            <div className=\"text-right\">{cell.toLocaleString(\"kr-KO\")}</div>\r\n          );\r\n        },\r\n      },\r\n      \r\n    ];\r\n    return (\r\n      <form onSubmit={this.props.handleSubmit} autoComplete=\"off\">\r\n      <div className=\"row\">\r\n        <div className=\"col-lg-3\">\r\n          <Field\r\n            name=\"tgl_awal\"\r\n            component={InputDate}\r\n            label=\"Tanggal Dari\"\r\n            type=\"text\"\r\n            selected={this.state.tgl_awal}\r\n            onChange={(date) => this.setStartDate(date)}\r\n            placeholder=\"Masukan Tanggal Dari\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"col-lg-3\">\r\n          <Field\r\n            name=\"tgl_akhir\"\r\n            component={InputDate}\r\n            type=\"text\"\r\n            selected={this.state.tgl_akhir}\r\n            onChange={(date) => this.setLastDate(date)}\r\n            label=\"Tanggal Akhir\"\r\n            placeholder=\"Masukan Tanggal Akhir\"\r\n          />\r\n        </div>\r\n        <div className=\"col-lg-2\">\r\n            <Field\r\n              name=\"kode_group\"\r\n              component={ReanderSelect}\r\n              options={datagroup}\r\n              onChange={(e)=>this.setState({kode_group : e})}\r\n              label=\"Kode Group\"\r\n              placeholder=\"Pilih Kode Group\"\r\n            />\r\n          </div>\r\n          <div className=\"col-lg-2\">\r\n            <Field\r\n              name=\"jenis_group\"\r\n              component={ReanderSelect}\r\n              options={\r\n                [\r\n                  {\r\n                    value : \"ALL\",\r\n                    name : \"SEMUA\",\r\n                  },\r\n                  {\r\n                    value : \"MUDA\",\r\n                    name : \"MUDA\",\r\n                  },\r\n                  {\r\n                    value : \"TUA\",\r\n                    name : \"TUA\",\r\n                  }\r\n                ]\r\n              }\r\n              label=\"Jenis Group\"\r\n              placeholder=\"Pilih Jenis Group\"\r\n            />\r\n          </div>\r\n        {/* <div className=\"col-lg-3\">\r\n            <Field\r\n              name=\"type\"\r\n              component={ReanderSelect}\r\n              onChange={(e) => this.setState({\r\n                type : e\r\n              })}\r\n              // onChange={(e)=>this.props.onChange(e)}  \r\n              options={[\r\n                { value: \"SEMUA\", name: \"SEMUA\" },\r\n                { value: \"SELISIH\", name: \"SELISIH\" },\r\n              ]}\r\n              label=\"Type Laporan\"\r\n              placeholder=\"Pilih Type\"\r\n            />\r\n          </div> */}\r\n        <div className=\"col-lg-2\">\r\n          <div className=\"text-right\">\r\n            <label>&nbsp;</label>\r\n            <button\r\n              type=\"submit\"\r\n              value=\"PDF\"\r\n              name=\"type_btn\"\r\n              className=\"btn btn-primary btn-block\"\r\n            >\r\n              {this.props.isLoading ? (\r\n                <>\r\n                  <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Sedang\r\n                  Mencari\r\n                </>\r\n              ) : (\r\n                \"Cari Laporan\"\r\n              )}\r\n            </button>\r\n          </div>\r\n          </div>\r\n          \r\n          <div className=\"col-lg-12\">\r\n            <Tabel\r\n              keyField=\"no_faktur_beli\"\r\n              data={this.props.export ? databarang : []}\r\n              columns={columns}\r\n              empty={true}\r\n              textEmpty=\"Data Laporan Transaksi Pembelian Kosong\"\r\n            />\r\n          </div>\r\n        <div className={this.props.export ? \"col-lg-12\" : \"col-lg-12 d-none\"}>\r\n          {/* <label htmlFor=\"\">&nbsp;</label> */}\r\n          <div className=\"row\">\r\n            <div className=\"col-lg-6\">\r\n              <button\r\n                type=\"button\"\r\n                onClick={() => this.exportPdf()}\r\n                className=\"btn btn-warning btn-block\"\r\n              >\r\n               {this.state.isLoading ? (\r\n                <>\r\n                  <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Export Pdf\r\n                </>\r\n              ) : (\r\n                \"Export Pdf\"\r\n              )}\r\n              </button>\r\n            </div>\r\n            <div className=\"col-lg-6\">\r\n              <ExportTransaksiPembelianPdf data={this.props.LaporanTransaksiPembelian} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {this.props.isLoading || this.state.isLoading ? (\r\n        <Loading \r\n        loading\r\n        background=\"rgba(0, 0, 0, 0.35)\"\r\n         loaderColor=\"rgba(94, 147, 117, 1)\" />\r\n      ) : null}\r\n    </form>\r\n    );\r\n  }\r\n}\r\n\r\nHeadFormLaporanPembelianBarang = reduxForm({\r\n  form: \"HeadFormLaporanPembelianBarang\",\r\n  enableReinitialize: true,\r\n  validate: ValidasiLaporanKeuangan,\r\n})(HeadFormLaporanPembelianBarang);\r\n// export default connect(null)(HeadFormLaporanPembelianBarang);\r\nexport default connect((state) => {\r\n  return {\r\n    GetDataGroup: state.datamaster.GetDataGroup,\r\n    initialValues: {\r\n      tgl_awal: getTglSystem(),\r\n      tgl_akhir: getTglSystem(),\r\n    },\r\n  };\r\n})(HeadFormLaporanPembelianBarang);\r\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n/* global window, document, Blob */\n\n\nvar propTypes = {\n  table: _propTypes2.default.string.isRequired,\n  filename: _propTypes2.default.string.isRequired,\n  sheet: _propTypes2.default.string.isRequired,\n  id: _propTypes2.default.string,\n  className: _propTypes2.default.string,\n  buttonText: _propTypes2.default.string\n};\nvar defaultProps = {\n  id: 'button-download-as-xls',\n  className: 'button-download',\n  buttonText: 'Download'\n};\n\nvar ReactHTMLTableToExcel = function (_Component) {\n  _inherits(ReactHTMLTableToExcel, _Component);\n\n  function ReactHTMLTableToExcel(props) {\n    _classCallCheck(this, ReactHTMLTableToExcel);\n\n    var _this = _possibleConstructorReturn(this, (ReactHTMLTableToExcel.__proto__ || Object.getPrototypeOf(ReactHTMLTableToExcel)).call(this, props));\n\n    _this.handleDownload = _this.handleDownload.bind(_this);\n    return _this;\n  }\n\n  _createClass(ReactHTMLTableToExcel, [{\n    key: 'handleDownload',\n    value: function handleDownload() {\n      if (!document) {\n        if (process.env.NODE_ENV !== 'production') {\n          console.error('Failed to access document object');\n        }\n\n        return null;\n      }\n\n      if (document.getElementById(this.props.table).nodeType !== 1 || document.getElementById(this.props.table).nodeName !== 'TABLE') {\n        if (process.env.NODE_ENV !== 'production') {\n          console.error('Provided table property is not html table element');\n        }\n\n        return null;\n      }\n\n      var table = document.getElementById(this.props.table).outerHTML;\n      var sheet = String(this.props.sheet);\n      var filename = String(this.props.filename) + '.xls';\n      var uri = 'data:application/vnd.ms-excel;base64,';\n      var template = '<html xmlns:o=\"urn:schemas-microsoft-com:office:office\" xmlns:x=\"urn:schemas-mic' + 'rosoft-com:office:excel\" xmlns=\"http://www.w3.org/TR/REC-html40\"><head><meta cha' + 'rset=\"UTF-8\"><!--[if gte mso 9]><xml><x:ExcelWorkbook><x:ExcelWorksheets><x:Exce' + 'lWorksheet><x:Name>{worksheet}</x:Name><x:WorksheetOptions><x:DisplayGridlines/>' + '</x:WorksheetOptions></x:ExcelWorksheet></x:ExcelWorksheets></x:ExcelWorkbook></' + 'xml><![endif]--></head><body>{table}</body></html>';\n      var context = {\n        worksheet: sheet || 'Worksheet',\n        table: table\n      }; // If IE11\n\n      if (window.navigator.msSaveOrOpenBlob) {\n        var fileData = ['' + ('<html xmlns:o=\"urn:schemas-microsoft-com:office:office\" xmlns:x=\"urn:schemas-mic' + 'rosoft-com:office:excel\" xmlns=\"http://www.w3.org/TR/REC-html40\"><head><meta cha' + 'rset=\"UTF-8\"><!--[if gte mso 9]><xml><x:ExcelWorkbook><x:ExcelWorksheets><x:Exce' + 'lWorksheet><x:Name>{worksheet}</x:Name><x:WorksheetOptions><x:DisplayGridlines/>' + '</x:WorksheetOptions></x:ExcelWorksheet></x:ExcelWorksheets></x:ExcelWorkbook></' + 'xml><![endif]--></head><body>') + table + '</body></html>'];\n        var blobObject = new Blob(fileData);\n        document.getElementById('react-html-table-to-excel').click()(function () {\n          window.navigator.msSaveOrOpenBlob(blobObject, filename);\n        });\n        return true;\n      }\n\n      var element = window.document.createElement('a');\n      element.href = uri + ReactHTMLTableToExcel.base64(ReactHTMLTableToExcel.format(template, context));\n      element.download = filename;\n      document.body.appendChild(element);\n      element.click();\n      document.body.removeChild(element);\n      return true;\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      return _react2.default.createElement('button', {\n        id: this.props.id,\n        className: this.props.className,\n        type: 'button',\n        onClick: this.handleDownload\n      }, this.props.buttonText);\n    }\n  }], [{\n    key: 'base64',\n    value: function base64(s) {\n      return window.btoa(unescape(encodeURIComponent(s)));\n    }\n  }, {\n    key: 'format',\n    value: function format(s, c) {\n      return s.replace(/{(\\w+)}/g, function (m, p) {\n        return c[p];\n      });\n    }\n  }]);\n\n  return ReactHTMLTableToExcel;\n}(_react.Component);\n\nReactHTMLTableToExcel.propTypes = propTypes;\nReactHTMLTableToExcel.defaultProps = defaultProps;\nexports.default = ReactHTMLTableToExcel;","const ValidasiLaporanKeuangan = (value, event) => {\r\n    const errors = {};\r\n    // console.log(event.charCode==13);\r\n    if (!value.tanggal_awal) {\r\n      errors.tanggal_awal = \"Tanggal Tidak Boleh Kosong\";\r\n    }\r\n    if (!value.type) {\r\n      errors.type = \"Type Tidak Boleh Kosong\";\r\n    }\r\n    if (!value.type_laporan) {\r\n      errors.type_laporan = \"Type Laporan Tidak Boleh Kosong\";\r\n    }\r\n    return errors;\r\n  };\r\n  \r\n  export default ValidasiLaporanKeuangan;\r\n  "],"sourceRoot":""}