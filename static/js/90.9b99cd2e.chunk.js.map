{"version":3,"sources":["pages/Barang/TimbangBarang/FormTimbangBarang.jsx","pages/Barang/TimbangBarang/TimbangBarang.jsx"],"names":["FormTimbangBarang","props","_this","Object","classCallCheck","this","_super","call","state","no_kirim","datagudang","isLoading","loading","timbangan","columns","dataField","text","sort","editable","formatter","data","row","parseFloat","berat_plastik","toFixed","berat_atribut","berat_bandrol","berat","berat_baki","selisih","io","connect","process","replace","on","getUserdata","user_id","window","document","activeElement","value","dispatch","getDataGudang","getDataBaki","getTimbangan","_this2","tanggal","getToday","detail_barang","timbang_barang","setState","postData2","then","res","ToastNotification","updateTimbangBarang","catch","err","response","_this3","databaki","name","forEach","list","kode_baki","nama_baki","push","react_default","a","createElement","onSubmit","handleSubmit","autoComplete","onKeyPress","e","key","preventDefault","className","Field","id","label","onChange","kode_gudang","change","getDataBakiByGudang","options","filter","undefined","map","nama_gudang","placeholder","component","ReanderSelect","htmlFor","lib_default","keyField","products","cellEdit","cellEditFactory","mode","blurToSave","afterSaveCell","oldValue","newValue","column","kode_toko","qty","total","timbang","cek","localStoragedecryp","length","JSON","parse","hasil_cek","findIndex","hasil","localStorageencryp","stringify","type","onClick","sendTimbangan","Fragment","loading_default","background","loaderColor","Component","reduxForm","form","enableReinitialize","data_terima_barang","localStorage","getItem","getDataTimbangan","utility","initialValues","datamaster","databarang","getTimbangBarang","TimbangBarang","isEdit","modalDialog","isLoadingBtn","DataTimbangBarang","SimpanDataBarang","resetTimbangBarang","gudang","baki","getNokirim","react_router_dom","to","panel","TimbangBarang_FormTimbangBarang","handleChange","React"],"mappings":"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","file":"static/js/90.9b99cd2e.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\n// import { getNokirim } from \"../../../actions/databarang_action\";\r\nimport {\r\n  getDataBaki,\r\n  getDataBakiByGudang,\r\n  getDataGudang,\r\n} from \"../../../actions/datamaster_action\";\r\nimport { ReanderSelect } from \"../../../components/helpers/field\";\r\nimport Loading from \"react-fullscreen-loading\";\r\nimport {\r\n  getToday,\r\n  getUserdata,\r\n  localStoragedecryp,\r\n  localStorageencryp,\r\n} from \"../../../components/helpers/function\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport cellEditFactory from \"react-bootstrap-table2-editor\";\r\nimport { updateTimbangBarang } from \"../../../actions/databarang_action\";\r\nimport { postData2 } from \"../../../config/axios\";\r\nimport { ToastNotification } from \"../../../components/helpers/notification\";\r\nimport { getTimbangan } from \"../../../actions/utility_action\";\r\nimport { io } from \"socket.io-client\";\r\n\r\nconst maptostate = (state) => {\r\n  let data_terima_barang =\r\n    localStorage.getItem(\"data_terima_barang\") === null || undefined\r\n      ? []\r\n      : JSON.parse(localStorage.getItem(\"data_terima_barang\") || []);\r\n\r\n  return {\r\n    getDataTimbangan: state.utility.getTimbangan,\r\n    initialValues: {\r\n      no_kirim: data_terima_barang.no_kirim || \"\",\r\n    },\r\n    datagudang: state.datamaster.getDataGudang,\r\n    databaki: state.datamaster.getDataBaki,\r\n    timbang_barang: state.databarang.getTimbangBarang,\r\n  };\r\n};\r\nclass FormTimbangBarang extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      no_kirim: [],\r\n      datagudang: [],\r\n      isLoading: false,\r\n      loading: false,\r\n      timbangan: 0,\r\n      columns: [\r\n        {\r\n          dataField: \"kode_gudang\",\r\n          text: \"Gudang\",\r\n          sort: true,\r\n          editable: false,\r\n        },\r\n        {\r\n          dataField: \"kode_toko\",\r\n          text: \"Baki\",\r\n          editable: false,\r\n        },\r\n        {\r\n          dataField: \"qty\",\r\n          text: \"Qty\",\r\n          editable: false,\r\n        },\r\n        {\r\n          dataField: \"berat\",\r\n          text: \"Berat\",\r\n          editable: false,\r\n        },\r\n        {\r\n          dataField: \"berat_baki\",\r\n          text: \"Berat baki\",\r\n          editable: false,\r\n        },\r\n        {\r\n          dataField: \"berat_plastik\",\r\n          text: \"Berat Plastik\",\r\n          editable: false,\r\n          formatter: (data, row) => {\r\n            return parseFloat(row.berat_plastik).toFixed(2);\r\n          },\r\n        },\r\n        {\r\n          dataField: \"berat_atribut\",\r\n          text: \"Berat Atribut\",\r\n          editable: false,\r\n          formatter: (data, row) => {\r\n            return parseFloat(row.berat_atribut).toFixed(2);\r\n          },\r\n        },\r\n        {\r\n          dataField: \"berat_bandrol\",\r\n          text: \"Berat Bandrol\",\r\n          editable: false,\r\n          formatter: (data, row) => {\r\n            return parseFloat(row.berat_bandrol).toFixed(2);\r\n          },\r\n        },\r\n\r\n        {\r\n          dataField: \"total\",\r\n          text: \"Total\",\r\n          editable: false,\r\n          formatter: (data, row) => {\r\n            return parseFloat(\r\n              row.berat + row.berat_baki + row.berat_bandrol + row.berat_atribut + row.berat_plastik\r\n            ).toFixed(2);\r\n          },\r\n        },\r\n        {\r\n          dataField: \"timbang\",\r\n          text: \"Timbang\",\r\n        },\r\n        {\r\n          dataField: \"selisih\",\r\n          text: \"Selisih\",\r\n          formatter: (data, row) => {\r\n            return parseFloat(row.selisih).toFixed(2);\r\n          },\r\n        },\r\n      ],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const socket = io.connect(process.env.REACT_APP_BACKEND_URL.replace(\"/api/v1/\",\"\"));\r\n    socket.on(\"timbangan\",(data)=>{\r\n      if(getUserdata().user_id === data.user_id){\r\n        window.document.activeElement.value=data.value\r\n      }\r\n    })\r\n    this.props.dispatch(getDataGudang());\r\n    this.props.dispatch(getDataBaki());\r\n    this.props.dispatch(getTimbangan());\r\n  }\r\n\r\n  sendTimbangan() {\r\n    let data = {\r\n      tanggal: getToday(),\r\n      detail_barang: this.props.timbang_barang,\r\n    };\r\n    this.setState({\r\n      isLoading: true,\r\n    });\r\n    postData2(\"timbang-baki\", data)\r\n      .then((res) => {\r\n        this.setState({\r\n          isLoading: false,\r\n        });\r\n        ToastNotification(\"success\", \"Data Berhasil Disimpan\");\r\n        this.props.dispatch(updateTimbangBarang([]));\r\n      })\r\n      .catch((err) => {\r\n        this.setState({\r\n          isLoading: false,\r\n        });\r\n        // console.log(err);\r\n        ToastNotification(\r\n          \"error\",\r\n          err &&\r\n            err.response &&\r\n            err.response.data &&\r\n            \"Terjadi kersalahan saat menimbang baki\"\r\n        );\r\n      });\r\n  }\r\n\r\n  render() {\r\n    let databaki = [\r\n      {\r\n        value: \"ALL\",\r\n        name: \"SEMUA\",\r\n      },\r\n    ];\r\n    this.props.databaki.forEach((list) => {\r\n      let data = {\r\n        value: list.kode_baki,\r\n        name: list.kode_baki + \" - \" + list.nama_baki,\r\n      };\r\n      databaki.push(data);\r\n    });\r\n    return (\r\n      <form\r\n        onSubmit={this.props.handleSubmit}\r\n        autoComplete=\"off\"\r\n        onKeyPress={(e) => {\r\n          e.key === \"Enter\" && e.preventDefault();\r\n        }}\r\n      >\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-4\">\r\n            {/* <input type=\"text\" id=\"id_text\"/> */}\r\n            <Field\r\n              id=\"kode_gudang\"\r\n              label=\"Kode Gudang\"\r\n              name=\"kode_gudang\"\r\n              onChange={(e) => {\r\n                this.setState({ kode_gudang: e });\r\n                this.props.change(\"kode_baki\", \"\");\r\n                this.props.dispatch(getDataBakiByGudang(e));\r\n              }}\r\n              options={this.props.datagudang\r\n                .filter((list) => list.kode_gudang !== undefined)\r\n                .map((list) => {\r\n                  let data = {\r\n                    value: list.kode_gudang,\r\n                    name: list.kode_gudang + \" - \" + list.nama_gudang,\r\n                  };\r\n                  return data;\r\n                })}\r\n              placeholder={\"Silahkan Pilih Kode Gudang\"}\r\n              component={ReanderSelect}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"col-lg-4\">\r\n            <Field\r\n              id=\"kode_baki\"\r\n              label=\"Kode Baki\"\r\n              name=\"kode_baki\"\r\n              onChange={(e) => {\r\n                this.setState({ kode_baki: e });\r\n                this.props.change(\"kode_baki\", \"\");\r\n              }}\r\n              options={databaki}\r\n              placeholder={\"Silahkan Pilih Kode Baki\"}\r\n              component={ReanderSelect}\r\n            />\r\n          </div>\r\n          <div className=\"col-lg-4\">\r\n            <label htmlFor=\"\">&nbsp;</label>\r\n            <button className=\"btn btn-outline-secondary btn-block\">\r\n              Cari\r\n            </button>\r\n          </div>\r\n        </div>\r\n        {/* <button type=\"button\" onClick={()=>this.konektimbangan()}> Button </button> */}\r\n        <BootstrapTable\r\n          keyField=\"baki\"\r\n          data={this.props.products || []}\r\n          columns={this.state.columns || []}\r\n          cellEdit={cellEditFactory({\r\n            mode: \"click\",\r\n            blurToSave: true,\r\n            afterSaveCell: (oldValue, newValue, row, column) => {\r\n              let data = {\r\n                kode_gudang: row.kode_gudang,\r\n                kode_toko: row.kode_toko,\r\n                qty: row.qty,\r\n                berat: row.berat,\r\n                berat_baki: row.berat_baki,\r\n                berat_bandrol: row.berat_bandrol,\r\n                berat_atribut: row.berat_atribut,\r\n                berat_plastik: row.berat_plastik,\r\n                total:\r\n                  parseFloat(row.berat_baki) +\r\n                  parseFloat(row.berat_bandrol) +\r\n                  parseFloat(row.berat_atribut) +\r\n                  parseFloat(row.berat_plastik) +\r\n                  parseFloat(row.berat),\r\n                timbang: parseFloat(newValue),\r\n                selisih: parseFloat(\r\n                  (\r\n                    parseFloat(\r\n                      row.berat_baki +\r\n                        row.berat_bandrol +\r\n                        row.berat +\r\n                        row.berat_plastik +\r\n                        row.berat_atribut\r\n                    ) - parseFloat(newValue || 0)\r\n                  ).toFixed(3) || 0\r\n                ),\r\n              };\r\n              let cek =\r\n                localStoragedecryp(\"timbang_barang\").length === 0\r\n                  ? []\r\n                  : JSON.parse(localStoragedecryp(\"timbang_barang\"));\r\n              let hasil_cek = cek.findIndex(\r\n                (hasil) => hasil.kode_toko === data.kode_toko\r\n              );\r\n              // console.log(data);\r\n              if (hasil_cek === -1) {\r\n                cek.push(data);\r\n                localStorageencryp(\"timbang_barang\", JSON.stringify(cek));\r\n                this.props.dispatch(updateTimbangBarang(cek));\r\n              } else {\r\n                cek[hasil_cek] = data;\r\n                localStorageencryp(\"timbang_barang\", JSON.stringify(cek));\r\n                this.props.dispatch(updateTimbangBarang(cek));\r\n              }\r\n            },\r\n          })}\r\n        />\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-8\"></div>\r\n          <div className=\"col-lg-4 text-right\">\r\n            <label htmlFor=\"\">&nbsp;</label>\r\n            <button\r\n              className=\"btn btn-primary btn-block\"\r\n              type=\"button\"\r\n              onClick={() => this.sendTimbangan()}\r\n            >\r\n              {this.state.isLoading ? (\r\n                <>\r\n                  <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Sedang\r\n                  Menyimpan\r\n                </>\r\n              ) : (\r\n                \"Simpan Data\"\r\n              )}\r\n            </button>\r\n          </div>\r\n        </div>\r\n        {this.state.isLoading ? (\r\n          <Loading\r\n            loading\r\n            background=\"rgba(0, 0, 0, 0.35)\"\r\n            loaderColor=\"rgba(94, 147, 117, 1)\"\r\n          />\r\n        ) : null}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nFormTimbangBarang = reduxForm({\r\n  form: \"FormTimbangBarang\",\r\n  enableReinitialize: true,\r\n})(FormTimbangBarang);\r\nexport default connect(maptostate, null)(FormTimbangBarang);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Panel, PanelHeader } from \"../../../components/panel/panel.jsx\";\r\nimport {\r\n  getNokirim, getTimbangBarang,\r\n} from \"../../../actions/databarang_action.jsx\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport {  getToday, localStoragedecryp,} from \"../../../components/helpers/function.jsx\";\r\nimport FormTimbangBarang from \"./FormTimbangBarang.jsx\";\r\nconst maptostate = (state) => {\r\n  return {\r\n    timbang_barang : state.databarang.getTimbangBarang\r\n  };\r\n};\r\n\r\nclass TimbangBarang extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isEdit: false,\r\n      modalDialog: false,\r\n      isLoading: false,\r\n      isLoadingBtn: false,\r\n      DataTimbangBarang: [],\r\n      SimpanDataBarang: false,\r\n      resetTimbangBarang : false,\r\n      \r\n      products : [\r\n        {\r\n          gudang : \"TOKO\",\r\n          baki : \"KLNG\",\r\n          qty : 10,\r\n          berat : 200,\r\n          berat_baki : 100,\r\n          berat_bandrol: 0.200,\r\n          total: 1250,\r\n          timbang: 0,\r\n          selisih : 0\r\n        },\r\n        {\r\n          gudang : \"TOKO\",\r\n          baki : \"GLNG\",\r\n          qty : 10,\r\n          berat : 200,\r\n          berat_baki : 100,\r\n          berat_bandrol: 0.200,\r\n          total: 1250,\r\n          timbang: 0,\r\n          selisih : 0\r\n        }\r\n      ]\r\n    };\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.dispatch(getNokirim());\r\n    this.setState({\r\n      products : localStoragedecryp(\"timbang_barang\")\r\n    })\r\n  }\r\n\r\n  handleSubmit(data) {\r\n    // console.log(data);\r\n    this.props.dispatch(getTimbangBarang(data.kode_gudang, data.kode_baki, getToday()))\r\n    \r\n      \r\n  }\r\n\r\n\r\n  render() {\r\n    // console.log(this.props.products);\r\n    return (\r\n      <div>\r\n        <ol className=\"breadcrumb float-xl-right\">\r\n          <li className=\"breadcrumb-item\">\r\n            <Link to=\"#\">Barang</Link>\r\n          </li>\r\n          <li className=\"breadcrumb-item active\">Timbang Baki</li>\r\n        </ol>\r\n        <h1 className=\"page-header\">Timbang Baki </h1>\r\n        <Panel>\r\n          <PanelHeader>Timbang Baki</PanelHeader>\r\n          <br />\r\n\r\n          {/* Terima Barang */}\r\n          <div className=\"container\">\r\n            <FormTimbangBarang\r\n            handleChange={() => this.handleChange()}\r\n              column={this.state.columns || []}\r\n              products={this.props.timbang_barang|| []}\r\n            onSubmit={(data) => this.handleSubmit(data) }\r\n            />\r\n          \r\n          </div>\r\n          <br />\r\n          {/* End Tambah Terima Barang  */}\r\n        </Panel>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(maptostate, null)(TimbangBarang);\r\n"],"sourceRoot":""}