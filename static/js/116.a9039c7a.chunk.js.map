{"version":3,"sources":["pages/Laporan/LaporanOtorisasi/pdf/CetakLaporanOtorisasi.jsx","pages/Laporan/LaporanOtorisasi/HeadLaporanTransaksi.jsx","pages/Laporan/LaporanOtorisasi/index.jsx"],"names":["CetakLaporanOtorisasi","tableColumn","data","arguments","length","undefined","doc","jsPDF","tableRows","finalY","setFontSize","text","getUserdata","nama_toko","jml_alamat","alamat_toko","slice","setProperties","title","content","forEach","item","index","rows","concat","styles","cellWidth","user_id","kategori","description","keterangan","push","printed","colSpan","JSON","parse","localStoragedecryp","getToday","fontStyle","textColor","autoTable","head","body","startY","theme","rowPageBreak","margin","top","bodyStyles","fontSize","headStyles","fillColor","autoTableEndPosY","pages","internal","getNumberOfPages","pageWidth","pageSize","width","pageHeight","height","j","horizontalPos","verticalPos","setPage","align","string","output","x","window","open","document","write","HeadLaporanAuthorization","props","_this","Object","classCallCheck","this","_super","call","state","date","Date","setStartDate","bind","assertThisInitialized","setLastDate","console","log","setState","tgl_awal","tgl_akhir","_this2","react_default","a","createElement","onSubmit","handleSubmit","autoComplete","className","Field","name","component","InputDate","label","type","selected","onChange","placeholder","value","isLoading","Fragment","tabel","keyField","dataAuthorization","columns","dataField","footerAttrs","empty","textEmpty","onClick","loading_default","loading","background","loaderColor","Component","reduxForm","form","enableReinitialize","connect","initialValues","getTglSystem","LaporanOtorisasi","export","data_post","formatDate","moment","format","getData2","then","res","ToastNotification","catch","error","_this3","library","to","HeadLaporanTransaksi","React"],"mappings":"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","file":"static/js/116.a9039c7a.chunk.js","sourcesContent":["import jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\nimport { getToday, getUserdata, localStoragedecryp } from \"../../../../components/helpers/function\";\r\n// Date Fns is used to format the dates we receive\r\n\r\n// define a generatePDF function that accepts a tickets argument\r\nconst CetakLaporanOtorisasi = (\r\n  data = \"\",\r\n) => {\r\n  // initialize jsPDF\r\n  const doc = new jsPDF(\"l\", \"mm\", [297, 210]);\r\n  //   let data = JSON.parse(localStorage.getItem(\"tt_pengeluaran_barang\")) || [];\r\n  let tableRows = [];\r\n  // let footRows = [];\r\n  let tableColumn = [];\r\n  let finalY = 30;\r\n\r\n\r\n  doc.setFontSize(15);\r\n  doc.text(\"LAPORAN OTORISASI AKUN\", 14, 15);\r\n  doc.setFontSize(20);\r\n  doc.text(getUserdata().nama_toko, 200, 15);\r\n  doc.setFontSize(8);\r\n  let jml_alamat = getUserdata().alamat_toko.length;\r\n  if (jml_alamat > 20) {\r\n    doc.text(getUserdata().alamat_toko.slice(0,48), 200, 20);\r\n  }\r\n  if (jml_alamat > 50) {\r\n    doc.text(getUserdata().alamat_toko.slice(48,90), 200, 25);\r\n  }\r\n  doc.setFontSize(10);\r\n  doc.setProperties({\r\n    title: \"LAPORAN OTORISASI AKUN\",\r\n  });\r\n  tableColumn = [\r\n    [\r\n      {\r\n        content: `No`,\r\n      },\r\n      {\r\n        content: `USER ID`,\r\n      },\r\n      {\r\n        content: `KATEGORI`,\r\n      },\r\n      {\r\n        content: `DESKRIPSI`,\r\n      },\r\n      {\r\n        content: `KETERANGAN`,\r\n      },\r\n    ],\r\n  ];\r\n\r\n  data.forEach((item, index) => {\r\n    // item.list_barang.forEach((barang, index) => {\r\n    let rows = [\r\n      // ++index,\r\n      {\r\n        content: `${++index}`,\r\n        styles: {\r\n          cellWidth : 10\r\n        },\r\n      },\r\n      item.user_id,\r\n      item.kategori,\r\n      item.description,\r\n      item.keterangan,\r\n    ];\r\n    tableRows.push(rows);\r\n  });\r\n  let printed = [\r\n    {\r\n      colSpan: 6,\r\n      content: `Printed By ${JSON.parse(localStoragedecryp(\"userdata\")).user_id} / ${getToday()}`,\r\n      styles: {\r\n        // lineWidth: 0.1,\r\n        fontStyle: \"italic\",\r\n        textColor: \"#000\",\r\n        // fillColor: \"#E8E5E5\"\r\n      },\r\n    },\r\n  ]\r\n  tableRows.push(printed);\r\n  doc.autoTable({\r\n    head: tableColumn,\r\n    body: tableRows,\r\n    // foot: footRows,\r\n    startY: finalY,\r\n    theme: \"plain\",\r\n    rowPageBreak: \"avoid\",\r\n    // pageBreak: \"avoid\",\r\n    margin: { top: 10 },\r\n    bodyStyles: {\r\n      // lineWidth: 0.02,\r\n      // lineColor: \"#000\",\r\n      fontSize: 8,\r\n    },\r\n    headStyles: {\r\n      fontSize: 8,\r\n      // lineWidth: 0.02,\r\n      // lineColor: \"#000\",\r\n      textColor: \"#000\",\r\n      fillColor: \"#E8E5E5\",\r\n    },\r\n  });\r\n  finalY = doc.autoTableEndPosY() + 3;\r\n  tableRows = [];\r\n  const pages = doc.internal.getNumberOfPages();\r\n  const pageWidth = doc.internal.pageSize.width; //Optional\r\n  const pageHeight = doc.internal.pageSize.height; //Optional\r\n  doc.setFontSize(10); //Optional\r\n  for (let j = 1; j < pages + 1; j++) {\r\n    let horizontalPos = pageWidth / 2; //Can be fixed number\r\n    let verticalPos = pageHeight - 10; //Can be fixed number\r\n    doc.setPage(j);\r\n    doc.text(`${j} of ${pages}`, horizontalPos, verticalPos, {\r\n      align: \"center\",\r\n    });\r\n  }\r\n  // doc.autoPrint();\r\n  // doc.save(`LAPORAN BARANG DETAIL.pdf`);\r\n  var string = doc.output(\"datauristring\");\r\n  // var embed = \"<embed width='100%' height='100%' src='\" + string + \"'/>\";\r\n  var x = window.open();\r\n  x.document.open();\r\n  x.document.write(\r\n    \"<html><head><title>LAPORAN BARANG DETAIL</title></head><body style='margin:0 !important'><embed width='100%' height='100%'  src=\" +\r\n      string +\r\n      \"></embed></body></html>\"\r\n  );\r\n  // x.document.write(embed);\r\n  // setInterval(() => {\r\n  //   x.close();\r\n  // }, 1000);\r\n};\r\n\r\nexport default CetakLaporanOtorisasi;\r\n// import jsPDF from \"jspdf\";\r\n// import \"jspdf-autotable\";\r\n// import { getToday } from \"../../../../components/helpers/function\";\r\n// // Date Fns is used to format the dates we receive\r\n\r\n// // define a generatePDF function that accepts a tickets argument\r\n// const CetakLaporanOtorisasi = (data = \"\", username = \"\", kode_baki = \"\") => {\r\n//   const doc = new jsPDF(\"l\");\r\n//   doc.setFontSize(15);\r\n//   doc.text(\"LAPORAN  BARANG DETAIL\", 14, 15);\r\n//   doc.setFontSize(10);\r\n//   doc.setProperties({\r\n//     title: \"LAPORAN  BARANG DETAIL\",\r\n//   });\r\n//   //row 1\r\n//   doc.text(`Kode Baki : ${kode_baki}`, 14, 23);\r\n//   let tableRows = [];\r\n//   let finalY = 10;\r\n//   let footRows = [];\r\n//   let total = 0;\r\n//   let sub_qty = 0;\r\n//   let sub_brt = 0;\r\n//   let tableColumn = [\r\n//     \"NO\",\r\n//     \"KODE BARANG\",\r\n//     \"KODE BARCODE\",\r\n//     \"KODE INTERN\",\r\n//     \"KODE GUDANG\",\r\n//     \"NAMA BARANG\",\r\n//     \"BERAT\",\r\n//     \"NAMA ATRIBUTE\",\r\n//     \"BERAT ATRIBUTE\",\r\n//     \"JUMLAH\",\r\n//   ];\r\n\r\n//   // console.log(JSON.stringify(data));\r\n//   // localStorage.setItem('hasil',JSON.stringify(data));\r\n//   data.forEach((item, index) => {\r\n//     // item.list_barang.forEach((barang, index) => {\r\n//     let rows = [\r\n//       ++index,\r\n//       item.kode_barang,\r\n//       item.kode_barcode,\r\n//       item.kode_intern,\r\n//       item.kode_gudang,\r\n//       item.nama_barang,\r\n//       item.berat,\r\n//       item.nama_atribut,\r\n//       item.berat_atribut,\r\n//       item.stock_on_hand,\r\n//     ];\r\n//     total = index;\r\n//     sub_qty = sub_qty + parseFloat(item.stock_on_hand);\r\n//     sub_brt = sub_brt + parseFloat(item.berat);\r\n//     tableRows.push(rows);\r\n//     let footer = [\r\n//       \"\",\r\n//       \"\",\r\n//       \"\",\r\n//       \"\",\r\n//       \"Sub Total\",\r\n//       \"\",\r\n//       `${sub_brt.toFixed(3)}`,\r\n//       \"\",\r\n//       \"\",\r\n//       `${sub_qty}`,\r\n//     ];\r\n//     footRows.push(footer);\r\n//     doc.autoTable(tableColumn, tableRows, {\r\n//       startY: index === 0 ? 35 : finalY + 15,\r\n//         theme: \"plain\",\r\n//       foot: footRows,\r\n//       rowPageBreak: \"avoid\",\r\n//       pageBreak: \"avoid\",\r\n//       bodyStyles: { lineWidth: 0.02, lineColor: \"#000\" },\r\n//       headStyles: {\r\n//         lineWidth: 0.02,\r\n//         lineColor: \"#000\",\r\n//         fillColor: [187, 187, 187],\r\n//       },\r\n//       // theme: \"\",\r\n//     });\r\n//     finalY = doc.lastAutoTable.finalY + 10;\r\n//     tableRows = [];\r\n//   });\r\n//   // let footer = [\r\n//   //   \"\",\r\n//   //   \"\",\r\n//   //   \"\",\r\n//   //   \"Total Barang : \",\r\n//   //   \"\" + parseFloat(total).toLocaleString(\"kr-KO\"),\r\n//   // ];\r\n//   // tableRows.push(footer);\r\n\r\n//   doc.text(`Total Barang\t: ${total}`, 14, finalY + 5);\r\n//   doc.text(`User\t             : ${username}`, 14, finalY + 10);\r\n//   doc.text(`Tgl Cetak             : ${getToday()}`, 14, finalY + 16);\r\n\r\n//   // doc.autoPrint();\r\n//   // doc.save(`Laporan BARANG DETAIL.pdf`);\r\n//   var string = doc.output(\"datauristring\");\r\n//   var x = window.open();\r\n//   x.document.open();\r\n//   x.document.write(\r\n//     \"<html><head><title>LAPORAN  BARANG DETAIL</title></head><body style='margin:0 !important'><embed width='100%' height='100%'  src=\" +\r\n//       string +\r\n//       \"></embed></body></html>\"\r\n//   );\r\n//   x.document.close();\r\n// };\r\n\r\n// export default CetakLaporanOtorisasi;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { InputDate } from \"../../../components/helpers/field\";\r\nimport { getTglSystem } from \"../../../components/helpers/function\";\r\nimport Tabel from \"../../../components/helpers/tabel\";\r\n\r\nimport Loading from 'react-fullscreen-loading';\r\nimport CetakLaporanOtorisasi from \"./pdf/CetakLaporanOtorisasi\";\r\n\r\nclass HeadLaporanAuthorization extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      date: new Date(),\r\n    };\r\n    this.setStartDate = this.setStartDate.bind(this);\r\n    this.setLastDate = this.setLastDate.bind(this);\r\n  }\r\n\r\n  handleSubmit(data) {\r\n    console.log(data);\r\n  }\r\n  exportPdf() {\r\n  }\r\n  setStartDate(date) {\r\n    this.setState({\r\n      tgl_awal: new Date(date),\r\n    });\r\n  }\r\n  setLastDate(date) {\r\n    this.setState({\r\n      tgl_akhir: new Date(date),\r\n    });\r\n  }\r\n  render() {\r\n   \r\n    const columns = [\r\n      {\r\n        dataField: \"user_id\",\r\n        text: \"User Id\",\r\n        footerAttrs: {\r\n          colSpan: \"4\",\r\n        },\r\n      },\r\n      {\r\n        dataField: \"kategori\",\r\n        text: \"Kategori\",\r\n      },\r\n      {\r\n        dataField: \"description\",\r\n        text: \"Deskripsi\",\r\n      },\r\n      {\r\n        dataField: \"keterangan\",\r\n        text: \"Keterangan\",\r\n      },\r\n    \r\n      \r\n    ];\r\n    return (\r\n      <form onSubmit={this.props.handleSubmit} autoComplete=\"off\">\r\n      <div className=\"row\">\r\n        <div className=\"col-lg-4\">\r\n          <Field\r\n            name=\"tgl_awal\"\r\n            component={InputDate}\r\n            label=\"Tanggal Dari\"\r\n            type=\"text\"\r\n            selected={this.state.tgl_awal}\r\n            onChange={(date) => this.setStartDate(date)}\r\n            placeholder=\"Masukan Tanggal Dari\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"col-lg-4\">\r\n          <Field\r\n            name=\"tgl_akhir\"\r\n            component={InputDate}\r\n            type=\"text\"\r\n            selected={this.state.tgl_akhir}\r\n            onChange={(date) => this.setLastDate(date)}\r\n            label=\"Tanggal Akhir\"\r\n            placeholder=\"Masukan Tanggal Akhir\"\r\n          />\r\n        </div>\r\n        <div className=\"col-lg-4 text\">\r\n          <div className=\"text-right\">\r\n            <label>&nbsp;</label>\r\n            <button\r\n              type=\"submit\"\r\n              value=\"PDF\"\r\n              name=\"type_btn\"\r\n              className=\"btn btn-primary btn-block\"\r\n            >\r\n              {this.props.isLoading ? (\r\n                <>\r\n                  <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Sedang\r\n                  Mencari\r\n                </>\r\n              ) : (\r\n                \"Cari Laporan\"\r\n              )}\r\n            </button>\r\n          </div>\r\n          </div>\r\n          <div className=\"col-lg-12\">\r\n            <Tabel\r\n              keyField=\"no_hp\"\r\n              data={this.props.dataAuthorization}\r\n              columns={columns}\r\n              empty={true}\r\n              textEmpty=\"Data Laporan Otorisasi Kosong\"\r\n            />\r\n          </div>\r\n        <div className={this.props.dataAuthorization.length > 0 ? \"col-lg-12\" : \"col-lg-12 d-none\"}>\r\n          {/* <label htmlFor=\"\">&nbsp;</label> */}\r\n          <div className=\"row\">\r\n            <div className=\"col-lg-6\">\r\n                <button\r\n                  type=\"button\"\r\n                onClick={() => CetakLaporanOtorisasi(this.props.dataAuthorization)}\r\n                className=\"btn btn-warning btn-block\"\r\n              >\r\n                {\" \"}\r\n                Export PDF{\" \"}\r\n              </button>\r\n            </div>\r\n            <div className=\"col-lg-6\">\r\n              {/* <LaporanBatalPembelianExel data={this.props.datapembelian} /> */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {this.props.isLoading ? (\r\n        <Loading \r\n        loading\r\n        background=\"rgba(0, 0, 0, 0.35)\"\r\n         loaderColor=\"rgba(94, 147, 117, 1)\" />\r\n      ) : null}\r\n    </form>\r\n    );\r\n  }\r\n}\r\n\r\nHeadLaporanAuthorization = reduxForm({\r\n  form: \"HeadLaporanAuthorization\",\r\n  enableReinitialize: true,\r\n})(HeadLaporanAuthorization);\r\n// export default connect()(HeadLaporanAuthorization);\r\nexport default connect((state) => {\r\n  return {\r\n    initialValues: {\r\n      tgl_awal: getTglSystem(),\r\n      tgl_akhir: getTglSystem(),\r\n    },\r\n  };\r\n})(HeadLaporanAuthorization);\r\n","import {\r\n  React,\r\n  connect,\r\n  Link,\r\n  reduxForm,\r\n  Panel,\r\n  PanelHeader,\r\n  formatDate,\r\n  moment,\r\n  getTglSystem,\r\n  ToastNotification,\r\n} from \"../../../components/helpers/library\";\r\nimport HeadLaporanAuthorization from \"./HeadLaporanTransaksi.jsx\";\r\nimport { getData2 } from \"../../../config/axios\";\r\n\r\nclass LaporanOtorisasi extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      export: false,\r\n      dataAuthorization: [],\r\n    };\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleSubmit(data) {\r\n    let data_post = {\r\n      tgl_awal: formatDate(\r\n        moment(new Date(data.tgl_awal)).format(\"YYYY-MM-DD\")\r\n      ),\r\n      tgl_akhir: formatDate(\r\n        moment(new Date(data.tgl_akhir)).format(\"YYYY-MM-DD\")\r\n      ),\r\n    };\r\n    this.setState({\r\n      isLoading: true,\r\n    });\r\n    getData2(\r\n      `authorization/reports?tanggal[gte]=${data_post.tgl_awal}&tanggal[lte]=${data_post.tgl_akhir}`\r\n    )\r\n      .then((res) => {\r\n        if (res.data.length === 0) {\r\n          ToastNotification(\"info\", \"Data Yang Di Cari Tidak Ada !!!\");\r\n          this.setState({\r\n            dataAuthorization: [],\r\n            isLoading: false,\r\n          });\r\n        } else {\r\n          ToastNotification(\"success\", \"Laporan Otorisasi Tersedia\");\r\n          this.setState({\r\n            dataAuthorization: res.data,\r\n            isLoading: false,\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        ToastNotification(\"info\", \"Data Yang Di Cari Tidak Ada !!!\");\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ol className=\"breadcrumb float-xl-right\">\r\n          <li className=\"breadcrumb-item\">\r\n            <Link to=\"#\">Laporan</Link>\r\n          </li>\r\n          <li className=\"breadcrumb-item active\">Laporan Otorisasi</li>\r\n        </ol>\r\n        <h1 className=\"page-header\">Laporan Otorisasi </h1>\r\n        <Panel>\r\n          <PanelHeader>Laporan Otorisasi</PanelHeader>\r\n          <br />\r\n          {/* Laporan Otorisasi */}\r\n          <div className=\"container\">\r\n            <HeadLaporanAuthorization\r\n              dataAuthorization={this.state.dataAuthorization}\r\n              onSubmit={(data) => this.handleSubmit(data)}\r\n              export={this.state.export}\r\n              isLoading={this.state.isLoading}\r\n            />\r\n          </div>\r\n          <br />\r\n          {/* End Tambah Laporan Otorisasi  */}\r\n        </Panel>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLaporanOtorisasi = reduxForm({\r\n  form: \"LaporanOtorisasi\",\r\n  enableReinitialize: true,\r\n})(LaporanOtorisasi);\r\nexport default connect((state) => {\r\n  return {\r\n    initialValues: {\r\n      tgl_awal: getTglSystem(),\r\n      tgl_akhir: getTglSystem(),\r\n    },\r\n  };\r\n})(LaporanOtorisasi);\r\n"],"sourceRoot":""}