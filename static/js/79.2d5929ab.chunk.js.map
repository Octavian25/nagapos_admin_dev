{"version":3,"sources":["pages/Laporan/LaporanMember/exel/LaporanDataMemberExel.jsx","pages/Laporan/LaporanMember/pdf/LaporanDaraMemberPdf.jsx","pages/Laporan/LaporanMember/HeadFormMember.jsx","pages/Laporan/LaporanMember/FormLaporanMember.jsx","../node_modules/react-html-table-to-excel/index.js"],"names":["LaporanDataMemberExel","props","_this","Object","classCallCheck","this","_super","call","state","react_default","a","createElement","Fragment","react_html_table_to_excel_default","id","className","table","filename","sheet","buttonText","rowkey","style","display","colSpan","localStoragedecryp","length","JSON","parse","tgl_awal","tgl_akhir","getUserdata","nama_toko","alamat_toko","backgroundColor","color","data","map","item","index","textAlign","_id","tgl_daftar","detail","row","kode_member","nama_customer","no_hp","alamat_customer","kecamatan","kelurahan","kota","point","tgl_lahir","list","reduce","b","Component","LaporanDaraMemberPdf","tableColumn","arguments","undefined","doc","jsPDF","tableRows","footRows","finalY","total_daftar","setFontSize","text","jml_alamat","slice","setProperties","title","concat","content","forEach","push","data1","styles","halign","fillColor","textColor","footer","printed","user_id","getToday","fontStyle","autoTable","head","body","foot","startY","theme","rowPageBreak","margin","top","footStyles","fontSize","bodyStyles","headStyles","autoTableEndPosY","pages","internal","getNumberOfPages","pageWidth","pageSize","width","pageHeight","height","j","horizontalPos","verticalPos","setPage","align","string","output","x","window","open","document","write","HeadFormMember","date","Date","handleSubmit","bind","assertThisInitialized","setStartDate","setLastDate","console","log","datamember","setState","_this2","datamemeber","columns","dataField","footerAttrs","cell","num","formatter","value","onSubmit","autoComplete","Field","name","component","InputDate","label","type","selected","onChange","placeholder","isLoading","tabel","keyField","export","empty","textEmpty","htmlFor","onClick","exportPdf","exel_LaporanDataMemberExel","loading_default","loading","background","loaderColor","reduxForm","form","enableReinitialize","connect","initialValues","getTglSystem","FormLaporanMember","data_post","formatDate","moment","format","postDataNoTImeOut","then","res","ToastNotification","localStorageencryp","stringify","catch","err","_this3","react_router_dom","to","panel","LaporanMember_HeadFormMember","React","defineProperty","exports","_createClass","defineProperties","target","i","descriptor","enumerable","configurable","writable","key","Constructor","protoProps","staticProps","prototype","_react","__webpack_require__","_react2","_interopRequireDefault","_propTypes2","obj","__esModule","default","propTypes","isRequired","ReactHTMLTableToExcel","_Component","instance","TypeError","_classCallCheck","self","ReferenceError","_possibleConstructorReturn","__proto__","getPrototypeOf","handleDownload","subClass","superClass","create","constructor","setPrototypeOf","_inherits","getElementById","nodeType","nodeName","outerHTML","String","context","worksheet","navigator","msSaveOrOpenBlob","blobObject","Blob","click","element","href","base64","download","appendChild","removeChild","s","btoa","unescape","encodeURIComponent","c","replace","m","p","defaultProps"],"mappings":"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","file":"static/js/79.2d5929ab.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport ReactHTMLTableToExcel from \"react-html-table-to-excel\";\r\nimport { getUserdata, localStoragedecryp } from \"../../../../components/helpers/function\";\r\n\r\nclass LaporanDataMemberExel extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n        <ReactHTMLTableToExcel\r\n          id=\"test-table-xls-button\"\r\n          className=\"btn btn-success btn-block\"\r\n          table=\"table-to-xls\"\r\n          filename=\"Laporan Daftar Member\"\r\n          sheet=\"Laporan Daftar Member\"\r\n          buttonText=\"Export Exel\"\r\n        />\r\n\r\n        <table\r\n          rowkey=\"kode_member\"\r\n          id=\"table-to-xls\"\r\n          style={{ display: \"none\" }}\r\n        >\r\n          <thead>\r\n            <tr>\r\n              <th colSpan=\"9\"> Laporan Daftar Member </th>\r\n            </tr>\r\n            <tr>\r\n              <th colSpan=\"9\"> Periode </th>\r\n            </tr>\r\n            <tr>\r\n              <th colSpan=\"9\">\r\n                {\" \"}\r\n                {localStoragedecryp(\"tgl_laporan\").length === 0\r\n                  ? null\r\n                  : JSON.parse(localStoragedecryp(\"tgl_laporan\")).tgl_awal +\r\n                    \"s/d\" +\r\n                    JSON.parse(localStoragedecryp(\"tgl_laporan\"))\r\n                      .tgl_akhir}{\" \"}\r\n              </th>\r\n            </tr>\r\n            <tr>\r\n              <th colSpan=\"9\"> TOKO :  {getUserdata().nama_toko} </th>\r\n            </tr>\r\n           \r\n            <tr>\r\n              <th colSpan=\"9\"> ALAMAT :  {getUserdata().alamat_toko} </th>\r\n            </tr>\r\n            <tr>\r\n              <th colSpan=\"9\"></th>\r\n            </tr>\r\n            <tr>\r\n              <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>\r\n                Kode Member\r\n              </th>\r\n              <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>\r\n                Nama Member\r\n              </th>\r\n              <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>\r\n                No Hp\r\n              </th>\r\n              <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>\r\n                Alamat Customer\r\n              </th>\r\n              <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>\r\n                Kecamatan\r\n              </th>\r\n              <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>\r\n                Kelurahan\r\n              </th>\r\n              <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>\r\n                Kota\r\n              </th>\r\n              <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>\r\n                Point\r\n              </th>\r\n              <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>\r\n                Tanggal Lahir\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n\r\n          {this.props.data.map((item, index) => (\r\n            <>\r\n              <tbody>\r\n                <tr>\r\n                  <th\r\n                    colSpan=\"9\"\r\n                    style={{ textAlign: \"left\" }}\r\n                  >\r\n                    {\" \"}\r\n                    Tanggal Daftar : {item._id.tgl_daftar}{\" \"}\r\n                  </th>\r\n                </tr>\r\n\r\n                {item.detail.map((row, index) => (\r\n                  <>\r\n                    <tr>\r\n                      <td> {row.kode_member}</td>\r\n                      <td> {row.nama_customer}</td>\r\n                      <td> {row.no_hp}</td>\r\n                      <td> {row.alamat_customer}</td>\r\n                      <td> {row.kecamatan}</td>\r\n                      <td> {row.kelurahan}</td>\r\n                      <td> {row.kota}</td>\r\n                      <td> {row.point}</td>\r\n                      <td> {row.tgl_lahir}</td>\r\n                    </tr>\r\n                  </>\r\n                ))}\r\n              </tbody>\r\n              <tfoot>\r\n                <tr>\r\n                  <th\r\n                    style={{\r\n                      backgroundColor: \"#E8E5E5\",\r\n                      color: \"#000\",\r\n                      textAlign: \"right\",\r\n                    }}\r\n                    colSpan=\"8\"\r\n                  >\r\n                    {\" \"}\r\n                    Jumlah Daftar{\" \"}\r\n                  </th>\r\n                  <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>\r\n                    {item.detail.length}\r\n                  </th>\r\n                </tr>\r\n              </tfoot>\r\n            </>\r\n          ))}\r\n          <tr>\r\n            <th\r\n              style={{\r\n                backgroundColor: \"#E8E5E5\",\r\n                color: \"#000\",\r\n                textAlign: \"right\",\r\n              }}\r\n              colSpan=\"8\"\r\n            >\r\n              {\" \"}\r\n              Total Pendaftar{\" \"}\r\n            </th>\r\n            <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>\r\n              {this.props.data\r\n                .map((list) => list.detail.length)\r\n                .reduce((a, b) => a + b, 0)}\r\n            </th>\r\n          </tr>\r\n        </table>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default LaporanDataMemberExel;\r\n","import jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\nimport {\r\n  getToday,\r\n  getUserdata,\r\n  localStoragedecryp,\r\n} from \"../../../../components/helpers/function\";\r\n// Date Fns is used to format the dates we receive\r\n\r\n// define a generatePDF function that accepts a tickets argument\r\nconst LaporanDaraMemberPdf = (\r\n  data = \"\",\r\n  username = \"\",\r\n  tanggal_dari = \"\",\r\n  tanggal_sampai = \"\"\r\n) => {\r\n  // initialize jsPDF\r\n  const doc = new jsPDF(\"l\", \"mm\", [297, 210]);\r\n  //   let data = JSON.parse(localStorage.getItem(\"tt_pengeluaran_barang\")) || [];\r\n  let tableRows = [];\r\n  let footRows = [];\r\n  let tableColumn = [];\r\n  let finalY = 30;\r\n  let total_daftar = 0;\r\n  let total_semua = 0;\r\n\r\n  doc.setFontSize(15);\r\n  doc.text(\"LAPORAN DAFTAR MEMBER\", 14, 15);\r\n  doc.setFontSize(20);\r\n  doc.text(getUserdata().nama_toko, 200, 15);\r\n  doc.setFontSize(8);\r\n  let jml_alamat = getUserdata().alamat_toko.length;\r\n  if (jml_alamat > 20) {\r\n    doc.text(getUserdata().alamat_toko.slice(0,48), 200, 20);\r\n  }\r\n  if (jml_alamat > 50) {\r\n    doc.text(getUserdata().alamat_toko.slice(48,90), 200, 25);\r\n  }\r\n  doc.setFontSize(10);\r\n  doc.setProperties({\r\n    title: \"LAPORAN DAFTAR MEMBER\",\r\n  });\r\n  //row 1\r\n  doc.text(\r\n    `PERIODE : ${\r\n      localStoragedecryp(\"tgl_laporan\").length === 0\r\n        ? null\r\n        : JSON.parse(localStoragedecryp(\"tgl_laporan\")).tgl_awal +\r\n          \" s/d \" +\r\n          JSON.parse(localStoragedecryp(\"tgl_laporan\")).tgl_akhir\r\n    }`,\r\n    14,\r\n    25\r\n  );\r\n  tableColumn = [\r\n    [\r\n      {\r\n        content: `KODE MEMBER`,\r\n      },\r\n      {\r\n        content: `NAMA MEMBER`,\r\n      },\r\n      {\r\n        content: `NO HP`,\r\n      },\r\n      {\r\n        content: `ALAMAT CUSTOMER`,\r\n      },\r\n      {\r\n        content: `KECMATAN`,\r\n      },\r\n      {\r\n        content: `KELURAHAN`,\r\n      },\r\n      {\r\n        content: `KOTA`,\r\n      },\r\n      {\r\n        content: `POINT`,\r\n      },\r\n      {\r\n        content: `TANGGAL LAHIR`,\r\n      },\r\n    ],\r\n  ];\r\n  data.forEach((row, index) => {\r\n    // console.log(item._id.pembayaran[0].jenis);\r\n    let data = [\r\n      {\r\n        content: `Tanggal Daftar : ${row._id.tgl_daftar}`,\r\n        colSpan: \"9\",\r\n      },\r\n    ];\r\n    tableRows.push(data);\r\n    row.detail.forEach((item, index) => {\r\n      let detail = [\r\n        {\r\n          content: item.kode_member,\r\n        },\r\n        {\r\n          content: item.nama_customer || \"\",\r\n        },\r\n        {\r\n          content: item.no_hp,\r\n        },\r\n        {\r\n          content: item.alamat_customer,\r\n        },\r\n        {\r\n          content: item.kecamatan,\r\n        },\r\n        {\r\n          content: item.kelurahan,\r\n        },\r\n        {\r\n          content: item.kota,\r\n        },\r\n        {\r\n          content: item.point,\r\n        },\r\n        {\r\n          content: item.tgl_lahir,\r\n        },\r\n      ];\r\n\r\n      tableRows.push(detail);\r\n    });\r\n\r\n    total_daftar = total_daftar + row.detail.length;\r\n    total_semua = total_semua + row.detail.length;\r\n    let data1 = [\r\n      {\r\n        content: `Jumlah Daftar :`,\r\n        colSpan: \"8\",\r\n        styles: {\r\n          halign: \"right\",\r\n          fillColor: \"#E8E5E5\",\r\n          textColor: \"#000\",\r\n        },\r\n      },\r\n      {\r\n        content: `${row.detail.length}`,\r\n        styles: {\r\n          fillColor: \"#E8E5E5\",\r\n          textColor: \"#000\",\r\n        },\r\n      },\r\n    ];\r\n    tableRows.push(data1);\r\n  });\r\n  let footer = [\r\n    {\r\n      content: `Total Pendaftar :`,\r\n      colSpan: 8,\r\n      styles: {\r\n        halign: \"right\",\r\n        fillColor: \"#E8E5E5\",\r\n        textColor: \"#000\",\r\n      },\r\n    },\r\n    {\r\n      content: `${total_daftar}`,\r\n      styles: {\r\n        fillColor: \"#E8E5E5\",\r\n        textColor: \"#000\",\r\n      },\r\n    },\r\n  ];\r\n  footRows.push(footer);\r\n  let printed = [\r\n    {\r\n      colSpan: 3,\r\n      content: `Printed By ${JSON.parse(localStoragedecryp(\"userdata\")).user_id} / ${getToday()}`,\r\n      styles: {\r\n        // lineWidth: 0.1,\r\n        fontStyle: \"italic\",\r\n        textColor: \"#000\",\r\n        // fillColor: \"#E8E5E5\"\r\n      },\r\n    },\r\n  ]\r\n  footRows.push(printed);\r\n  doc.autoTable({\r\n    head: tableColumn,\r\n    body: tableRows,\r\n    foot: footRows,\r\n    startY: finalY,\r\n    theme: \"plain\",\r\n    rowPageBreak: \"avoid\",\r\n    // pageBreak: \"avoid\",\r\n    margin: { top: 10 },\r\n    footStyles: {\r\n      // lineWidth: 0.02,\r\n      // lineColor: \"#000\",\r\n      fontSize: 8,\r\n    },\r\n    bodyStyles: {\r\n      // lineWidth: 0.02,\r\n      // lineColor: \"#000\",\r\n      fontSize: 8,\r\n    },\r\n    headStyles: {\r\n      fontSize: 8,\r\n      // lineWidth: 0.02,\r\n      // lineColor: \"#000\",\r\n      textColor: \"#000\", \r\n      fillColor: \"#E8E5E5\",\r\n    },\r\n  });\r\n  finalY = doc.autoTableEndPosY() + 3;\r\n  tableRows = [];\r\n  // footRows = [];\r\n  total_daftar = 0;\r\n  // const date = Date().split(\" \");\r\n  // we use a date string to generate our filename.\r\n  // const dateStr = date[2] + date[3] + date[4];\r\n  // ticket title. and margin-top + margin-left\r\n  // doc.text(\r\n  //   `User                          : ${\r\n  //     JSON.parse(localStoragedecryp(\"userdata\")).user_id\r\n  //   }`,\r\n  //   14,\r\n  //   finalY + 10\r\n  // );\r\n  // doc.text(`Cetak                        : ${getToday()}`, 14, finalY + 16);\r\n  // doc.text(`Total Daftar              : ${total_semua}`, 14, finalY + 22);\r\n  const pages = doc.internal.getNumberOfPages();\r\n  const pageWidth = doc.internal.pageSize.width; //Optional\r\n  const pageHeight = doc.internal.pageSize.height; //Optional\r\n  doc.setFontSize(10); //Optional\r\n  for (let j = 1; j < pages + 1; j++) {\r\n    let horizontalPos = pageWidth / 2; //Can be fixed number\r\n    let verticalPos = pageHeight - 10; //Can be fixed number\r\n    doc.setPage(j);\r\n    doc.text(`${j} of ${pages}`, horizontalPos, verticalPos, {\r\n      align: \"center\",\r\n    });\r\n  }\r\n  // doc.autoPrint();\r\n  // doc.save(`LAPORAN DAFTAR MEMBER.pdf`);\r\n  var string = doc.output(\"datauristring\");\r\n  // var embed = \"<embed width='100%' height='100%' src='\" + string + \"'/>\";\r\n  var x = window.open();\r\n  x.document.open();\r\n  x.document.write(\r\n    \"<html><head><title>LAPORAN DAFTAR MEMBER</title></head><body style='margin:0 !important'><embed width='100%' height='100%'  src=\" +\r\n      string +\r\n      \"></embed></body></html>\"\r\n  );\r\n  // x.document.write(embed);\r\n  // setInterval(() => {\r\n  //   x.close();\r\n  // }, 1000);\r\n};\r\n\r\nexport default LaporanDaraMemberPdf;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { InputDate } from \"../../../components/helpers/field\";\r\nimport { getTglSystem } from \"../../../components/helpers/function\";\r\nimport Tabel from \"../../../components/helpers/tabel\";\r\nimport LaporanDataMemberExel from \"./exel/LaporanDataMemberExel\";\r\nimport LaporanDaraMemberPdf from \"./pdf/LaporanDaraMemberPdf\";\r\nimport Loading from 'react-fullscreen-loading';\r\nclass HeadFormMember extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      date: new Date(),\r\n    };\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.setStartDate = this.setStartDate.bind(this);\r\n    this.setLastDate = this.setLastDate.bind(this);\r\n  }\r\n\r\n  handleSubmit(data) {\r\n    console.log(data);\r\n  }\r\n  exportPdf() {\r\n    LaporanDaraMemberPdf(this.props.datamember);\r\n  }\r\n  setStartDate(date) {\r\n    this.setState({\r\n      tgl_awal: new Date(date),\r\n    });\r\n  }\r\n  setLastDate(date) {\r\n    this.setState({\r\n      tgl_akhir: new Date(date),\r\n    });\r\n  }\r\n\r\n  render() {\r\n    let datamemeber = [];\r\n    this.props.datamember.forEach((row, index) => {\r\n      row.detail.forEach((item, index) => {\r\n        datamemeber.push(item);\r\n      });\r\n    });\r\n    let columns = [\r\n      {\r\n        dataField: \"kode_member\",\r\n        text: \"Kode Member\",\r\n        footerAttrs: {\r\n          colSpan: \"4\",\r\n        },\r\n        footer: (cell, row, num, index) => {\r\n          return <div>Total Daftar : {datamemeber.length} </div>;\r\n        },\r\n      },\r\n      {\r\n        dataField: \"nama_customer\",\r\n        text: \"Nama Member\",\r\n      },\r\n      {\r\n        dataField: \"point\",\r\n        text: \"Point\",\r\n        formatter: (value, row) => {\r\n          return value || 0;\r\n        },\r\n      },\r\n      {\r\n        dataField: \"alamat_customer\",\r\n        text: \"Alamat\",\r\n        formatter: (value, row) => {\r\n          return (\r\n            value + \" \" + row.kecamatan + \" \" + row.kelurahan + \" \" + row.kota\r\n          );\r\n        },\r\n      },\r\n    ];\r\n\r\n    return (\r\n      <form onSubmit={this.props.handleSubmit} autoComplete=\"off\">\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-4\">\r\n            <Field\r\n              name=\"tgl_awal\"\r\n              component={InputDate}\r\n              label=\"Tanggal Dari\"\r\n              type=\"text\"\r\n              selected={this.state.tgl_awal}\r\n              onChange={(date) => this.setStartDate(date)}\r\n              placeholder=\"Masukan Tanggal Dari\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"col-lg-4\">\r\n            <Field\r\n              name=\"tgl_akhir\"\r\n              component={InputDate}\r\n              type=\"text\"\r\n              selected={this.state.tgl_akhir}\r\n              onChange={(date) => this.setLastDate(date)}\r\n              label=\"Tanggal Akhir\"\r\n              placeholder=\"Masukan Tanggal Akhir\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"col-lg-4\">\r\n            <div className=\"text-right\">\r\n              <label>&nbsp;</label>\r\n              <button\r\n                type=\"submit\"\r\n                value=\"PDF\"\r\n                name=\"type_btn\"\r\n                className=\"btn btn-primary btn-block\"\r\n              >\r\n                {this.props.isLoading ? (\r\n                  <>\r\n                    <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Sedang\r\n                    Mencari\r\n                  </>\r\n                ) : (\r\n                  \"Cari Laporan\"\r\n                )}\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-lg-12\">\r\n            <Tabel\r\n              keyField=\"no_hp\"\r\n              data={this.props.export ? datamemeber : []}\r\n              columns={columns}\r\n              empty={true}\r\n              textEmpty=\"Data Laporan Hutang Kosong\"\r\n            />\r\n          </div>\r\n          <div className={this.props.export ? \"col-lg-12\" : \"col-lg-12 d-none\"}>\r\n            <label htmlFor=\"\">&nbsp;</label>\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-6\">\r\n                <button\r\n                  onClick={() => this.exportPdf()}\r\n                  className=\"btn btn-warning btn-block\"\r\n                >\r\n                  {\" \"}\r\n                  Export PDF{\" \"}\r\n                </button>\r\n              </div>\r\n              <div className=\"col-lg-6\">\r\n                <LaporanDataMemberExel data={this.props.datamember} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {this.props.isLoading ? (\r\n        <Loading \r\n        loading\r\n        background=\"rgba(0, 0, 0, 0.35)\"\r\n         loaderColor=\"rgba(94, 147, 117, 1)\" />\r\n      ) : null}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nHeadFormMember = reduxForm({\r\n  form: \"HeadFormMember\",\r\n  enableReinitialize: true,\r\n})(HeadFormMember);\r\n// export default connect()(HeadFormMember);\r\nexport default connect((state) => {\r\n  return {\r\n    initialValues: {\r\n      tgl_awal: getTglSystem(),\r\n      tgl_akhir: getTglSystem(),\r\n    },\r\n  };\r\n})(HeadFormMember);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  formatDate,\r\n  localStorageencryp,\r\n} from \"../../../components/helpers/function.jsx\";\r\nimport { ToastNotification } from \"../../../components/helpers/notification.jsx\";\r\nimport { Panel, PanelHeader } from \"../../../components/panel/panel.jsx\";\r\nimport { postDataNoTImeOut } from \"../../../config/axios.jsx\";\r\nimport HeadFormMember from \"./HeadFormMember.jsx\";\r\nimport * as moment from \"moment-timezone\";\r\n\r\nclass FormLaporanMember extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      export: false,\r\n      datamember: [],\r\n    };\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleSubmit(data) {\r\n    this.setState({\r\n      isLoading: true,\r\n    });\r\n    let data_post = {\r\n      tgl_awal: formatDate(\r\n        moment(new Date(data.tgl_awal)).format(\"YYYY-MM-DD\")\r\n      ),\r\n      tgl_akhir: formatDate(\r\n        moment(new Date(data.tgl_akhir)).format(\"YYYY-MM-DD\")\r\n      ),\r\n    };\r\n    postDataNoTImeOut(\"member/get/by-tanggal\", data_post)\r\n      .then((res) => {\r\n        if (res.data.length === 0) {\r\n          ToastNotification(\"info\", \"Data Yang Anda Cari Tidak Ada\");\r\n          this.setState({\r\n            export: false,\r\n            datamember: [],\r\n            isLoading: false,\r\n          });\r\n        } else {\r\n          ToastNotification(\"success\", \"Laporan Data Member Tersedia\");\r\n\r\n          localStorageencryp(\"tgl_laporan\", JSON.stringify(data_post));\r\n          this.setState({\r\n            export: true,\r\n            datamember: res.data,\r\n\r\n            isLoading: false,\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        ToastNotification(\"info\", \"Data Yang Anda Cari Tidak Ada\");\r\n        this.setState({\r\n          export: false,\r\n          datamember: [],\r\n          isLoading: false,\r\n        });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ol className=\"breadcrumb float-xl-right\">\r\n          <li className=\"breadcrumb-item\">\r\n            <Link to=\"#\">Laporan</Link>\r\n          </li>\r\n          <li className=\"breadcrumb-item active\">Laporan Member</li>\r\n        </ol>\r\n        <h1 className=\"page-header\">Laporan Member </h1>\r\n        <Panel>\r\n          <PanelHeader>Laporan Member</PanelHeader>\r\n          <br />\r\n          {/* Laporan Member */}\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-12\">\r\n                <HeadFormMember\r\n                  isLoading={this.state.isLoading}\r\n                  export={this.state.export}\r\n                  datamember={this.state.datamember}\r\n                  onSubmit={(data) => this.handleSubmit(data)}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <br />\r\n          {/* End Tambah Laporan Member  */}\r\n        </Panel>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FormLaporanMember;\r\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n/* global window, document, Blob */\n\n\nvar propTypes = {\n  table: _propTypes2.default.string.isRequired,\n  filename: _propTypes2.default.string.isRequired,\n  sheet: _propTypes2.default.string.isRequired,\n  id: _propTypes2.default.string,\n  className: _propTypes2.default.string,\n  buttonText: _propTypes2.default.string\n};\nvar defaultProps = {\n  id: 'button-download-as-xls',\n  className: 'button-download',\n  buttonText: 'Download'\n};\n\nvar ReactHTMLTableToExcel = function (_Component) {\n  _inherits(ReactHTMLTableToExcel, _Component);\n\n  function ReactHTMLTableToExcel(props) {\n    _classCallCheck(this, ReactHTMLTableToExcel);\n\n    var _this = _possibleConstructorReturn(this, (ReactHTMLTableToExcel.__proto__ || Object.getPrototypeOf(ReactHTMLTableToExcel)).call(this, props));\n\n    _this.handleDownload = _this.handleDownload.bind(_this);\n    return _this;\n  }\n\n  _createClass(ReactHTMLTableToExcel, [{\n    key: 'handleDownload',\n    value: function handleDownload() {\n      if (!document) {\n        if (process.env.NODE_ENV !== 'production') {\n          console.error('Failed to access document object');\n        }\n\n        return null;\n      }\n\n      if (document.getElementById(this.props.table).nodeType !== 1 || document.getElementById(this.props.table).nodeName !== 'TABLE') {\n        if (process.env.NODE_ENV !== 'production') {\n          console.error('Provided table property is not html table element');\n        }\n\n        return null;\n      }\n\n      var table = document.getElementById(this.props.table).outerHTML;\n      var sheet = String(this.props.sheet);\n      var filename = String(this.props.filename) + '.xls';\n      var uri = 'data:application/vnd.ms-excel;base64,';\n      var template = '<html xmlns:o=\"urn:schemas-microsoft-com:office:office\" xmlns:x=\"urn:schemas-mic' + 'rosoft-com:office:excel\" xmlns=\"http://www.w3.org/TR/REC-html40\"><head><meta cha' + 'rset=\"UTF-8\"><!--[if gte mso 9]><xml><x:ExcelWorkbook><x:ExcelWorksheets><x:Exce' + 'lWorksheet><x:Name>{worksheet}</x:Name><x:WorksheetOptions><x:DisplayGridlines/>' + '</x:WorksheetOptions></x:ExcelWorksheet></x:ExcelWorksheets></x:ExcelWorkbook></' + 'xml><![endif]--></head><body>{table}</body></html>';\n      var context = {\n        worksheet: sheet || 'Worksheet',\n        table: table\n      }; // If IE11\n\n      if (window.navigator.msSaveOrOpenBlob) {\n        var fileData = ['' + ('<html xmlns:o=\"urn:schemas-microsoft-com:office:office\" xmlns:x=\"urn:schemas-mic' + 'rosoft-com:office:excel\" xmlns=\"http://www.w3.org/TR/REC-html40\"><head><meta cha' + 'rset=\"UTF-8\"><!--[if gte mso 9]><xml><x:ExcelWorkbook><x:ExcelWorksheets><x:Exce' + 'lWorksheet><x:Name>{worksheet}</x:Name><x:WorksheetOptions><x:DisplayGridlines/>' + '</x:WorksheetOptions></x:ExcelWorksheet></x:ExcelWorksheets></x:ExcelWorkbook></' + 'xml><![endif]--></head><body>') + table + '</body></html>'];\n        var blobObject = new Blob(fileData);\n        document.getElementById('react-html-table-to-excel').click()(function () {\n          window.navigator.msSaveOrOpenBlob(blobObject, filename);\n        });\n        return true;\n      }\n\n      var element = window.document.createElement('a');\n      element.href = uri + ReactHTMLTableToExcel.base64(ReactHTMLTableToExcel.format(template, context));\n      element.download = filename;\n      document.body.appendChild(element);\n      element.click();\n      document.body.removeChild(element);\n      return true;\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      return _react2.default.createElement('button', {\n        id: this.props.id,\n        className: this.props.className,\n        type: 'button',\n        onClick: this.handleDownload\n      }, this.props.buttonText);\n    }\n  }], [{\n    key: 'base64',\n    value: function base64(s) {\n      return window.btoa(unescape(encodeURIComponent(s)));\n    }\n  }, {\n    key: 'format',\n    value: function format(s, c) {\n      return s.replace(/{(\\w+)}/g, function (m, p) {\n        return c[p];\n      });\n    }\n  }]);\n\n  return ReactHTMLTableToExcel;\n}(_react.Component);\n\nReactHTMLTableToExcel.propTypes = propTypes;\nReactHTMLTableToExcel.defaultProps = defaultProps;\nexports.default = ReactHTMLTableToExcel;"],"sourceRoot":""}