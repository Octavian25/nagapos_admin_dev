{"version":3,"sources":["pages/Barang/PenerimaanBaarang/HeadPenerimaanBarang.jsx","pages/Barang/PenerimaanBaarang/index.jsx"],"names":["HeadPenerimaanBarang","props","_this","Object","classCallCheck","this","_super","call","state","isLoading","isChecked","no_pengiriman","e","_this2","setState","getData2","then","res","change","data","no_terima","_this3","dispatch","GetDataGroup","getDataJenis","getEnpointGrosir","getUserdata","kode_toko","_this4","filter","list","no_bon","map","row","detail_barang","forEach","element","bruto","_this5","library","createElement","onSubmit","handleSubmit","autoComplete","onKeyPress","key","preventDefault","className","label","name","onChange","setValue","options","value","placeholder","component","ReanderSelect","readOnly","ReanderField","id","onClick","chnageValue","type","kode_group","DataGroup","data_group","DataJenis","kode_dept","normalize","Gramasi","React","Component","reduxForm","form","enableReinitialize","connect","datamaster","PenerimaanBaarang","columns","dataField","text","headerClasses","formatter","cell","csvExport","rowcontent","index","hapusdata","bind","assertThisInitialized","undefined","ToastNotification","jenis","bukan_barang_supliar","berat","hasil","uuidv4","no_suplier","kode_jenis","parseFloat","cek","getItem","length","findIndex","push","setItem","berhasi","Swal","fire","title","icon","position","cancelButtonText","showCancelButton","confirmButtonText","showConfirmButton","result","isConfirmed","JSON","parse","localStorage","splice","databarang","postDataNoTImeOut2","postDataGrosir","console","log","message","window","location","reload","catch","err","_err$response","response","to","PenerimaanBaarang_HeadPenerimaanBarang","keyField","exportCsv","pagination","empty","textEmpty","disabled","kirimbarang","Fragment","loading","background","loaderColor"],"mappings":"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","file":"static/js/86.58a06534.chunk.js","sourcesContent":["import { getUserdata } from \"../../../components/helpers/function\";\r\nimport {\r\n  React,\r\n  connect,\r\n  reduxForm,\r\n  ReanderField,\r\n  Field,\r\n  ReanderSelect,\r\n  getData2,\r\n  Gramasi,\r\n} from \"../../../components/helpers/library\";\r\nimport { getEnpointGrosir } from \"../../../config/axios\";\r\nimport { GetDataGroup, getDataJenis } from \"../TambahBarang/Module\";\r\n\r\nconst maptostate = (state) => {\r\n  return {\r\n    DataGroup: state.datamaster.GetDataGroup,\r\n    DataJenis: state.datamaster.getDataJenis,\r\n  };\r\n};\r\nclass HeadPenerimaanBarang extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      isChecked: true,\r\n      no_pengiriman: [],\r\n    };\r\n  }\r\n  chnageValue(e) {\r\n    this.setState({\r\n      isChecked: !this.state.isChecked,\r\n    });\r\n    if (this.state.isChecked === true) {\r\n      getData2(\"penerimaan-suplier/trx-number\").then((res) => {\r\n        this.props.change(\"no_pengiriman\", res.data.no_terima);\r\n      });\r\n      this.props.change('berat','')\r\n    } else {\r\n      this.props.change(\"no_pengiriman\", \"\");\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.dispatch(GetDataGroup());\r\n    this.props.dispatch(getDataJenis());\r\n    getEnpointGrosir(\r\n      \"kirim-stock/get/after-valid/\" + getUserdata().kode_toko\r\n    ).then((res) => {\r\n      // console.log(res);\r\n      this.setState({\r\n        no_pengiriman: [],\r\n      });\r\n      this.setState({\r\n        no_pengiriman: res.data,\r\n      });\r\n    });\r\n  }\r\n  setValue(e){\r\n    this.state.no_pengiriman.filter((list)=>list.no_bon === e).map((row)=>{\r\n      row.detail_barang.forEach(element => {\r\n        this.props.change('berat',element.bruto)\r\n      });\r\n      return []\r\n    })\r\n  }\r\n  render() {\r\n    return (\r\n      <form\r\n        onSubmit={this.props.handleSubmit}\r\n        autoComplete=\"off\"\r\n        onKeyPress={(e) => {\r\n          e.key === \"Enter\" && e.preventDefault();\r\n        }}\r\n      >\r\n        <div className=\"row\">\r\n          <div className=\"col-3\">\r\n            {this.state.isChecked ? (\r\n              <Field\r\n                label=\"No Pengiriman\"\r\n                name=\"no_pengiriman\"\r\n                onChange={(e)=>this.setValue(e)}\r\n                options={this.state.no_pengiriman.map((list) => {\r\n                  let row = {\r\n                    value: list.no_bon,\r\n                    name: list.no_bon,\r\n                  };\r\n                  return row;\r\n                })}\r\n                placeholder={\"Silahkan No Pengiriman\"}\r\n                component={ReanderSelect}\r\n              />\r\n            ) : (\r\n              <Field\r\n                label=\"No Pengiriman\"\r\n                name=\"no_pengiriman\"\r\n                readOnly\r\n                placeholder={\"Silahkan No Pengiriman\"}\r\n                component={ReanderField}\r\n              />\r\n            )}\r\n          </div>\r\n          <div className=\"col-3\">\r\n            <div className=\"form-group\">\r\n              <label>&nbsp;</label>\r\n              <br />\r\n              <label>\r\n                <Field\r\n                  id=\"bukan_barang_supliar\"\r\n                  name=\"bukan_barang_supliar\"\r\n                  component=\"input\"\r\n                  onClick={(e) => this.chnageValue(e)}\r\n                  type=\"checkbox\"\r\n                  value={false}\r\n                />{\" \"}\r\n                Bukan Suplier\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-4\">\r\n            <Field\r\n              label=\"Kategori\"\r\n              name=\"kode_group\"\r\n              placeholder={\"Silahkan Pilih kategori\"}\r\n              onChange={(e) =>\r\n                this.setState({\r\n                  kode_group: e,\r\n                })\r\n              }\r\n              options={this.props.DataGroup.map((data_group) => {\r\n                let data = {\r\n                  value: data_group.kode_group,\r\n                  name: data_group.kode_group,\r\n                };\r\n                return data || [];\r\n              })}\r\n              component={ReanderSelect}\r\n            />\r\n          </div>\r\n          <div className=\"col-3\">\r\n            <Field\r\n              label=\"jenis\"\r\n              name=\"jenis\"\r\n              placeholder={\"Silahkan Pilih Jenis\"}\r\n              options={this.props.DataJenis.filter(\r\n                (list) => list.kode_group === this.state.kode_group\r\n              ).map((list) => {\r\n                let data = {\r\n                  value: list.kode_dept,\r\n                  name: list.kode_dept,\r\n                };\r\n                return data;\r\n              })}\r\n              component={ReanderSelect}\r\n            />\r\n          </div>\r\n          <div className=\"col-3\">\r\n            <Field\r\n              label=\"Berat\"\r\n              name=\"berat\"\r\n              normalize={Gramasi}\r\n              readOnly={this.state.isChecked}\r\n              placeholder={\"Silahkan Pilih Berat\"}\r\n              component={ReanderField}\r\n            />\r\n          </div>\r\n          <div className=\"col-2\">\r\n            <button className=\"btn btn-primary btn-block mt-4\">\r\n              {\" \"}\r\n              <i className=\"fa fa-plus\"></i>{\" \"}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nHeadPenerimaanBarang = reduxForm({\r\n  form: \"HeadPenerimaanBarang\",\r\n  enableReinitialize: true,\r\n})(HeadPenerimaanBarang);\r\nexport default connect(maptostate)(HeadPenerimaanBarang);\r\n","import Swal from \"sweetalert2\";\r\nimport {\r\n  React,\r\n  connect,\r\n  Link,\r\n  reduxForm,\r\n  Panel,\r\n  PanelHeader,\r\n  PanelBody,\r\n  Tabel,\r\n  ToastNotification,\r\n  getItem,\r\n  setItem,\r\n  uuidv4,\r\n  Loading,\r\n} from \"../../../components/helpers/library\";\r\nimport { postDataGrosir, postDataNoTImeOut2 } from \"../../../config/axios\";\r\nimport HeadPenerimaanBarang from \"./HeadPenerimaanBarang\";\r\n\r\nclass PenerimaanBaarang extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      columns: [\r\n        {\r\n          dataField: \"no_suplier\",\r\n          text: \"No Pengiriman\",\r\n        },\r\n        {\r\n          dataField: \"kode_group\",\r\n          text: \"Kategori\",\r\n        },\r\n        {\r\n          dataField: \"kode_jenis\",\r\n          text: \"Jenis\",\r\n        },\r\n        {\r\n          dataField: \"berat\",\r\n          text: \"Berat\",\r\n          headerClasses: \"text-right\",\r\n          formatter: (cell) => {\r\n            return <div className=\"text-right\"> {cell} </div>;\r\n          },\r\n        },\r\n        {\r\n          dataField: \"action\",\r\n          text: \"Action\",\r\n          csvExport: false,\r\n          headerClasses: \"text-center\",\r\n          formatter: (rowcontent, row, index) => {\r\n            return (\r\n              <div className=\"row text-center\">\r\n                <div className=\"col-12\">\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => this.hapusdata(index)}\r\n                    className=\"btn btn-danger mr-3\"\r\n                  >\r\n                    <i className=\"fa fa-trash\"></i>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n      ],\r\n    };\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    // this.print = this.print.bind(this);\r\n  }\r\n\r\n  handleSubmit(data) {\r\n    if (data.kode_group === undefined) {\r\n      ToastNotification(\"info\", \"Kategori Harus Dipilih\");\r\n      return false;\r\n    }\r\n    if (data.jenis === undefined) {\r\n      ToastNotification(\"info\", \"Jenis Harus Dipilih\");\r\n      return false;\r\n    }\r\n    if (data.bukan_barang_supliar === true) {\r\n      if (data.berat === undefined) {\r\n        ToastNotification(\"info\", \"Berat Tida Boleh Kosong\");\r\n        return false;\r\n      }\r\n    }\r\n\r\n    let hasil = {\r\n      id: uuidv4(),\r\n      no_suplier: data.no_pengiriman,\r\n      kode_group: data.kode_group,\r\n      kode_jenis: data.jenis,\r\n      berat: data.berat === undefined ? 0 : parseFloat(data.berat),\r\n      type: data.bukan_barang_supliar === true ? \"OWNER\" : \"SUPPLIER\",\r\n    };\r\n\r\n    let cek =\r\n      getItem(\"data_terima_barang\").length === 0\r\n        ? []\r\n        : getItem(\"data_terima_barang\");\r\n    let hasil_cek = cek.findIndex((hasil) => hasil.no_suplier === data.no_pengiriman);\r\n    \r\n    if (hasil_cek === -1) {\r\n      cek.push(hasil);\r\n      setItem(\"data_terima_barang\", cek);\r\n      this.setState({\r\n        berhasi: true,\r\n      });\r\n    }else{\r\n      let cekkategori = cek.findIndex((hasil) => hasil.kode_group === data.kode_group);\r\n      if(cekkategori === -1){\r\n          cek.push(hasil);\r\n          setItem(\"data_terima_barang\", cek);\r\n          this.setState({\r\n            berhasi: true,\r\n          });\r\n      }else{\r\n        let cekjenis = cek.findIndex((hasil) => hasil.kode_jenis === data.jenis);\r\n        if(cekjenis === -1){\r\n          cek.push(hasil);\r\n          setItem(\"data_terima_barang\", cek);\r\n          this.setState({\r\n            berhasi: true,\r\n          });\r\n        }else{\r\n          ToastNotification('info','No Pengiriman Sudah Ada Ditable')\r\n        }\r\n      }\r\n    }\r\n  }\r\n  hapusdata(id) {\r\n    Swal.fire({\r\n      title: \"Anda Yakin !!\",\r\n      text: \"Ingin Menghapus Data Ini ?\",\r\n      icon: \"warning\",\r\n      position: \"top-center\",\r\n      cancelButtonText: \"Tidak\",\r\n      showCancelButton: true,\r\n      confirmButtonText: \"OK\",\r\n      showConfirmButton: true,\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        let data = JSON.parse(localStorage.getItem(\"data_terima_barang\"));\r\n        data.splice(id, 1);\r\n        setItem(\"data_terima_barang\", data);\r\n        this.setState({\r\n          berhasi: false,\r\n        });\r\n        // deleteLocalItemBarcode(\"data_barang_tmp\", id);\r\n        // this.props.dispatch(getListReturnSupplier());\r\n      }\r\n    });\r\n  }\r\n\r\n  kirimbarang() {\r\n    let data = getItem(\"data_terima_barang\");\r\n    this.setState({\r\n        isLoading : true\r\n    })\r\n    let databarang = [];\r\n    data.forEach((row) => {\r\n      let hasil = {\r\n        no_suplier: row.no_suplier,\r\n        kode_group: row.kode_group,\r\n        kode_jenis: row.kode_jenis,\r\n        berat: row.berat,\r\n        type: row.type,\r\n      };\r\n      databarang.push(hasil);\r\n    });\r\n\r\n    postDataNoTImeOut2(\"penerimaan-suplier\", databarang)\r\n      .then((res) => {\r\n        setItem('data_terima_barang',[])\r\n        this.setState({\r\n            isLoading : false\r\n        })\r\n        \r\n        postDataGrosir('kirim-stock/post/terima-stock/'+data.no_suplier).then((res)=>{\r\n          console.log(res);\r\n        })\r\n        ToastNotification(\"success\", res.data.message);\r\n\r\n        window.location.reload()\r\n      })\r\n\r\n      .catch((err) => {\r\n          console.log(err);\r\n        this.setState({\r\n            isLoading : false\r\n        })\r\n        ToastNotification(\"info\", err.response?.data.message);\r\n      });\r\n  }\r\n  componentDidMount() {}\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ol className=\"breadcrumb float-xl-right\">\r\n          <li className=\"breadcrumb-item\">\r\n            <Link to=\"#\">Barang</Link>\r\n          </li>\r\n          <li className=\"breadcrumb-item active\">Penerimaan Barang</li>\r\n        </ol>\r\n        <h1 className=\"page-header\">Penerimaan Barang </h1>\r\n        <Panel>\r\n          <PanelHeader>Penerimaan Barang</PanelHeader>\r\n          <PanelBody>\r\n            <HeadPenerimaanBarang\r\n              onSubmit={(data) => this.handleSubmit(data)}\r\n            />\r\n            <Tabel\r\n              keyField=\"id\"\r\n              exportCsv={false}\r\n              pagination=\"off\"\r\n              data={getItem(\"data_terima_barang\") || []}\r\n              columns={this.state.columns}\r\n              empty={true}\r\n              textEmpty=\"Data Barang Kosong\"\r\n            />\r\n            <div className=\"text-right\">\r\n              <button\r\n                className=\"btn btn-primary\"\r\n                disabled={this.state.isLoading}\r\n                onClick={() => this.kirimbarang()}\r\n              >\r\n                 {this.state.isLoading ? (\r\n                <>\r\n                  <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Sedang Menyimpan\r\n                </>\r\n              ) : (\r\n                \"Simpan\"\r\n              )}\r\n              </button>\r\n            </div>\r\n          </PanelBody>\r\n        </Panel>\r\n        {this.state.isLoading && (\r\n          <Loading\r\n            loading\r\n            background=\"rgba(0, 0, 0, 0.35)\"\r\n            loaderColor=\"rgba(94, 147, 117, 1)\"\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nPenerimaanBaarang = reduxForm({\r\n  form: \"PenerimaanBaarang\",\r\n  enableReinitialize: true,\r\n})(PenerimaanBaarang);\r\nexport default connect()(PenerimaanBaarang);\r\n"],"sourceRoot":""}