{"version":3,"sources":["pages/DataMaster/Berlian/BatuClarity/HeadBatuClarity.jsx","pages/DataMaster/Berlian/BatuClarity/index.jsx"],"names":["HeadBatuClarity","props","_this","Object","classCallCheck","this","_super","call","state","isLoading","handleSubmit","bind","assertThisInitialized","_this2","setTimeout","isEdit","document","getElementById","focus","_this3","library","createElement","onSubmit","autoComplete","onKeyPress","e","key","preventDefault","id","tabIndex","name","component","HiidenFiled","type","ReanderField","label","readOnly","placeholder","onBlur","setState","aktif","className","onClick","dispatch","hideModal","disabled","submitting","Fragment","loading","background","loaderColor","React","Component","reduxForm","form","enableReinitialize","validate","ValidasiMasterBerlian","connect","initialValues","datamaster","ShowDataModal","kode_clarity","nama_clarity","BatuClarity","columns","dataField","text","csvExport","headerClasses","formatter","rowcontent","row","dataEdit","_id","editData","hapusData","data","putDataNoTImeOut","then","res","_res$data","ToastNotification","message","getDataClarity","catch","err","_err$response","_err$response$data","response","postDataNoTImeOut","_res$data2","reset","_err$response2","_err$response2$data","showModal","Swal","fire","html","icon","position","cancelButtonText","showCancelButton","confirmButtonText","showConfirmButton","result","isConfirmed","deleteData","_err$response3","_err$response3$data","_this4","to","keyField","tambahData","handleClick","exportCsv","empty","textEmpty","size","title","content","BatuClarity_HeadBatuClarity"],"mappings":"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","file":"static/js/96.6cdb88db.chunk.js","sourcesContent":["import {\r\n    Field,\r\n    React,\r\n    connect,\r\n    reduxForm,\r\n    Loading,\r\n    ReanderField,\r\n    hideModal,\r\n    HiidenFiled,\r\n  } from \"../../../../components/helpers/library\";\r\nimport ValidasiMasterBerlian from \"../../../../Validasi/ValidasiMasterBerlian\";\r\n  \r\n  const maptostate = (state) => {\r\n    return {\r\n      initialValues: {\r\n        id: state.datamaster.ShowDataModal.id,\r\n        kode_clarity: state.datamaster.ShowDataModal.kode_clarity,\r\n        nama_clarity: state.datamaster.ShowDataModal.nama_clarity,\r\n      },\r\n    };\r\n  };\r\n  class HeadBatuClarity extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        isLoading: false,\r\n      };\r\n      this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n  \r\n    handleSubmit() {}\r\n  \r\n    componentDidMount() {\r\n      setTimeout(() => {\r\n        if (this.props.isEdit) {\r\n          document.getElementById(\"nama_clarity\").focus();\r\n        } else {\r\n          document.getElementById(\"kode_clarity\").focus();\r\n        }\r\n      }, 100);\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n        <form\r\n          onSubmit={this.props.handleSubmit}\r\n          autoComplete=\"off\"\r\n          onKeyPress={(e) => {\r\n            e.key === \"Enter\" && e.preventDefault();\r\n          }}\r\n        >\r\n\r\n          <Field\r\n            id=\"id\"\r\n            tabIndex=\"1\"\r\n            name=\"id\"\r\n            component={HiidenFiled}\r\n            type=\"hidden\"\r\n          />\r\n          <Field\r\n            id=\"kode_clarity\"\r\n            tabIndex=\"1\"\r\n            name=\"kode_clarity\"\r\n            component={ReanderField}\r\n            type=\"text\"\r\n            label=\"Kode Clarity\"\r\n            readOnly={this.props.isEdit}\r\n            placeholder=\"Masukan Kode Clarity\"\r\n          />\r\n          <Field\r\n            id=\"nama_clarity\"\r\n            tabIndex=\"2\"\r\n            name=\"nama_clarity\"\r\n            component={ReanderField}\r\n            type=\"text\"\r\n            label=\"Nama Clarity\"\r\n            placeholder=\"Masukan Nama Clarity\"\r\n            onBlur={() => this.setState({ aktif: true })}\r\n          />\r\n  \r\n          <div className=\"row\">\r\n            <div className=\"col-12 text-right\">\r\n              <button\r\n                className=\"btn btn-white\"\r\n                onClick={() => this.props.dispatch(hideModal())}\r\n                type=\"button\"\r\n                disabled={this.props.isLoading}\r\n              >\r\n                Batal\r\n              </button>\r\n              &nbsp;\r\n              <button\r\n                tabIndex=\"3\"\r\n                className={this.state.aktif ? \"btn btn-primary\" : \"btn btn-white\"}\r\n                disabled={this.props.submitting}\r\n                type=\"submit\"\r\n              >\r\n                {this.props.isLoading ? (\r\n                  <>\r\n                    <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Sedang\r\n                    Menyimpan\r\n                  </>\r\n                ) : (\r\n                  \"Simpan Data\"\r\n                )}\r\n              </button>\r\n            </div>\r\n          </div>\r\n          {this.props.isLoading ? (\r\n            <Loading\r\n              loading\r\n              background=\"rgba(0, 0, 0, 0.35)\"\r\n              loaderColor=\"rgba(94, 147, 117, 1)\"\r\n            />\r\n          ) : null}\r\n        </form>\r\n      );\r\n    }\r\n  }\r\n  \r\n  HeadBatuClarity = reduxForm({\r\n    form: \"HeadBatuClarity\",\r\n    enableReinitialize: true,\r\n    validate : ValidasiMasterBerlian\r\n  })(HeadBatuClarity);\r\n  export default connect(maptostate)(HeadBatuClarity);\r\n  ","\r\nimport { getDataClarity,ShowDataModal } from \"../../../../actions/datamaster_action\";\r\n\r\nimport {\r\n  React,\r\n  connect,\r\n  Link,\r\n  reduxForm,\r\n  Panel,\r\n  PanelHeader,\r\n  PanelBody,\r\n  ModalGlobal,\r\n  Tabel,\r\n  showModal,\r\n  hideModal,\r\n  ToastNotification,\r\n  postDataNoTImeOut,\r\n  Swal,\r\n  reset,\r\n  deleteData,\r\n  putDataNoTImeOut,\r\n} from \"../../../../components/helpers/library\";\r\nimport HeadBatuClarity from \"./HeadBatuClarity\";\r\nconst maptostate = (state)=>{\r\n  return {\r\n    data : state.datamaster.getDataClarity\r\n  }\r\n}\r\nclass BatuClarity extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      columns: [\r\n        {\r\n          dataField: \"kode_clarity\",\r\n          text: \"Kode Clarity\",\r\n        },\r\n        {\r\n          dataField: \"nama_clarity\",\r\n          text: \"Nama Clarity\",\r\n        },\r\n        {\r\n          dataField: \"action\",\r\n          text: \"Action\",\r\n          csvExport: false,\r\n          headerClasses: \"text-center\",\r\n          formatter: (rowcontent, row) => {\r\n            let dataEdit = {\r\n              id: row._id,\r\n              kode_clarity: row.kode_clarity,\r\n              nama_clarity: row.nama_clarity,\r\n            };\r\n            return (\r\n              <div className=\"row text-center\">\r\n                <div className=\"col-12\">\r\n                  <button\r\n                    onClick={() => this.editData(dataEdit)}\r\n                    className=\"btn btn-primary mr-3\"\r\n                  >\r\n                    <i className=\"fa fa-edit\"></i>\r\n                  </button>\r\n                  <button\r\n                    onClick={() => this.hapusData(row)}\r\n                    className=\"btn btn-danger\"\r\n                  >\r\n                    <i className=\"fa fa-trash\"></i>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n      ],\r\n    };\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    // this.print = this.print.bind(this);\r\n  }\r\n\r\n  handleSubmit(data) {\r\n    this.setState({\r\n      isLoading: true,\r\n    });\r\n    this.state.isEdit ?\r\n    putDataNoTImeOut('batu-clarity/'+data.id,data).then((res)=>{\r\n      ToastNotification(\"success\",res?.data?.message || \"Berhasil Menyimpan Data\")\r\n      this.setState({\r\n        isLoading: false,\r\n      });\r\n      this.props.dispatch(hideModal());\r\n      this.props.dispatch(getDataClarity())\r\n    }).catch((err)=>{\r\n      this.setState({\r\n        isLoading: false,\r\n      });\r\n      ToastNotification(\"info\",err.response?.data?.message || \"Terjadi Kesalhaan Saat Mengirim Data\")\r\n    })\r\n    :\r\n    postDataNoTImeOut('batu-clarity',data).then((res)=>{\r\n      ToastNotification(\"success\",res?.data?.message || \"Berhasil Menyimpan Data\")\r\n      this.setState({\r\n        isLoading: false,\r\n      });\r\n      this.props.dispatch(hideModal());\r\n      this.props.dispatch(getDataClarity())\r\n      this.props.dispatch(reset());\r\n    }).catch((err)=>{\r\n      this.setState({\r\n        isLoading: false,\r\n      });\r\n      ToastNotification(\"info\",err.response?.data?.message || \"Terjadi Kesalhaan Saat Mengirim Data\")\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.dispatch(getDataClarity())\r\n  }\r\n\r\n  editData(data) {\r\n    this.props.dispatch(showModal());\r\n    this.props.dispatch(ShowDataModal(data));\r\n    this.setState({\r\n      isEdit: true,\r\n    });\r\n  }\r\n  showModal() {\r\n    this.props.dispatch(showModal());\r\n    this.props.dispatch(ShowDataModal(true));\r\n    this.setState({\r\n      isEdit: false,\r\n    });\r\n  }\r\n\r\n  hapusData(row) {\r\n    Swal.fire({\r\n      // title: \"Anda Yakin !!\",\r\n      // text: \"Ingin Menghapus Data Ini ?\",\r\n      html:\r\n        \"Apakah Anda Yakin Ingin \" +\r\n        \"Menghapus \" +\r\n        \"<h1><b>Kode Clarity \" +\r\n        row.kode_clarity +\r\n        \"</b> ?</h1>\",\r\n      icon: \"warning\",\r\n      position: \"top-center\",\r\n      cancelButtonText: \"Tidak\",\r\n      showCancelButton: true,\r\n      confirmButtonText: \"OK\",\r\n      showConfirmButton: true,\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        deleteData('batu-clarity/'+row._id).then((res)=>{\r\n          ToastNotification('success',res.data.message || \"Berhasil Menghapus Data\")\r\n          this.setState({\r\n            isLoading: false,\r\n          });\r\n          this.props.dispatch(getDataClarity())\r\n        }).catch((err)=>{\r\n          ToastNotification('info',err.response?.data?.message || \"Gagal Menghapus Data\")\r\n          this.setState({\r\n            isLoading: false,\r\n          });\r\n        })\r\n      }\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ol className=\"breadcrumb float-xl-right\">\r\n          <li className=\"breadcrumb-item\">\r\n            <Link to=\"#\">Data Master</Link>\r\n          </li>\r\n          <li className=\"breadcrumb-item\">\r\n            <Link to=\"#\">Data Berlian</Link>\r\n          </li>\r\n          <li className=\"breadcrumb-item active\">Batu Clarity</li>\r\n        </ol>\r\n        <h1 className=\"page-header\">Batu Clarity </h1>\r\n        <Panel>\r\n          <PanelHeader>Batu Clarity</PanelHeader>\r\n          <PanelBody>\r\n            <Tabel\r\n              keyField=\"kode_clarity\"\r\n              tambahData={true}\r\n              handleClick={() => this.showModal()}\r\n              exportCsv={true}\r\n              data={this.props.data}\r\n              columns={this.state.columns}\r\n              empty={this.props.data}\r\n              textEmpty=\"Batu Clarity Kosong\"\r\n            />\r\n          </PanelBody>\r\n        </Panel>\r\n\r\n        <ModalGlobal\r\n          size=\"P\"\r\n          title={this.state.isEdit ? \"Edit Data Clarity\" : \"Tambah Data Clarity\"}\r\n          content={\r\n            <HeadBatuClarity\r\n              isLoading={this.state.isLoading}\r\n              isEdit={this.state.isEdit}\r\n              onSubmit={(data) => this.handleSubmit(data)}\r\n            />\r\n          }\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nBatuClarity = reduxForm({\r\n  form: \"BatuClarity\",\r\n  enableReinitialize: true,\r\n})(BatuClarity);\r\nexport default connect(maptostate)(BatuClarity);\r\n"],"sourceRoot":""}