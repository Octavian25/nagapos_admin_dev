{"version":3,"sources":["pages/Laporan/LaporanKeuangan/LaporanNonCash/pdf/CetakLaporanRekap.jsx","pages/Laporan/LaporanKeuangan/LaporanNonCash/pdf/CetakLaporanKeuanganDetail.jsx","pages/Laporan/LaporanKeuangan/LaporanNonCash/exel/LaporanKeaunagnRekap.jsx","pages/Laporan/LaporanKeuangan/LaporanNonCash/exel/LaporanKeuanganDetail.jsx","pages/Laporan/LaporanKeuangan/LaporanNonCash/HeadFormNonCash.jsx","pages/Laporan/LaporanKeuangan/LaporanNonCash/index.jsx","../node_modules/react-html-table-to-excel/index.js"],"names":["CetakLaporanRekap","data","arguments","length","undefined","doc","jsPDF","tableRows","footRows","tableColumn","finalY","total_masuk","total_keluar","setFontSize","text","getUserdata","nama_toko","jml_alamat","alamat_toko","slice","setProperties","title","concat","localStoragedecryp","JSON","parse","tanggal","forEach","item","index","content","styles","halign","rows","kategori","parseInt","jumlah_in","toLocaleString","jumlah_in_fee","push","footer","fillColor","textColor","printed","user_id","getToday","colSpan","fontStyle","autoTable","head","body","foot","startY","theme","rowPageBreak","margin","top","bodyStyles","fontSize","headStyles","tableLineColor","tableLineWidth","autoTableEndPosY","pages","internal","getNumberOfPages","pageWidth","pageSize","width","pageHeight","height","j","horizontalPos","verticalPos","setPage","align","string","output","x","window","open","document","write","CetakLaporanTerimaBarang","hasilakhir","deskripsi","hasilku","split","ia","fee","LaporanKeaunagnRekap","props","_this","Object","classCallCheck","this","_super","call","state","react_default","a","createElement","Fragment","react_html_table_to_excel_default","id","className","table","filename","sheet","buttonText","rowkey","style","display","textAlign","backgroundColor","color","map","key","Component","LaporanKeuanganDetail","e","hasil","_this2","verticalAlign","HeadFormNonCash","date","Date","columnsdetail","dataField","formatter","csvFormatter","footerAttrs","library","headerClasses","parseFloat","columnData","reduce","acc","columnsrekap","setStartDate","bind","assertThisInitialized","setLastDate","datalaporancash","CetakLaporanKeuanganDetail","change","setState","tgl_awal","tgl_akhir","onSubmit","handleSubmit","autoComplete","name","component","InputDate","label","type","selected","onChange","placeholder","ReanderSelect","options","value","isLoading","keyField","columns","istypeRekap","empty","textEmpty","export","htmlFor","onClick","exportPdfRekap","exportPdfDetail","exel_LaporanKeaunagnRekap","exel_LaporanKeuanganDetail","loading","background","loaderColor","reduxForm","form","enableReinitialize","connect","initialValues","getTglSystem","LaporanNonCash","hidden","datamember","data_post","formatDate","moment","format","getData","filter","then","res","ToastNotification","localStorageencryp","stringify","catch","err","console","log","_this3","to","LaporanNonCash_HeadFormNonCash","React","defineProperty","exports","_createClass","defineProperties","target","i","descriptor","enumerable","configurable","writable","Constructor","protoProps","staticProps","prototype","_react","__webpack_require__","_react2","_interopRequireDefault","_propTypes2","obj","__esModule","default","propTypes","isRequired","ReactHTMLTableToExcel","_Component","instance","TypeError","_classCallCheck","self","ReferenceError","_possibleConstructorReturn","__proto__","getPrototypeOf","handleDownload","subClass","superClass","create","constructor","setPrototypeOf","_inherits","getElementById","nodeType","nodeName","outerHTML","String","context","worksheet","navigator","msSaveOrOpenBlob","blobObject","Blob","click","element","href","base64","download","appendChild","removeChild","s","btoa","unescape","encodeURIComponent","c","replace","m","p","defaultProps"],"mappings":"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","file":"static/js/78.7ab633f2.chunk.js","sourcesContent":["import jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\nimport { getToday, getUserdata, localStoragedecryp } from \"../../../../../components/helpers/function\";\r\n// Date Fns is used to format the dates we receive\r\n\r\n// define a generatePDF function that accepts a tickets argument\r\nconst CetakLaporanRekap = (\r\n  data = \"\",\r\n  username = \"\",\r\n  tanggal = \"\",\r\n) => {\r\n  // initialize jsPDF\r\n  const doc = new jsPDF(\"l\", \"mm\", [297, 210]);\r\n  //   let data = JSON.parse(localStorage.getItem(\"tt_pengeluaran_barang\")) || [];\r\n  let tableRows = [];\r\n  let footRows = [];\r\n  let tableColumn = [];\r\n  let finalY = 30;\r\n  let total_masuk = 0;\r\n  let total_keluar = 0;\r\n\r\n\r\n  doc.setFontSize(15);\r\n  doc.text(\"LAPORAN KEUANGAN NON CASH REKAP\", 14, 15);\r\n  doc.setFontSize(20);\r\n  doc.text(getUserdata().nama_toko, 200, 15);\r\n  doc.setFontSize(8);\r\n  let jml_alamat = getUserdata().alamat_toko.length;\r\n  if (jml_alamat > 20) {\r\n    doc.text(getUserdata().alamat_toko.slice(0,48), 200, 20);\r\n  }\r\n  if (jml_alamat > 50) {\r\n    doc.text(getUserdata().alamat_toko.slice(48,90), 200, 25);\r\n  }\r\n  doc.setFontSize(10);\r\n  doc.setProperties({\r\n    title: \"LAPORAN KEUANGAN NON CASH REKAP\",\r\n  });\r\n  doc.text(\r\n    `Tanggal : ${\r\n      localStoragedecryp(\"tgl_laporan\").length === 0\r\n        ? null\r\n        : JSON.parse(localStoragedecryp(\"tgl_laporan\")).tanggal\r\n    }`,\r\n    14,\r\n    25\r\n  );\r\n  data.forEach((item, index) => {\r\n  tableColumn = [\r\n    [\r\n      {\r\n        content: `KATEGORI`,\r\n      },\r\n      {\r\n        content: `UANG MASUK`,\r\n        styles: {\r\n          halign: 'right'\r\n        },\r\n      },\r\n      {\r\n        content: `Uang Masuk + Fee`,\r\n        styles: {\r\n          halign: 'right'\r\n        },\r\n      },\r\n    ],\r\n  ];\r\n\r\n    // item.list_barang.forEach((barang, index) => {\r\n    \r\n    let rows = [\r\n      item.kategori,\r\n      {\r\n        content: parseInt(item.jumlah_in).toLocaleString(\"kr-KO\"),\r\n        styles: {\r\n          halign: 'right'\r\n        },\r\n      },\r\n      {\r\n        content: parseInt(item.jumlah_in_fee).toLocaleString(\"kr-KO\"),\r\n        styles: {\r\n          halign: 'right'\r\n        },\r\n      }\r\n    ];\r\n    total_masuk = total_masuk + item.jumlah_in;\r\n    total_keluar = total_keluar + item.jumlah_in_fee;\r\n    tableRows.push(rows);\r\n  });\r\n\r\n  let footer = [\r\n    {\r\n      content: ``,\r\n      styles: {\r\n        fillColor: \"#E8E5E5\",\r\n        textColor: \"#000\",\r\n      },\r\n    },\r\n   \r\n    {\r\n      content:  `${total_masuk.toLocaleString(\"kr-KO\")}`,\r\n      styles: {\r\n        fillColor: \"#E8E5E5\",\r\n        textColor: \"#000\",\r\n        halign: 'right'\r\n\r\n      },\r\n    },\r\n    {\r\n      content:  `${total_keluar.toLocaleString(\"kr-KO\")}`,\r\n      styles: {\r\n        fillColor: \"#E8E5E5\",\r\n        textColor: \"#000\",\r\n        halign: 'right'\r\n\r\n      },\r\n    },\r\n\r\n  ];\r\n  footRows.push(footer);\r\n  let printed = [\r\n    {\r\n      content: `Printed By ${JSON.parse(localStoragedecryp(\"userdata\")).user_id} / ${getToday()}`,\r\n      colSpan: 3,\r\n      styles: {\r\n        // lineWidth: 0.1,\r\n        fontStyle: \"italic\",\r\n        textColor: \"#000\",\r\n        // fillColor: \"#E8E5E5\"\r\n      },\r\n    },\r\n  ]\r\n  footRows.push(printed);\r\n  doc.autoTable({\r\n    head: tableColumn,\r\n    body: tableRows,\r\n    foot: footRows,\r\n    startY: finalY,\r\n    theme: \"plain\",\r\n    rowPageBreak: \"avoid\",\r\n    // pageBreak: \"avoid\",\r\n    margin: { top: 10 },\r\n    bodyStyles: {\r\n      // lineWidth: 0.02,\r\n      // lineColor: \"#000\",\r\n      fontSize: 8,\r\n    },\r\n    headStyles: {\r\n      fontSize: 8,\r\n      // lineWidth: 0.02,\r\n      // lineColor: \"#000\",\r\n      fillColor: \"#E8E5E5\",\r\n      textColor: \"#000\",\r\n    },\r\n    tableLineColor: [255, 255, 255],\r\n    tableLineWidth: 1,\r\n  });\r\n  finalY = doc.autoTableEndPosY() + 3;\r\n  tableRows = [];\r\n  footRows = [];\r\n  // const date = Date().split(\" \");\r\n  // we use a date string to generate our filename.\r\n  // const dateStr = date[2] + date[3] + date[4];\r\n  // ticket title. and margin-top + margin-left\r\n  // doc.text(`User                           : ${username}`, 14, finalY + 10);\r\n  // doc.text(`Cetak                        : ${getToday()}`, 14, finalY + 16);\r\n  const pages = doc.internal.getNumberOfPages();\r\n  const pageWidth = doc.internal.pageSize.width; //Optional\r\n  const pageHeight = doc.internal.pageSize.height; //Optional\r\n  doc.setFontSize(10); //Optional\r\n  for (let j = 1; j < pages + 1; j++) {\r\n    let horizontalPos = pageWidth / 2; //Can be fixed number\r\n    let verticalPos = pageHeight - 10; //Can be fixed number\r\n    doc.setPage(j);\r\n    doc.text(`${j} of ${pages}`, horizontalPos, verticalPos, {\r\n      align: \"center\",\r\n    });\r\n  }\r\n  // doc.autoPrint();\r\n  // doc.save(`LAPORAN KEUANGAN REKAP.pdf`);\r\n  var string = doc.output(\"datauristring\");\r\n  // var embed = \"<embed width='100%' height='100%' src='\" + string + \"'/>\";\r\n  var x = window.open();\r\n  x.document.open();\r\n  x.document.write(\r\n    \"<html><head><title>LAPORAN KEUANGAN NON CASH REKAP</title></head><body style='margin:0 !important'><embed width='100%' height='100%'  src=\" +\r\n      string +\r\n      \"></embed></body></html>\"\r\n  );\r\n  // x.document.write(embed);\r\n  // setInterval(() => {\r\n  //   x.close();\r\n  // }, 1000);\r\n};\r\n\r\nexport default CetakLaporanRekap;\r\n\r\n// import jsPDF from \"jspdf\";\r\n// import \"jspdf-autotable\";\r\n// import { getToday } from \"../../../../../components/helpers/function\";\r\n// // Date Fns is used to format the dates we receive\r\n\r\n// // define a generatePDF function that accepts a tickets argument\r\n// const CetakLaporanRekap = (\r\n//   data = \"\",\r\n//   username = \"\",\r\n//   tanggal = \"\",\r\n// ) => {\r\n//   const doc = new jsPDF('l');\r\n//   doc.setFontSize(15);\r\n//   doc.text(\"LAPORAN KEUANGAN REKAP\", 14, 15);\r\n//   doc.setFontSize(10);\r\n//   //row 1\r\n//   doc.text(`TANGGAL : ${tanggal}`, 14, 25);\r\n//   let tableRows = [];\r\n//   let finalY = 40;\r\n// //   let total = 0;\r\n//   let tableColumn = [\r\n//     \"NO\",\r\n//     \"UANG MASUK\",\r\n//     \"UANG KELUAR\",\r\n//   ];\r\n//   data.forEach((item, index) => {\r\n//     // item.list_barang.forEach((barang, index) => {\r\n//       let rows = [\r\n//         ++index,\r\n//         parseInt(item.jumlah_in).toLocaleString(\"kr-KO\"),\r\n//         parseInt(item.jumlah_out).toLocaleString(\"kr-KO\"),\r\n//     ];\r\n//     // total = index;\r\n//       tableRows.push(rows);\r\n//       // console.log(tableRows);\r\n//     // });\r\n\r\n//   });\r\n//   // let footer = [\r\n//   //   \"\",\r\n//   //   \"\",\r\n//   //   \"\",\r\n//   //   \"Total Barang : \",\r\n//   //   \"\" + parseFloat(total).toLocaleString(\"kr-KO\"),\r\n//   // ];\r\n//   // tableRows.push(footer);\r\n//   doc.autoTable(tableColumn, tableRows, {\r\n//     startY: 40\r\n//     // theme: \"\",\r\n//   });\r\n//    finalY = doc.lastAutoTable.finalY + 10;\r\n//    tableRows = [];\r\n\r\n// //   doc.text(`Total Barang\t: ${total}`, 14, finalY + 5);\r\n//   doc.text(`User\t             : ${username}`, 14, finalY + 10);\r\n//   doc.text(`Tgl Cetak             : ${getToday()}`, 14, finalY + 16);\r\n\r\n//   doc.autoPrint();\r\n//   doc.save(`Cetak Laporan Keuangan Rekap.pdf`);\r\n//   // var string = doc.output(\"datauristring\");\r\n//   // var embed = \"<div style='width: 100%; height: 100%'><embed style='margin:-10px; margin-bottom:-10px;min-height:100vh; margin-left:-10px' width='100%' height='100%' src='\" + string + \"'/></div>\";\r\n//   // var x = window.open();\r\n//   // x.document.open();\r\n//   // x.document.write(embed);\r\n//   // x.document.close();\r\n// };\r\n\r\n// export default CetakLaporanRekap;\r\n","import jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\nimport { getToday, getUserdata, localStoragedecryp } from \"../../../../../components/helpers/function\";\r\n// Date Fns is used to format the dates we receive\r\n\r\n// define a generatePDF function that accepts a tickets argument\r\nconst CetakLaporanTerimaBarang = (\r\n  data = \"\",\r\n  username = \"\",\r\n  tanggal = \"\",\r\n) => {\r\n  // initialize jsPDF\r\n  const doc = new jsPDF(\"l\", \"mm\", [297, 210]);\r\n  //   let data = JSON.parse(localStorage.getItem(\"tt_pengeluaran_barang\")) || [];\r\n  let tableRows = [];\r\n  let footRows = [];\r\n  let tableColumn = [];\r\n  let finalY = 30;\r\n  let total_masuk = 0;\r\n  let total_keluar = 0;\r\n\r\n\r\n  doc.setFontSize(15);\r\n  doc.text(\"LAPORAN KEUANGAN NON CASH DETAIL\", 14, 15);\r\n  doc.setFontSize(20);\r\n  doc.text(getUserdata().nama_toko, 200, 15);\r\n  doc.setFontSize(8);\r\n  let jml_alamat = getUserdata().alamat_toko.length;\r\n  if (jml_alamat > 20) {\r\n    doc.text(getUserdata().alamat_toko.slice(0,48), 200, 20);\r\n  }\r\n  if (jml_alamat > 50) {\r\n    doc.text(getUserdata().alamat_toko.slice(48,90), 200, 25);\r\n  }\r\n  doc.setFontSize(10);\r\n  doc.setProperties({\r\n    title: \"LAPORAN KEUANGAN NON CASH DETAIL\",\r\n  });\r\n  doc.text(\r\n    `Tanggal : ${\r\n      localStoragedecryp(\"tgl_laporan\").length === 0\r\n        ? null\r\n        : JSON.parse(localStoragedecryp(\"tgl_laporan\")).tanggal\r\n    }`,\r\n    14,\r\n    25\r\n  );\r\n  data.forEach((item, index) => {\r\n  tableColumn = [\r\n    [\r\n      // {\r\n      //   content: `NO`,\r\n      // },\r\n      {\r\n        content: `KATEGORI`,\r\n      },\r\n     \r\n      {\r\n        content: `DESKRIPSI`,\r\n      },\r\n      {\r\n        content: `FEE`,\r\n        styles: {\r\n          halign: 'right'\r\n        },\r\n      },\r\n      {\r\n        content: `UANG MASUK`,\r\n        styles: {\r\n          halign: 'right'\r\n        },\r\n      },\r\n      {\r\n        content: `Uang Masuk + Fee`,\r\n        styles: {\r\n          halign: 'right'\r\n        },\r\n      },\r\n    ],\r\n  ];\r\n\r\n    // item.list_barang.forEach((barang, index) => {\r\n    // console.log(item.deskripsi);\r\n    let hasilakhir = \"\";\r\n    if (item.deskripsi !== undefined) {\r\n      let dataku = item.deskripsi;\r\n      let hasilku = dataku.split('<br/>');\r\n      if (hasilku.length > 2) {\r\n        for (let ia = 1; ia < hasilku.length; ia++) {\r\n          if (hasilakhir === \"\") {\r\n            hasilakhir += hasilku[ia];\r\n          } else {\r\n          hasilakhir += `\\n` + hasilku[ia];\r\n          }\r\n        }\r\n      } else {\r\n        hasilakhir = hasilku[1]  \r\n      }\r\n      \r\n    }\r\n    let rows = [\r\n      // ++index,\r\n      item.kategori,\r\n      hasilakhir,\r\n      \r\n      {\r\n        content: item.fee + '%',\r\n        styles: {\r\n          halign: 'right'\r\n        },\r\n      },\r\n      {\r\n        content: parseInt(item.jumlah_in).toLocaleString(\"kr-KO\"),\r\n        styles: {\r\n          halign: 'right'\r\n        },\r\n      },\r\n      {\r\n        content: parseInt(item.jumlah_in_fee).toLocaleString(\"kr-KO\"),\r\n        styles: {\r\n          halign: 'right'\r\n        },\r\n      }\r\n    ];\r\n    total_masuk = total_masuk + item.jumlah_in;\r\n    total_keluar = total_keluar + item.jumlah_in_fee;\r\n    tableRows.push(rows);\r\n \r\n    \r\n  });\r\n  let footer = [\r\n    {\r\n      content: ``,\r\n      colSpan: 3,\r\n      styles: {\r\n        fillColor: \"#E8E5E5\",\r\n        textColor: \"#000\",\r\n      },\r\n    },\r\n    {\r\n      content:  `${total_masuk.toLocaleString(\"kr-KO\")}`,\r\n      styles: {\r\n        fillColor: \"#E8E5E5\",\r\n        textColor: \"#000\",\r\n        halign: 'right'\r\n\r\n      },\r\n    },\r\n    {\r\n      content:  `${total_keluar.toLocaleString(\"kr-KO\")}`,\r\n      styles: {\r\n        fillColor: \"#E8E5E5\",\r\n        textColor: \"#000\",\r\n        halign: 'right'\r\n\r\n      },\r\n    },\r\n  \r\n  ];\r\n  footRows.push(footer);\r\n\r\n  let printed = [\r\n    {\r\n      content: `Printed By ${JSON.parse(localStoragedecryp(\"userdata\")).user_id} / ${getToday()}`,\r\n      colSpan: 5,\r\n      styles: {\r\n        // lineWidth: 0.1,\r\n        fontStyle: \"italic\",\r\n        textColor: \"#000\",\r\n        // fillColor: \"#E8E5E5\"\r\n      },\r\n    },\r\n  ]\r\n  footRows.push(printed);\r\n  doc.autoTable({\r\n    head: tableColumn,\r\n    body: tableRows,\r\n    foot: footRows,\r\n    startY: finalY,\r\n    theme: \"plain\",\r\n    rowPageBreak: \"avoid\",\r\n    // pageBreak: \"avoid\",\r\n    margin: { top: 10 },\r\n    bodyStyles: {\r\n      // lineWidth: 0.02,\r\n      // lineColor: \"#000\",\r\n      fontSize: 8,\r\n    },\r\n    headStyles: {\r\n      fontSize: 8,\r\n      // lineWidth: 0.02,\r\n      // lineColor: \"#000\",\r\n      fillColor: \"#E8E5E5\",\r\n      textColor: \"#000\",\r\n    },\r\n    tableLineColor: [255, 255, 255],\r\n    tableLineWidth: 1,\r\n  });\r\n  finalY = doc.autoTableEndPosY() + 3;\r\n  tableRows = [];\r\n  footRows = [];\r\n  // const date = Date().split(\" \");\r\n  // we use a date string to generate our filename.\r\n  // const dateStr = date[2] + date[3] + date[4];\r\n  // ticket title. and margin-top + margin-left\r\n  // doc.text(`User                           : ${username}`, 14, finalY + 10);\r\n  // doc.text(`Cetak                        : ${getToday()}`, 14, finalY + 16);\r\n  const pages = doc.internal.getNumberOfPages();\r\n  const pageWidth = doc.internal.pageSize.width; //Optional\r\n  const pageHeight = doc.internal.pageSize.height; //Optional\r\n  doc.setFontSize(10); //Optional\r\n  for (let j = 1; j < pages + 1; j++) {\r\n    let horizontalPos = pageWidth / 2; //Can be fixed number\r\n    let verticalPos = pageHeight - 10; //Can be fixed number\r\n    doc.setPage(j);\r\n    doc.text(`${j} of ${pages}`, horizontalPos, verticalPos, {\r\n      align: \"center\",\r\n    });\r\n  }\r\n  // doc.autoPrint();\r\n  // doc.save(`LAPORAN KEUANGAN DETAIL.pdf`);\r\n  var string = doc.output(\"datauristring\");\r\n  // var embed = \"<embed width='100%' height='100%' src='\" + string + \"'/>\";\r\n  var x = window.open();\r\n  x.document.open();\r\n  x.document.write(\r\n    \"<html><head><title>LAPORAN KEUANGAN NON CASH DETAIL</title></head><body style='margin:0 !important'><embed width='100%' height='100%'  src=\" +\r\n      string +\r\n      \"></embed></body></html>\"\r\n  );\r\n  // x.document.write(embed);\r\n  // setInterval(() => {\r\n  //   x.close();\r\n  // }, 1000);\r\n};\r\n\r\nexport default CetakLaporanTerimaBarang;\r\n\r\n// import jsPDF from \"jspdf\";\r\n// import \"jspdf-autotable\";\r\n// import { getToday } from \"../../../../../components/helpers/function\";\r\n// // Date Fns is used to format the dates we receive\r\n\r\n// // define a generatePDF function that accepts a tickets argument\r\n// const CetakLaporanTerimaBarang = (\r\n//   data = \"\",\r\n//   username = \"\",\r\n//   tanggal = \"\",\r\n// ) => {\r\n//   const doc = new jsPDF('l');\r\n//   doc.setFontSize(15);\r\n//   doc.text(\"LAPORAN KEUANGAN DETAIL\", 14, 15);\r\n//   doc.setFontSize(10);\r\n//   //row 1\r\n//   doc.text(`TANGGAL : ${tanggal}`, 14, 25);\r\n//   let tableRows = [];\r\n//   let finalY = 40;\r\n//   // let total = 0;\r\n//   let tableColumn = [\r\n//     \"NO\",\r\n//     \"KATEGORI\",\r\n//     \"DESKRIPSI\",\r\n//     \"MASUK\",\r\n//     \"KELUAR\",\r\n//   ];\r\n//   data.forEach((item, index) => {\r\n//     // item.list_barang.forEach((barang, index) => {\r\n//       let rows = [\r\n//         ++index,\r\n//         item.kategori,\r\n//         item.deskripsi,\r\n//         item.jumlah_in,\r\n//         item.jumlah_out,\r\n//     ];\r\n//     // total = index;\r\n//       tableRows.push(rows);\r\n//       // console.log(tableRows);\r\n//     // });\r\n    \r\n   \r\n//   });\r\n//   // let footer = [\r\n//   //   \"\",\r\n//   //   \"\",\r\n//   //   \"\",\r\n//   //   \"Total Barang : \",\r\n//   //   \"\" + parseFloat(total).toLocaleString(\"kr-KO\"),\r\n//   // ];\r\n//   // tableRows.push(footer);\r\n//   doc.autoTable(tableColumn, tableRows, {\r\n//     startY: 40\r\n//     // theme: \"\",\r\n//   });\r\n//    finalY = doc.lastAutoTable.finalY + 10;\r\n//    tableRows = [];\r\n\r\n//   // doc.text(`Total Barang\t: ${total}`, 14, finalY + 5);\r\n//   doc.text(`User\t             : ${username}`, 14, finalY + 10);\r\n//   doc.text(`Tgl Cetak             : ${getToday()}`, 14, finalY + 16);\r\n\r\n//   doc.autoPrint();\r\n//   doc.save(`Laporan Keuangan Detail.pdf`);\r\n//   // var string = doc.output(\"datauristring\");\r\n//   // var embed = \"<div style='width: 100%; height: 100%'><embed style='margin:-10px; margin-bottom:-10px;min-height:100vh; margin-left:-10px' width='100%' height='100%' src='\" + string + \"'/></div>\";\r\n//   // var x = window.open();\r\n//   // x.document.open();\r\n//   // x.document.write(embed);\r\n//   // x.document.close();\r\n// };\r\n\r\n// export default CetakLaporanTerimaBarang;\r\n","import React, { Component } from \"react\";\r\nimport ReactHTMLTableToExcel from \"react-html-table-to-excel\";\r\nimport { getUserdata, localStoragedecryp } from \"../../../../../components/helpers/function\";\r\nclass LaporanKeaunagnRekap extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  render() {\r\n\r\n    let total_masuk = 0;\r\n    let total_keluar = 0;\r\n    this.props.data.forEach((item, index) => {\r\n        total_masuk = total_masuk + item.jumlah_in;\r\n        total_keluar = total_keluar + item.jumlah_in_fee;\r\n    });\r\n    return (\r\n      <>\r\n        <ReactHTMLTableToExcel\r\n          id=\"test-table-xls-button\"\r\n          className=\"btn btn-success btn-block\"\r\n          table=\"table-to-xls\"\r\n          filename=\"Laporan Keuangan Non Cash Rekap\"\r\n          sheet=\"Laporan Keuangan Non Cash Rekap\"\r\n          buttonText=\"Export Exel\"\r\n        />\r\n        <table rowkey=\"kode_member\" id=\"table-to-xls\" style={{ display: \"none\" }}>\r\n        <thead>\r\n          <tr>\r\n            <th colSpan=\"3\" style={{ textAlign: \"center\" }}>\r\n              {\" \"}\r\n              LAPORAN KEUANGAN NON CASH REKAP\r\n            </th>\r\n          </tr>\r\n          <tr>\r\n                <th colSpan=\"3\"> Tanggal  </th>\r\n          </tr>\r\n          <tr>\r\n                <th colSpan=\"3\"> {localStoragedecryp('tgl_laporan').length === 0 ? null : JSON.parse(localStoragedecryp('tgl_laporan')).tanggal } </th>\r\n          </tr>\r\n          <tr>\r\n              <th colSpan=\"3\"> TOKO :  {getUserdata().nama_toko} </th>\r\n            </tr>\r\n           \r\n            <tr>\r\n              <th colSpan=\"3\"> ALAMAT :  {getUserdata().alamat_toko} </th>\r\n            </tr>\r\n          <tr>\r\n              <th colSpan=\"3\"></th>\r\n            </tr>\r\n            <tr >\r\n                <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>Kategori</th>\r\n                <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\",textAlign: \"right\"  }}>Uang Masuk</th>\r\n                <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\",textAlign: \"right\"  }}>Uang Masuk + Fee</th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n          {this.props.data.map((item, index) => (\r\n            <tr key={index}>\r\n                <td> {item.kategori}</td>\r\n                <td style={{textAlign: \"right\" }}> {item.jumlah_in.toLocaleString(\"kr-KO\")}</td>\r\n                <td style={{textAlign: \"right\" }}> {item.jumlah_in_fee.toLocaleString(\"kr-KO\")}</td>\r\n            </tr>\r\n        ))}\r\n        </tbody>\r\n          <tfoot>\r\n          <tr>\r\n          <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }} > </th>\r\n            <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\", textAlign: \"right\" }}>{ total_masuk.toLocaleString(\"kr-KO\")} </th>\r\n            <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\",textAlign : \"right\" }}>{total_keluar.toLocaleString(\"kr-KO\")}</th>\r\n          </tr>\r\n          </tfoot>\r\n\r\n        </table>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default LaporanKeaunagnRekap;\r\n","import React, { Component } from \"react\";\r\nimport ReactHTMLTableToExcel from \"react-html-table-to-excel\";\r\nimport { getUserdata, localStoragedecryp } from \"../../../../../components/helpers/function\";\r\nclass LaporanKeuanganDetail extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  deskripsi(e){\r\n    let hasil = e.split('<br/>');\r\n    return e === undefined ? \"-\" : <> {hasil[1]} <br/> {hasil[2]} </>;\r\n  }\r\n  render() {\r\n    let total_masuk = 0;\r\n    let total_keluar = 0;\r\n        this.props.data.forEach((item, index) => {\r\n            total_masuk = total_masuk + item.jumlah_in;\r\n            total_keluar = total_keluar + item.jumlah_in_fee;\r\n        });\r\n   \r\n    return (\r\n      <>\r\n        <ReactHTMLTableToExcel\r\n          id=\"test-table-xls-button\"\r\n          className=\"btn btn-success btn-block\"\r\n          table=\"table-to-xls\"\r\n          filename=\"Laporan Keuangan Non Cash Detail\"\r\n          sheet=\"Laporan Keuangan Non Cash Detail\"\r\n          buttonText=\"Export Exel\"\r\n        />\r\n        <table rowkey=\"kode_member\" id=\"table-to-xls\" style={{ display: \"none\" }}>\r\n        <thead>\r\n          <tr>\r\n            <th colSpan=\"5\" style={{ textAlign: \"center\" }}>\r\n              {\" \"}\r\n              LAPORAN KEUANGAN NON CASH DETAIL{\" \"}\r\n            </th>\r\n          </tr>\r\n          <tr>\r\n                <th colSpan=\"5\"> Tanggal  </th>\r\n          </tr>\r\n          <tr>\r\n                <th colSpan=\"5\"> {localStoragedecryp('tgl_laporan').length === 0 ? null : JSON.parse(localStoragedecryp('tgl_laporan')).tanggal} </th>\r\n          </tr>\r\n          <tr>\r\n              <th colSpan=\"5\"> TOKO :  {getUserdata().nama_toko} </th>\r\n            </tr>\r\n           \r\n            <tr>\r\n              <th colSpan=\"5\"> ALAMAT :  {getUserdata().alamat_toko} </th>\r\n            </tr>\r\n          <tr>\r\n              <th colSpan=\"5\"></th>\r\n            </tr>\r\n            <tr >\r\n                <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>Kategori</th>\r\n                <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>Deskripsi</th>\r\n                <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\",textAlign: \"right\" }}>Fee</th>\r\n                <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\",textAlign: \"right\" }}>Uang Masuk</th>\r\n                <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\",textAlign: \"right\" }}>Uang Masuk + Fee</th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            \r\n          {this.props.data.map((item, index) => (\r\n            <tr key={index} style={{verticalAlign:\"top\" }}>\r\n                <td> {item.kategori}</td>\r\n                <td> { this.deskripsi(item.deskripsi || \"-\") }</td>\r\n                <td style={{textAlign: \"right\" }}> {item.fee}%</td>\r\n                <td style={{textAlign: \"right\" }}> {item.jumlah_in=== undefined  || item.jumlah_in === null ? 0 : item.jumlah_in.toLocaleString(\"kr-KO\")}</td>\r\n                <td style={{textAlign: \"right\" }}> {item.jumlah_in_fee === undefined || item.jumlah_in_fee === null ? 0 : item.jumlah_in_fee.toLocaleString(\"kr-KO\")}</td>\r\n            </tr>\r\n        ))}\r\n        </tbody>\r\n          <tfoot>\r\n          <tr>\r\n          <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }} > </th>\r\n            <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\", textAlign: \"right\" }} colSpan=\"2\"></th>\r\n            <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\", textAlign: \"right\" }}>{ total_masuk.toLocaleString(\"kr-KO\")} </th>\r\n            <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\",textAlign : \"right\" }}>{total_keluar.toLocaleString(\"kr-KO\")}</th>\r\n          </tr>\r\n          </tfoot>\r\n\r\n        </table>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default LaporanKeuanganDetail;\r\n","import {\r\n  React,\r\n  connect,\r\n  Component,\r\n  reduxForm,\r\n  Field,\r\n  InputDate,\r\n  Tabel,\r\n  Loading,\r\n  getTglSystem,\r\n  ReanderSelect,\r\n} from \"../../../../components/helpers/library\";\r\nimport CetakLaporanRekap from \"./pdf/CetakLaporanRekap\";\r\nimport CetakLaporanKeuanganDetail from \"./pdf/CetakLaporanKeuanganDetail\";\r\nimport LaporanKeaunagnRekap from \"./exel/LaporanKeaunagnRekap\";\r\nimport LaporanKeuanganDetail from \"./exel/LaporanKeuanganDetail\";\r\nclass HeadFormNonCash extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      date: new Date(),\r\n      columnsdetail: [\r\n        {\r\n          dataField: \"kategori\",\r\n          text: \"Kategori\",\r\n          formatter: (data) => {\r\n            return data === undefined ? \"-\" : data;\r\n          },\r\n          csvFormatter: (data) => {\r\n            return data === undefined ? \"-\" : data;\r\n          },\r\n          footerAttrs: {\r\n            colSpan: \"3\",\r\n          },\r\n          footer: \"Total\",\r\n        },\r\n        {\r\n          dataField: \"deskripsi\",\r\n          text: \"Deskripsi\",\r\n          formatter: (data) => {\r\n            // console.log(data);\r\n            let row = data || \"-\";\r\n            let hasil = row.split(\"<br/>\");\r\n            return data === undefined ? (\r\n              \"-\"\r\n            ) : (\r\n              <>\r\n                {\" \"}\r\n                {hasil[1]} <br /> {hasil[2]}{\" \"}\r\n              </>\r\n            );\r\n          },\r\n          csvFormatter: (data) => {\r\n            return data === undefined ? \"-\" : data;\r\n          },\r\n        },\r\n        {\r\n          dataField: \"fee\",\r\n          text: \"Fee\",\r\n          headerClasses: \"text-right\",\r\n          formatter: (data) => {\r\n            return <div className=\"text-right\"> {data === undefined ? \"-\" : data + '%'} </div>;\r\n          },\r\n        },\r\n        \r\n        {\r\n          dataField: \"jumlah_in\",\r\n          text: \"Uang Masuk\",\r\n          headerClasses: \"text-right\",\r\n          formatter: (data) => {\r\n            return (\r\n              <div className=\"text-right\">\r\n                {\" \"}\r\n                {data === undefined || null\r\n                  ? 0\r\n                  : parseFloat(data).toLocaleString(\"kr-KO\")}\r\n              </div>\r\n            );\r\n          },\r\n          csvFormatter: (data) => {\r\n            return (\r\n              <div className=\"text-right\">\r\n                {\" \"}\r\n                {data === undefined || null ? \"0\" : data}{\" \"}\r\n              </div>\r\n            );\r\n          },\r\n          footer: (columnData) => (\r\n            <div className=\"text-right\">\r\n              {\" \"}\r\n              {parseInt(\r\n                columnData.reduce((acc, item) => acc + item, 0)\r\n              ).toLocaleString(\"kr-KO\")}{\" \"}\r\n            </div>\r\n          ),\r\n        },\r\n        {\r\n          dataField: \"jumlah_in_fee\",\r\n          text: \"Uang Masuk + Fee\",\r\n          headerClasses: \"text-right\",\r\n          formatter: (data) => {\r\n            return (\r\n              <div className=\"text-right\">\r\n                {\" \"}\r\n                {data === undefined || null\r\n                  ? 0\r\n                  : parseFloat(data).toLocaleString(\"kr-KO\")}\r\n              </div>\r\n            );\r\n          },\r\n          csvFormatter: (data) => {\r\n            return (\r\n              <div className=\"text-right\">\r\n                {\" \"}\r\n                {data === undefined || null ? \"0\" : data}{\" \"}\r\n              </div>\r\n            );\r\n          },\r\n          footer: (columnData) => (\r\n            <div className=\"text-right\">\r\n              {\" \"}\r\n              {parseInt(\r\n                columnData.reduce((acc, item) => acc + item, 0)\r\n              ).toLocaleString(\"kr-KO\")}{\" \"}\r\n            </div>\r\n          ),\r\n        },\r\n      ],\r\n      columnsrekap: [\r\n        {\r\n          dataField: \"kategori\",\r\n          text: \"Kategori\",\r\n          footer: \"Total\",\r\n          formatter: (data) => {\r\n            return data === undefined ? \"-\" : data;\r\n          },\r\n        },\r\n        {\r\n          dataField: \"jumlah_in\",\r\n          text: \"Uang Masuk\",\r\n          headerClasses: \"text-right\",\r\n          formatter: (data) => {\r\n            return (\r\n              <div className=\"text-right\">\r\n                {\" \"}\r\n                {data === undefined || null\r\n                  ? 0\r\n                  : parseFloat(data).toLocaleString(\"kr-KO\")}\r\n              </div>\r\n            );\r\n          },\r\n          csvFormatter: (data) => {\r\n            return (\r\n              <div className=\"text-right\">\r\n                {\" \"}\r\n                {data === undefined || null ? \"0\" : data}{\" \"}\r\n              </div>\r\n            );\r\n          },\r\n          footer: (columnData) => (\r\n            <div className=\"text-right\">\r\n              {\" \"}\r\n              {parseInt(\r\n                columnData.reduce((acc, item) => acc + item, 0)\r\n              ).toLocaleString(\"kr-KO\")}{\" \"}\r\n            </div>\r\n          ),\r\n        },\r\n        {\r\n          dataField: \"jumlah_in_fee\",\r\n          text: \"Uang Masuk + Fee\",\r\n          headerClasses: \"text-right\",\r\n          formatter: (data) => {\r\n            return (\r\n              <div className=\"text-right\">\r\n                {\" \"}\r\n                {data === undefined || null\r\n                  ? 0\r\n                  : parseFloat(data).toLocaleString(\"kr-KO\")}\r\n              </div>\r\n            );\r\n          },\r\n          csvFormatter: (data) => {\r\n            return (\r\n              <div className=\"text-right\">\r\n                {\" \"}\r\n                {data === undefined || null ? \"0\" : data}{\" \"}\r\n              </div>\r\n            );\r\n          },\r\n          footer: (columnData) => (\r\n            <div className=\"text-right\">\r\n              {\" \"}\r\n              {parseInt(\r\n                columnData.reduce((acc, item) => acc + item, 0)\r\n              ).toLocaleString(\"kr-KO\")}{\" \"}\r\n            </div>\r\n          ),\r\n        },\r\n      ],\r\n    };\r\n    this.setStartDate = this.setStartDate.bind(this);\r\n    this.setLastDate = this.setLastDate.bind(this);\r\n  }\r\n\r\n  exportPdfRekap() {\r\n    CetakLaporanRekap(this.props.datalaporancash);\r\n  }\r\n  exportPdfDetail() {\r\n    CetakLaporanKeuanganDetail(this.props.datalaporancash);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.change(\"type\", \"REKAP\");\r\n    this.props.change(\"filter\", \"TRANSFER\");\r\n  }\r\n  setStartDate(date) {\r\n    this.setState({\r\n      tgl_awal: new Date(date),\r\n    });\r\n  }\r\n  setLastDate(date) {\r\n    this.setState({\r\n      tgl_akhir: new Date(date),\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.props.handleSubmit} autoComplete=\"off\">\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-4\">\r\n            <Field\r\n              name=\"tgl_awal\"\r\n              component={InputDate}\r\n              label=\"Tanggal Dari\"\r\n              type=\"text\"\r\n              selected={this.state.tgl_awal}\r\n              onChange={(date) => this.setStartDate(date)}\r\n              placeholder=\"Masukan Tanggal Dari\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"col-lg-4\">\r\n            <Field\r\n              name=\"type\"\r\n              component={ReanderSelect}\r\n              onChange={(e) => this.props.onChange(e)}\r\n              options={[\r\n                { value: \"DETAIL\", name: \"DETAIL\" },\r\n                { value: \"REKAP\", name: \"REKAP\" },\r\n              ]}\r\n              label=\"Type\"\r\n              placeholder=\"Pilih Type\"\r\n            />\r\n          </div>\r\n          <div className=\"col-lg-4\">\r\n            <Field\r\n              name=\"filter\"\r\n              component={ReanderSelect}\r\n              onChange={(e) => this.props.onChange(e)}\r\n              options={[\r\n                { value: \"TRANSFER\", name: \"TRANSFER\" },\r\n                { value: \"DEBET\", name: \"DEBET\" },\r\n                { value: \"CREDIT\", name: \"KREDIT\" },\r\n              ]}\r\n              label=\"Filter\"\r\n              placeholder=\"Filter Type Pembayaran\"\r\n            />\r\n          </div>\r\n          <div className=\"col-lg-12\">\r\n            <div className=\"text-right\">\r\n              <label>&nbsp;</label>\r\n              <button\r\n                type=\"submit\"\r\n                value=\"PDF\"\r\n                name=\"type_btn\"\r\n                className=\"btn btn-primary btn-block\"\r\n              >\r\n                {this.props.isLoading ? (\r\n                  <>\r\n                    <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Sedang\r\n                    Mencari\r\n                  </>\r\n                ) : (\r\n                  \"Cari Laporan\"\r\n                )}\r\n              </button>\r\n            </div>\r\n          </div>\r\n         \r\n          <div className=\"col-lg-12\">\r\n            <Tabel\r\n              keyField=\"kategori\"\r\n              data={this.props.datalaporancash}\r\n              columns={\r\n                this.props.istypeRekap\r\n                  ? this.state.columnsrekap\r\n                  : this.state.columnsdetail\r\n              }\r\n              empty={true}\r\n              textEmpty=\"Data Keuangan Non Cash Kosong\"\r\n            />\r\n          </div>\r\n          <div className={this.props.export ? \"col-lg-12\" : \"col-lg-12 d-none\"}>\r\n            <label htmlFor=\"\">&nbsp;</label>\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-6\">\r\n                {this.props.istypeRekap ? (\r\n                  <button\r\n                    onClick={() => this.exportPdfRekap()}\r\n                    className=\"btn btn-warning btn-block\"\r\n                  >\r\n                    {\" \"}\r\n                    Export Rekap PDF{\" \"}\r\n                  </button>\r\n                ) : (\r\n                  <button\r\n                    onClick={() => this.exportPdfDetail()}\r\n                    className=\"btn btn-warning btn-block\"\r\n                  >\r\n                    {\" \"}\r\n                    Export Detail PDF{\" \"}\r\n                  </button>\r\n                )}\r\n              </div>\r\n              <div className=\"col-lg-6\">\r\n                {this.props.istypeRekap ? (\r\n                  <LaporanKeaunagnRekap data={this.props.datalaporancash} />\r\n                  ) : (\r\n                  <LaporanKeuanganDetail data={this.props.datalaporancash} />\r\n                  )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {this.props.isLoading ? (\r\n          <Loading\r\n            loading\r\n            background=\"rgba(0, 0, 0, 0.35)\"\r\n            loaderColor=\"rgba(94, 147, 117, 1)\"\r\n          />\r\n        ) : null}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nHeadFormNonCash = reduxForm({\r\n  form: \"HeadFormNonCash\",\r\n  enableReinitialize: true,\r\n})(HeadFormNonCash);\r\n// export default connect()(HeadFormNonCash);\r\nexport default connect((state) => {\r\n  return {\r\n    initialValues: {\r\n      tgl_awal: getTglSystem(),\r\n    },\r\n  };\r\n})(HeadFormNonCash);\r\n","import {\r\n  React,\r\n  connect,\r\n  Link,\r\n  reduxForm,\r\n  Panel,\r\n  PanelHeader,\r\n  getData,\r\n  formatDate,\r\n  moment,\r\n  localStorageencryp,\r\n  ToastNotification,\r\n} from \"../../../../components/helpers/library\";\r\nimport HeadFormNonCash from \"./HeadFormNonCash\";\r\n\r\nclass LaporanNonCash extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      hidden: false,\r\n      istypeRekap: true,\r\n      tanggal: false,\r\n      datalaporancash: [],\r\n      datamember: [],\r\n      export: false\r\n    };\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleSubmit(data) {\r\n    this.setState({\r\n      isLoading: true,\r\n    })\r\n    let data_post = {\r\n      tanggal : formatDate(moment(new Date(data.tgl_awal)).format('YYYY-MM-DD')),\r\n    };\r\n    getData(`report-non-cash?type=${data.type}&tanggal=${data_post.tanggal}&jenis=${data.filter}`).then((res) => {\r\n      if (res.data.length === 0) {\r\n        ToastNotification(\"info\", \"Data Yang Di Cari Tidak Ada !!!\");\r\n        this.setState({\r\n          isLoading: false,\r\n        })\r\n      } else {\r\n        ToastNotification(\"success\", \"Laporan Keuangan Non Cash Tersedia\");\r\n        // console.log(res.data);\r\n        this.setState({\r\n          datalaporancash: res.data,\r\n          isLoading: false,\r\n          export: true\r\n        })\r\n      }\r\n      localStorageencryp('tgl_laporan',JSON.stringify(data_post))\r\n\r\n    }).catch((err) => {\r\n      ToastNotification(\"info\", \"Data Yang Di Cari Tidak Ada !!!\");\r\n      this.setState({\r\n        isLoading: false,\r\n        export : false\r\n        \r\n      })\r\n      console.log(err);\r\n    })\r\n  }\r\n  onChange(e) {\r\n    if (e.type === \"REKAP\") {\r\n      this.setState({ istypeRekap: true,datalaporancash : [] });\r\n    } else {\r\n      this.setState({ istypeRekap: false,datalaporancash : [] });\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ol className=\"breadcrumb float-xl-right\">\r\n          <li className=\"breadcrumb-item\">\r\n            <Link to=\"#\">Laporan Keuangan</Link>\r\n          </li>\r\n          <li className=\"breadcrumb-item active\">Laporan Keuangan Non Cash</li>\r\n        </ol>\r\n        <h1 className=\"page-header\">Laporan Keuangan Non Cash </h1>\r\n        <Panel>\r\n          <PanelHeader>Laporan Keuangan Non Cash</PanelHeader>\r\n          <br />\r\n          {/* Laporan Keuangan Non Cash */}\r\n          <div className=\"container\">\r\n            <HeadFormNonCash\r\n              onChange={(data) => this.onChange(data)}\r\n              isLoading={this.state.isLoading}\r\n              export={this.state.export}\r\n              datalaporancash={this.state.datalaporancash}\r\n              istypeRekap={this.state.istypeRekap}\r\n              onSubmit={(data) => this.handleSubmit(data)}\r\n            />\r\n          </div>\r\n          <br />\r\n          {/* End Tambah Laporan Keuangan Non Cash  */}\r\n        </Panel>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLaporanNonCash = reduxForm({\r\n  form: \"LaporanNonCash\",\r\n  enableReinitialize: true,\r\n})(LaporanNonCash);\r\nexport default connect()(LaporanNonCash);\r\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n/* global window, document, Blob */\n\n\nvar propTypes = {\n  table: _propTypes2.default.string.isRequired,\n  filename: _propTypes2.default.string.isRequired,\n  sheet: _propTypes2.default.string.isRequired,\n  id: _propTypes2.default.string,\n  className: _propTypes2.default.string,\n  buttonText: _propTypes2.default.string\n};\nvar defaultProps = {\n  id: 'button-download-as-xls',\n  className: 'button-download',\n  buttonText: 'Download'\n};\n\nvar ReactHTMLTableToExcel = function (_Component) {\n  _inherits(ReactHTMLTableToExcel, _Component);\n\n  function ReactHTMLTableToExcel(props) {\n    _classCallCheck(this, ReactHTMLTableToExcel);\n\n    var _this = _possibleConstructorReturn(this, (ReactHTMLTableToExcel.__proto__ || Object.getPrototypeOf(ReactHTMLTableToExcel)).call(this, props));\n\n    _this.handleDownload = _this.handleDownload.bind(_this);\n    return _this;\n  }\n\n  _createClass(ReactHTMLTableToExcel, [{\n    key: 'handleDownload',\n    value: function handleDownload() {\n      if (!document) {\n        if (process.env.NODE_ENV !== 'production') {\n          console.error('Failed to access document object');\n        }\n\n        return null;\n      }\n\n      if (document.getElementById(this.props.table).nodeType !== 1 || document.getElementById(this.props.table).nodeName !== 'TABLE') {\n        if (process.env.NODE_ENV !== 'production') {\n          console.error('Provided table property is not html table element');\n        }\n\n        return null;\n      }\n\n      var table = document.getElementById(this.props.table).outerHTML;\n      var sheet = String(this.props.sheet);\n      var filename = String(this.props.filename) + '.xls';\n      var uri = 'data:application/vnd.ms-excel;base64,';\n      var template = '<html xmlns:o=\"urn:schemas-microsoft-com:office:office\" xmlns:x=\"urn:schemas-mic' + 'rosoft-com:office:excel\" xmlns=\"http://www.w3.org/TR/REC-html40\"><head><meta cha' + 'rset=\"UTF-8\"><!--[if gte mso 9]><xml><x:ExcelWorkbook><x:ExcelWorksheets><x:Exce' + 'lWorksheet><x:Name>{worksheet}</x:Name><x:WorksheetOptions><x:DisplayGridlines/>' + '</x:WorksheetOptions></x:ExcelWorksheet></x:ExcelWorksheets></x:ExcelWorkbook></' + 'xml><![endif]--></head><body>{table}</body></html>';\n      var context = {\n        worksheet: sheet || 'Worksheet',\n        table: table\n      }; // If IE11\n\n      if (window.navigator.msSaveOrOpenBlob) {\n        var fileData = ['' + ('<html xmlns:o=\"urn:schemas-microsoft-com:office:office\" xmlns:x=\"urn:schemas-mic' + 'rosoft-com:office:excel\" xmlns=\"http://www.w3.org/TR/REC-html40\"><head><meta cha' + 'rset=\"UTF-8\"><!--[if gte mso 9]><xml><x:ExcelWorkbook><x:ExcelWorksheets><x:Exce' + 'lWorksheet><x:Name>{worksheet}</x:Name><x:WorksheetOptions><x:DisplayGridlines/>' + '</x:WorksheetOptions></x:ExcelWorksheet></x:ExcelWorksheets></x:ExcelWorkbook></' + 'xml><![endif]--></head><body>') + table + '</body></html>'];\n        var blobObject = new Blob(fileData);\n        document.getElementById('react-html-table-to-excel').click()(function () {\n          window.navigator.msSaveOrOpenBlob(blobObject, filename);\n        });\n        return true;\n      }\n\n      var element = window.document.createElement('a');\n      element.href = uri + ReactHTMLTableToExcel.base64(ReactHTMLTableToExcel.format(template, context));\n      element.download = filename;\n      document.body.appendChild(element);\n      element.click();\n      document.body.removeChild(element);\n      return true;\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      return _react2.default.createElement('button', {\n        id: this.props.id,\n        className: this.props.className,\n        type: 'button',\n        onClick: this.handleDownload\n      }, this.props.buttonText);\n    }\n  }], [{\n    key: 'base64',\n    value: function base64(s) {\n      return window.btoa(unescape(encodeURIComponent(s)));\n    }\n  }, {\n    key: 'format',\n    value: function format(s, c) {\n      return s.replace(/{(\\w+)}/g, function (m, p) {\n        return c[p];\n      });\n    }\n  }]);\n\n  return ReactHTMLTableToExcel;\n}(_react.Component);\n\nReactHTMLTableToExcel.propTypes = propTypes;\nReactHTMLTableToExcel.defaultProps = defaultProps;\nexports.default = ReactHTMLTableToExcel;"],"sourceRoot":""}