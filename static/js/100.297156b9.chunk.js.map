{"version":3,"sources":["pages/DataMaster/Berlian/BatuPolish/HeadBatuPolish.jsx","pages/DataMaster/Berlian/BatuPolish/index.jsx"],"names":["HeadBatuPolish","props","_this","Object","classCallCheck","this","_super","call","state","isLoading","handleSubmit","bind","assertThisInitialized","_this2","setTimeout","isEdit","document","getElementById","focus","_this3","library","createElement","onSubmit","autoComplete","onKeyPress","e","key","preventDefault","id","tabIndex","name","component","HiidenFiled","type","ReanderField","label","readOnly","placeholder","onBlur","setState","aktif","className","onClick","dispatch","hideModal","disabled","submitting","Fragment","loading","background","loaderColor","React","Component","reduxForm","form","enableReinitialize","connect","initialValues","datamaster","ShowDataModal","kode_polish","nama_polish","BatuPolish","columns","dataField","text","csvExport","headerClasses","formatter","rowcontent","row","dataEdit","_id","editData","hapusData","data","putDataNoTImeOut","then","res","ToastNotification","getDataPolish","reset","catch","err","postDataNoTImeOut","showModal","Swal","fire","html","icon","position","cancelButtonText","showCancelButton","confirmButtonText","showConfirmButton","result","isConfirmed","deleteData","message","_err$response","_err$response$data","response","_this4","to","keyField","tambahData","handleClick","exportCsv","empty","textEmpty","size","title","content","BatuPolish_HeadBatuPolish"],"mappings":"+JAoBMA,oDACJ,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAI,EAAAC,KAAAF,KAAMJ,IACDO,MAAQ,CACXC,WAAW,GAEbP,EAAKQ,aAAeR,EAAKQ,aAAaC,KAAlBR,OAAAS,EAAA,EAAAT,CAAAD,IALHA,0GAUC,IAAAW,EAAAR,KAClBS,WAAW,WACLD,EAAKZ,MAAMc,OACbC,SAASC,eAAe,eAAeC,QAEvCF,SAASC,eAAe,eAAeC,SAExC,sCAGI,IAAAC,EAAAd,KACP,OACEe,EAAA,EAAAC,cAAA,QACEC,SAAUjB,KAAKJ,MAAMS,aACrBa,aAAa,MACbC,WAAY,SAACC,GACD,UAAVA,EAAEC,KAAmBD,EAAEE,mBAGzBP,EAAA,EAAAC,cAACD,EAAA,EAAD,CACEQ,GAAG,KACHC,SAAS,IACTC,KAAK,KACLC,UAAWC,IACXC,KAAK,WAEPb,EAAA,EAAAC,cAACD,EAAA,EAAD,CACEQ,GAAG,cACHC,SAAS,IACTC,KAAK,cACLC,UAAWG,IACXD,KAAK,OACLE,MAAM,cACNC,SAAU/B,KAAKJ,MAAMc,OACrBsB,YAAY,wBAEdjB,EAAA,EAAAC,cAACD,EAAA,EAAD,CACEQ,GAAG,cACHC,SAAS,IACTC,KAAK,cACLC,UAAWG,IACXD,KAAK,OACLE,MAAM,cACNE,YAAY,sBACZC,OAAQ,kBAAMnB,EAAKoB,SAAS,CAAEC,OAAO,OAGvCpB,EAAA,EAAAC,cAAA,OAAKoB,UAAU,OACbrB,EAAA,EAAAC,cAAA,OAAKoB,UAAU,qBACbrB,EAAA,EAAAC,cAAA,UACEoB,UAAU,gBACVC,QAAS,kBAAMvB,EAAKlB,MAAM0C,SAASC,gBACnCX,KAAK,SACLY,SAAUxC,KAAKJ,MAAMQ,WAJvB,SADF,OAUEW,EAAA,EAAAC,cAAA,UACEQ,SAAS,IACTY,UAAWpC,KAAKG,MAAMgC,MAAQ,kBAAoB,gBAClDK,SAAUxC,KAAKJ,MAAM6C,WACrBb,KAAK,UAEJ5B,KAAKJ,MAAMQ,UACVW,EAAA,EAAAC,cAAAD,EAAA,EAAA2B,SAAA,KACE3B,EAAA,EAAAC,cAAA,KAAGoB,UAAU,2BADf,0BAKA,iBAKPpC,KAAKJ,MAAMQ,UACVW,EAAA,EAAAC,cAACD,EAAA,EAAD,CACE4B,SAAO,EACPC,WAAW,sBACXC,YAAY,0BAEZ,aA5FiBC,IAAMC,WAkGnCpD,EAAiBqD,YAAU,CACzBC,KAAM,iBACNC,oBAAoB,GAFLF,CAGdrD,GACYwD,kBA/GI,SAAChD,GAClB,MAAO,CACLiD,cAAe,CACb7B,GAAIpB,EAAMkD,WAAWC,cAAc/B,GACnCgC,YAAapD,EAAMkD,WAAWC,cAAcC,YAC5CC,YAAarD,EAAMkD,WAAWC,cAAcE,eA0GnCL,CAAoBxD,GC/F7B8D,oDACJ,SAAAA,EAAY7D,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAyD,IACjB5D,EAAAI,EAAAC,KAAAF,KAAMJ,IACDO,MAAQ,CACXC,WAAW,EACXsD,QAAS,CACP,CACEC,UAAW,cACXC,KAAM,eAER,CACED,UAAW,cACXC,KAAM,eAER,CACED,UAAW,SACXC,KAAM,SACNC,WAAW,EACXC,cAAe,cACfC,UAAW,SAACC,EAAYC,GACtB,IAAIC,EAAW,CACb3C,GAAI0C,EAAIE,IACRZ,YAAaU,EAAIV,YACjBC,YAAaS,EAAIT,aAEnB,OACEzC,EAAA,EAAAC,cAAA,OAAKoB,UAAU,mBACbrB,EAAA,EAAAC,cAAA,OAAKoB,UAAU,UACbrB,EAAA,EAAAC,cAAA,UACEqB,QAAS,kBAAMxC,EAAKuE,SAASF,IAC7B9B,UAAU,wBAEVrB,EAAA,EAAAC,cAAA,KAAGoB,UAAU,gBAEfrB,EAAA,EAAAC,cAAA,UACEqB,QAAS,kBAAMxC,EAAKwE,UAAUJ,IAC9B7B,UAAU,kBAEVrB,EAAA,EAAAC,cAAA,KAAGoB,UAAU,uBAS7BvC,EAAKQ,aAAeR,EAAKQ,aAAaC,KAAlBR,OAAAS,EAAA,EAAAT,CAAAD,IA9CHA,2DAkDNyE,GAAM,IAAA9D,EAAAR,KACjBA,KAAKkC,SAAS,CACZ9B,WAAW,IAEbJ,KAAKG,MAAMO,OACX6D,YAAiB,eAAeD,EAAK/C,GAAG+C,GAAME,KAAK,SAACC,GAClDjE,EAAK0B,SAAS,CACZ9B,WAAW,IAEbsE,YAAkB,UAAU,0BAC5BlE,EAAKZ,MAAM0C,SAASqC,gBACpBnE,EAAKZ,MAAM0C,SAASsC,eACpBpE,EAAKZ,MAAM0C,SAASC,iBACnBsC,MAAM,SAAAC,GACPtE,EAAK0B,SAAS,CACZ9B,WAAW,IAEbsE,YAAkB,OAAO,yBAI3BK,YAAkB,cAAcT,GAAME,KAAK,SAACC,GAC1CjE,EAAK0B,SAAS,CACZ9B,WAAW,IAEbsE,YAAkB,UAAU,0BAC5BlE,EAAKZ,MAAM0C,SAASqC,gBACpBnE,EAAKZ,MAAM0C,SAASsC,eACpBpE,EAAKZ,MAAM0C,SAASC,iBACnBsC,MAAM,SAAAC,GACPtE,EAAK0B,SAAS,CACZ9B,WAAW,IAEbsE,YAAkB,OAAO,qEAK3B1E,KAAKJ,MAAM0C,SAASqC,iDAGbL,GACPtE,KAAKJ,MAAM0C,SAAS0C,eACpBhF,KAAKJ,MAAM0C,SAASgB,aAAcgB,IAClCtE,KAAKkC,SAAS,CACZxB,QAAQ,wCAIVV,KAAKJ,MAAM0C,SAAS0C,eACpBhF,KAAKJ,MAAM0C,SAASgB,cAAc,IAClCtD,KAAKkC,SAAS,CACZxB,QAAQ,sCAIFuD,GAAK,IAAAnD,EAAAd,KACbiF,IAAKC,KAAK,CAGRC,KACE,wDAGAlB,EAAIV,YACJ,cACF6B,KAAM,UACNC,SAAU,aACVC,iBAAkB,QAClBC,kBAAkB,EAClBC,kBAAmB,KACnBC,mBAAmB,IAClBjB,KAAK,SAACkB,GACHA,EAAOC,aACTC,YAAW,eAAe3B,EAAIE,KAAKK,KAAK,SAACC,GACvCC,YAAkB,UAAUD,EAAIH,KAAKuB,SAAW,0BAChD/E,EAAKlB,MAAM0C,SAASqC,kBAClBE,MAAM,SAACC,GAAM,IAAAgB,EAAAC,EACfrB,YAAkB,QAAO,QAAAoB,EAAAhB,EAAIkB,gBAAJ,IAAAF,OAAA,UAAAC,EAAAD,EAAcxB,YAAd,IAAAyB,OAAA,EAAAA,EAAoBF,UAAW,4DAKvD,IAAAI,EAAAjG,KACP,OACEe,EAAA,EAAAC,cAAA,WACED,EAAA,EAAAC,cAAA,MAAIoB,UAAU,6BACZrB,EAAA,EAAAC,cAAA,MAAIoB,UAAU,mBACZrB,EAAA,EAAAC,cAACD,EAAA,EAAD,CAAMmF,GAAG,KAAT,gBAEFnF,EAAA,EAAAC,cAAA,MAAIoB,UAAU,mBACZrB,EAAA,EAAAC,cAACD,EAAA,EAAD,CAAMmF,GAAG,KAAT,iBAEFnF,EAAA,EAAAC,cAAA,MAAIoB,UAAU,0BAAd,gBAEFrB,EAAA,EAAAC,cAAA,MAAIoB,UAAU,eAAd,gBACArB,EAAA,EAAAC,cAACD,EAAA,EAAD,KACEA,EAAA,EAAAC,cAACD,EAAA,EAAD,oBACAA,EAAA,EAAAC,cAACD,EAAA,EAAD,KACEA,EAAA,EAAAC,cAACD,EAAA,EAAD,CACEoF,SAAS,cACTC,YAAY,EACZC,YAAa,kBAAMJ,EAAKjB,aACxBsB,WAAW,EACXhC,KAAMtE,KAAKJ,MAAM0E,KACjBZ,QAAS1D,KAAKG,MAAMuD,QACpB6C,MAAOvG,KAAKJ,MAAM0E,KAClBkC,UAAU,yBAKhBzF,EAAA,EAAAC,cAACD,EAAA,EAAD,CACE0F,KAAK,IACLC,MAAO1G,KAAKG,MAAMO,OAAS,mBAAqB,qBAChDiG,QACE5F,EAAA,EAAAC,cAAC4F,EAAD,CACExG,UAAWJ,KAAKG,MAAMC,UACtBM,OAAQV,KAAKG,MAAMO,OACnBO,SAAU,SAACqD,GAAD,OAAU2B,EAAK5F,aAAaiE,gBA1K3BxB,IAAMC,WAmL/BU,EAAaT,YAAU,CACrBC,KAAM,aACNC,oBAAoB,GAFTF,CAGVS,GACYN,sBA5LI,SAAChD,GAClB,MAAO,CACLmE,KAAOnE,EAAMkD,WAAWsB,gBA0LbxB,CAAoBM","file":"static/js/100.297156b9.chunk.js","sourcesContent":["import {\r\n  Field,\r\n  React,\r\n  connect,\r\n  reduxForm,\r\n  Loading,\r\n  ReanderField,\r\n  hideModal,\r\n  HiidenFiled,\r\n} from \"../../../../components/helpers/library\";\r\n\r\nconst maptostate = (state) => {\r\n  return {\r\n    initialValues: {\r\n      id: state.datamaster.ShowDataModal.id,\r\n      kode_polish: state.datamaster.ShowDataModal.kode_polish,\r\n      nama_polish: state.datamaster.ShowDataModal.nama_polish,\r\n    },\r\n  };\r\n};\r\nclass HeadBatuPolish extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n    };\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleSubmit() {}\r\n\r\n  componentDidMount() {\r\n    setTimeout(() => {\r\n      if (this.props.isEdit) {\r\n        document.getElementById(\"nama_polish\").focus();\r\n      } else {\r\n        document.getElementById(\"kode_polish\").focus();\r\n      }\r\n    }, 100);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form\r\n        onSubmit={this.props.handleSubmit}\r\n        autoComplete=\"off\"\r\n        onKeyPress={(e) => {\r\n          e.key === \"Enter\" && e.preventDefault();\r\n        }}\r\n      >\r\n        <Field\r\n          id=\"id\"\r\n          tabIndex=\"1\"\r\n          name=\"id\"\r\n          component={HiidenFiled}\r\n          type=\"hidden\"\r\n        />\r\n        <Field\r\n          id=\"kode_polish\"\r\n          tabIndex=\"1\"\r\n          name=\"kode_polish\"\r\n          component={ReanderField}\r\n          type=\"text\"\r\n          label=\"Kode Polish\"\r\n          readOnly={this.props.isEdit}\r\n          placeholder=\"Masukan Kode Polish\"\r\n        />\r\n        <Field\r\n          id=\"nama_polish\"\r\n          tabIndex=\"2\"\r\n          name=\"nama_polish\"\r\n          component={ReanderField}\r\n          type=\"text\"\r\n          label=\"Nama Polish\"\r\n          placeholder=\"Masukan Nama Polish\"\r\n          onBlur={() => this.setState({ aktif: true })}\r\n        />\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-12 text-right\">\r\n            <button\r\n              className=\"btn btn-white\"\r\n              onClick={() => this.props.dispatch(hideModal())}\r\n              type=\"button\"\r\n              disabled={this.props.isLoading}\r\n            >\r\n              Batal\r\n            </button>\r\n            &nbsp;\r\n            <button\r\n              tabIndex=\"3\"\r\n              className={this.state.aktif ? \"btn btn-primary\" : \"btn btn-white\"}\r\n              disabled={this.props.submitting}\r\n              type=\"submit\"\r\n            >\r\n              {this.props.isLoading ? (\r\n                <>\r\n                  <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Sedang\r\n                  Menyimpan\r\n                </>\r\n              ) : (\r\n                \"Simpan Data\"\r\n              )}\r\n            </button>\r\n          </div>\r\n        </div>\r\n        {this.props.isLoading ? (\r\n          <Loading\r\n            loading\r\n            background=\"rgba(0, 0, 0, 0.35)\"\r\n            loaderColor=\"rgba(94, 147, 117, 1)\"\r\n          />\r\n        ) : null}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nHeadBatuPolish = reduxForm({\r\n  form: \"HeadBatuPolish\",\r\n  enableReinitialize: true,\r\n})(HeadBatuPolish);\r\nexport default connect(maptostate)(HeadBatuPolish);\r\n","import { ShowDataModal ,getDataPolish} from \"../../../../actions/datamaster_action\";\r\n\r\nimport {\r\n  React,\r\n  connect,\r\n  Link,\r\n  reduxForm,\r\n  Panel,\r\n  PanelHeader,\r\n  PanelBody,\r\n  ModalGlobal,\r\n  Tabel,\r\n  showModal,\r\n  ToastNotification,\r\n  putDataNoTImeOut,\r\n  reset,\r\n  postDataNoTImeOut,\r\n  deleteData,\r\n  hideModal,\r\n  Swal,\r\n} from \"../../../../components/helpers/library\";\r\nimport HeadBatuPolish from \"./HeadBatuPolish\";\r\nconst maptostate = (state) => {\r\n  return {\r\n    data : state.datamaster.getDataPolish\r\n  }\r\n}\r\nclass BatuPolish extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      columns: [\r\n        {\r\n          dataField: \"kode_polish\",\r\n          text: \"Kode Polish\",\r\n        },\r\n        {\r\n          dataField: \"nama_polish\",\r\n          text: \"Nama Polish\",\r\n        },\r\n        {\r\n          dataField: \"action\",\r\n          text: \"Action\",\r\n          csvExport: false,\r\n          headerClasses: \"text-center\",\r\n          formatter: (rowcontent, row) => {\r\n            let dataEdit = {\r\n              id: row._id,\r\n              kode_polish: row.kode_polish,\r\n              nama_polish: row.nama_polish,\r\n            };\r\n            return (\r\n              <div className=\"row text-center\">\r\n                <div className=\"col-12\">\r\n                  <button\r\n                    onClick={() => this.editData(dataEdit)}\r\n                    className=\"btn btn-primary mr-3\"\r\n                  >\r\n                    <i className=\"fa fa-edit\"></i>\r\n                  </button>\r\n                  <button\r\n                    onClick={() => this.hapusData(row)}\r\n                    className=\"btn btn-danger\"\r\n                  >\r\n                    <i className=\"fa fa-trash\"></i>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n      ],\r\n    };\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    // this.print = this.print.bind(this);\r\n  }\r\n\r\n  handleSubmit(data) {\r\n    this.setState({\r\n      isLoading: true,\r\n    });\r\n    this.state.isEdit ?\r\n    putDataNoTImeOut(\"batu-polish/\"+data.id,data).then((res)=>{\r\n      this.setState({\r\n        isLoading: false,\r\n      });\r\n      ToastNotification('success','Data Berhasil Disimpan')\r\n      this.props.dispatch(getDataPolish())\r\n      this.props.dispatch(reset())\r\n      this.props.dispatch(hideModal());\r\n    }).catch(err=>{\r\n      this.setState({\r\n        isLoading: false,\r\n      });\r\n      ToastNotification('info','Data Gagal Disimpan')\r\n    })\r\n\r\n    :\r\n    postDataNoTImeOut(\"batu-polish\",data).then((res)=>{\r\n      this.setState({\r\n        isLoading: false,\r\n      });\r\n      ToastNotification('success','Data Berhasil Disimpan')\r\n      this.props.dispatch(getDataPolish())\r\n      this.props.dispatch(reset())\r\n      this.props.dispatch(hideModal());\r\n    }).catch(err=>{\r\n      this.setState({\r\n        isLoading: false,\r\n      });\r\n      ToastNotification('info','Data Gagal Disimpan')\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.dispatch(getDataPolish()); //\r\n  }\r\n\r\n  editData(data) {\r\n    this.props.dispatch(showModal());\r\n    this.props.dispatch(ShowDataModal(data));\r\n    this.setState({\r\n      isEdit: true,\r\n    });\r\n  }\r\n  showModal() {\r\n    this.props.dispatch(showModal());\r\n    this.props.dispatch(ShowDataModal(true));\r\n    this.setState({\r\n      isEdit: false,\r\n    });\r\n  }\r\n\r\n  hapusData(row) {\r\n    Swal.fire({\r\n      // title: \"Anda Yakin !!\",\r\n      // text: \"Ingin Menghapus Data Ini ?\",\r\n      html:\r\n        \"Apakah Anda Yakin Ingin \" +\r\n        \"Menghapus \" +\r\n        \"<h1><b>Kode Polish \" +\r\n        row.kode_polish +\r\n        \"</b> ?</h1>\",\r\n      icon: \"warning\",\r\n      position: \"top-center\",\r\n      cancelButtonText: \"Tidak\",\r\n      showCancelButton: true,\r\n      confirmButtonText: \"OK\",\r\n      showConfirmButton: true,\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        deleteData('batu-polish/'+row._id).then((res)=>{\r\n          ToastNotification('success',res.data.message || \"Data Berhasil Disimpan\")\r\n          this.props.dispatch(getDataPolish())\r\n         }).catch((err)=>{\r\n          ToastNotification('info',err.response?.data?.message || \"Data Gagal Disimpan\")\r\n        })\r\n      }\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ol className=\"breadcrumb float-xl-right\">\r\n          <li className=\"breadcrumb-item\">\r\n            <Link to=\"#\">Data Master</Link>\r\n          </li>\r\n          <li className=\"breadcrumb-item\">\r\n            <Link to=\"#\">Data Berlian</Link>\r\n          </li>\r\n          <li className=\"breadcrumb-item active\">Batu Polish</li>\r\n        </ol>\r\n        <h1 className=\"page-header\">Batu Polish </h1>\r\n        <Panel>\r\n          <PanelHeader>Batu Polish</PanelHeader>\r\n          <PanelBody>\r\n            <Tabel\r\n              keyField=\"kode_polish\"\r\n              tambahData={true}\r\n              handleClick={() => this.showModal()}\r\n              exportCsv={true}\r\n              data={this.props.data}\r\n              columns={this.state.columns}\r\n              empty={this.props.data}\r\n              textEmpty=\"Batu Polish Kosong\"\r\n            />\r\n          </PanelBody>\r\n        </Panel>\r\n\r\n        <ModalGlobal\r\n          size=\"P\"\r\n          title={this.state.isEdit ? \"Edit Data Polish\" : \"Tambah Data Polish\"}\r\n          content={\r\n            <HeadBatuPolish\r\n              isLoading={this.state.isLoading}\r\n              isEdit={this.state.isEdit}\r\n              onSubmit={(data) => this.handleSubmit(data)}\r\n            />\r\n          }\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nBatuPolish = reduxForm({\r\n  form: \"BatuPolish\",\r\n  enableReinitialize: true,\r\n})(BatuPolish);\r\nexport default connect(maptostate)(BatuPolish);\r\n"],"sourceRoot":""}