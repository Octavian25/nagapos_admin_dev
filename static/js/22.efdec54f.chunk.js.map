{"version":3,"sources":["pages/Laporan/LaporanPenjualan/PenjualanBayar/exel/ExportTransaksiPenjualanExel.jsx","pages/Laporan/LaporanPenjualan/PenjualanBayar/pdf/ExportTransaksiPenjualanBayar.jsx","pages/Laporan/LaporanPenjualan/PenjualanBayar/HeadLaporanBayar.jsx","../node_modules/react-html-table-to-excel/index.js","Validasi/LaporanKeuangan/ValidasiLaporanKeuangan.jsx"],"names":["ExportTransaksiPenjualanExel","props","_this","Object","classCallCheck","this","_super","call","state","berat","berat_atribut","total_barang","harga_jual","harga_atribut","harga_gram","harga_total","ongkos","data","forEach","barang","index","detail","item","stock_on_hand","length","react_default","a","createElement","Fragment","react_html_table_to_excel_default","id","className","table","filename","sheet","buttonText","style","display","colSpan","localStoragedecryp","JSON","parse","tgl_awal","tgl_akhir","getUserdata","nama_toko","alamat_toko","backgroundColor","color","border","map","_id","pembayaran","header_detail","jenis","parseInt","jumlah_rp","toLocaleString","row","no_faktur_jual","whiteSpace","nama_barang","nama_atribut","textAlign","list","reduce","b","Component","ExportTransaksiPenjualanBayar","tableColumn","arguments","undefined","doc","jsPDF","tableRows","finalY","total_baraang","total_berat","total_onkos","total_harga_jual","total_berat_atribut","total_harga_atribut","total_harga_gram","total_harga_total","setFontSize","text","jml_alamat","slice","setProperties","title","concat","content","tot_berat","tot_onkos","tot_harga_jual","tot_harga_gram","tot_berat_atribut","tot_harga_atribut","tot_harga_total","header","push","rows","toFixed","parseFloat","total","styles","halign","fillColor","textColor","footer","autoTable","head","body","startY","theme","rowPageBreak","margin","top","bodyStyles","lineWidth","lineColor","fontSize","headStyles","autoTableEndPosY","user_id","getToday","pages","internal","getNumberOfPages","pageWidth","pageSize","width","pageHeight","height","j","horizontalPos","verticalPos","setPage","align","string","output","x","window","open","document","write","HeadLaporanBayar","date","Date","setStartDate","bind","assertThisInitialized","setLastDate","LaporanPenjualanBayar","setState","_this2","databarang","element","columns","dataField","footerAttrs","cell","num","formatter","headerClasses","onSubmit","handleSubmit","autoComplete","Field","name","component","InputDate","label","type","selected","onChange","placeholder","value","isLoading","tabel","keyField","export","empty","textEmpty","onClick","exportPdf","exel_ExportTransaksiPenjualanExel","loading_default","loading","background","loaderColor","reduxForm","form","enableReinitialize","validate","ValidasiLaporanKeuangan","connect","initialValues","getTglSystem","defineProperty","exports","_createClass","defineProperties","target","i","descriptor","enumerable","configurable","writable","key","Constructor","protoProps","staticProps","prototype","_react","__webpack_require__","_react2","_interopRequireDefault","_propTypes2","obj","__esModule","default","propTypes","isRequired","ReactHTMLTableToExcel","_Component","instance","TypeError","_classCallCheck","self","ReferenceError","_possibleConstructorReturn","__proto__","getPrototypeOf","handleDownload","subClass","superClass","create","constructor","setPrototypeOf","_inherits","getElementById","nodeType","nodeName","outerHTML","String","context","worksheet","navigator","msSaveOrOpenBlob","blobObject","Blob","click","href","base64","format","download","appendChild","removeChild","s","btoa","unescape","encodeURIComponent","c","replace","m","p","defaultProps","event","errors","tanggal_awal","type_laporan"],"mappings":"6OAmQeA,oDA/Pb,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAI,EAAAC,KAAAF,KAAMJ,IACDO,MAAQ,GAFIN,uDAKjB,IACIO,EAAQ,EACRC,EAAgB,EAChBC,EAAe,EACfC,EAAa,EACbC,EAAgB,EAChBC,EAAa,EACbC,EAAc,EACdC,EAAS,EAcb,OAbAX,KAAKJ,MAAMgB,KAAKC,QAAQ,SAACC,EAAQC,GAC/BD,EAAOE,OAAOH,QAAQ,SAACI,EAAMF,GACKE,EAAKC,cACrCb,GAAgCY,EAAKZ,cACrCD,GAAgBa,EAAKb,MACrBG,GAA0BU,EAAKV,WAC/BI,GAAkBM,EAAKN,OACvBD,GAA4BO,EAAKP,YACjCD,GAA0BQ,EAAKR,WAC/BD,GAAgCS,EAAKT,gBAEvCF,GAA8BQ,EAAOE,OAAOG,SAG5CC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAACE,EAAAH,EAAD,CACEI,GAAG,wBACHC,UAAU,4BACVC,MAAM,eACNC,SAAS,oCACTC,MAAM,oCACNC,WAAW,gBAEbV,EAAAC,EAAAC,cAAA,SAAOG,GAAG,eAAeM,MAAO,CAAEC,QAAS,SACzCZ,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAIW,QAAQ,MAAZ,cAEFb,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAIW,QAAQ,MACT,IAC6C,IAA7CC,YAAmB,eAAef,OAC/B,KACAgB,KAAKC,MAAMF,YAAmB,gBAAgBG,SAC9C,QACAF,KAAKC,MAAMF,YAAmB,gBAC3BI,UAAW,MAGtBlB,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAIW,QAAQ,MAAZ,YAA2BM,cAAcC,UAAzC,MAGFpB,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAIW,QAAQ,MAAZ,cAA6BM,cAAcE,YAA3C,MAEFrB,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAIW,QAAQ,QAEdb,EAAAC,EAAAC,cAAA,UACMF,EAAAC,EAAAC,cAAA,MAAIS,MAAO,CAAEW,gBAAiB,UAAWC,MAAO,UAAUC,OAAQ,mBAAlE,aAGAxB,EAAAC,EAAAC,cAAA,MAAIS,MAAO,CAAEW,gBAAiB,UAAWC,MAAO,UAAUC,OAAQ,mBAAlE,eAGAxB,EAAAC,EAAAC,cAAA,MAAIS,MAAO,CAAEW,gBAAiB,UAAWC,MAAO,UAAUC,OAAQ,mBAAlE,SAGAxB,EAAAC,EAAAC,cAAA,MAAIS,MAAO,CAAEW,gBAAiB,UAAWC,MAAO,UAAUC,OAAQ,mBAAlE,UAGAxB,EAAAC,EAAAC,cAAA,MAAIS,MAAO,CAAEW,gBAAiB,UAAWC,MAAO,UAAUC,OAAQ,mBAAlE,cAGAxB,EAAAC,EAAAC,cAAA,MAAIS,MAAO,CAAEW,gBAAiB,UAAWC,MAAO,UAAUC,OAAQ,mBAAlE,gBAGAxB,EAAAC,EAAAC,cAAA,MAAIS,MAAO,CAAEW,gBAAiB,UAAWC,MAAO,UAAUC,OAAQ,mBAAlE,iBAGAxB,EAAAC,EAAAC,cAAA,MAAIS,MAAO,CAAEW,gBAAiB,UAAWC,MAAO,UAAUC,OAAQ,mBAAlE,iBAGAxB,EAAAC,EAAAC,cAAA,MAAIS,MAAO,CAAEW,gBAAiB,UAAWC,MAAO,UAAUC,OAAQ,mBAAlE,cAGAxB,EAAAC,EAAAC,cAAA,MAAIS,MAAO,CAAEW,gBAAiB,UAAWC,MAAO,UAAUC,OAAQ,mBAAlE,iBAKP5C,KAAKJ,MAAMgB,KAAKiC,IAAI,SAAC5B,EAAMF,GAAP,OACnBK,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAAA,aACGL,EAAK6B,IAAIC,WAAWF,IAAI,SAACG,EAAejC,GAAhB,OACvBK,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KAKEH,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAIW,QAAQ,KAAKF,MAAO,CAAEa,OAAQ,mBAC/BI,EAAcC,MAAO,IACrBC,SAASF,EAAcG,WAAWC,eACjC,cAOTnC,EAAKD,OAAO6B,IAAI,SAACQ,EAAKtC,GAAN,OACfK,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAIS,MAAO,CAAEa,OAAQ,mBAClBS,EAAIC,gBAEPlC,EAAAC,EAAAC,cAAA,MACES,MAAO,CAAEa,OAAQ,iBAAkBW,WAAY,WAE9CF,EAAIG,aAEPpC,EAAAC,EAAAC,cAAA,MACES,MAAO,CAAEa,OAAQ,mBAEhBS,EAAIjD,OAEPgB,EAAAC,EAAAC,cAAA,MACES,MAAO,CAAEa,OAAQ,mBAEhBS,EAAI1C,QAEPS,EAAAC,EAAAC,cAAA,MACES,MAAO,CAAEa,OAAQ,mBAEhBS,EAAI9C,YAEPa,EAAAC,EAAAC,cAAA,MACES,MAAO,CAAEa,OAAQ,mBAEhBS,EAAII,cAEPrC,EAAAC,EAAAC,cAAA,MACES,MAAO,CAAEa,OAAQ,mBAEhBS,EAAIhD,eAEPe,EAAAC,EAAAC,cAAA,MACES,MAAO,CAAEa,OAAQ,mBAEhBS,EAAI7C,eAEPY,EAAAC,EAAAC,cAAA,MACES,MAAO,CAAEa,OAAQ,mBAEhBS,EAAI5C,YAEPW,EAAAC,EAAAC,cAAA,MACES,MAAO,CAAEa,OAAQ,mBAEhBS,EAAI3C,iBAKbU,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAIW,QAAQ,IAAIF,MAAO,CAAEW,gBAAiB,UAAWC,MAAO,UAAWC,OAAQ,iBAAkBc,UAAW,WAA5G,kBACkBzC,EAAKD,OAAOG,QAE9BC,EAAAC,EAAAC,cAAA,MAAIS,MAAO,CAAEW,gBAAiB,UAAWC,MAAO,UAAWC,OAAQ,mBAChE,IACA3B,EAAKD,OACH6B,IAAI,SAACc,GAAD,OAAUA,EAAKvD,QACnBwD,OAAO,SAACvC,EAAGwC,GAAJ,OAAUxC,EAAIwC,GAAG,GAAI,KAEjCzC,EAAAC,EAAAC,cAAA,MAAIS,MAAO,CAAEW,gBAAiB,UAAWC,MAAO,UAAWC,OAAQ,mBAChE,IACA3B,EAAKD,OACH6B,IAAI,SAACc,GAAD,OAAUA,EAAKhD,SACnBiD,OAAO,SAACvC,EAAGwC,GAAJ,OAAUxC,EAAIwC,GAAG,GAAI,KAEjCzC,EAAAC,EAAAC,cAAA,MAAIS,MAAO,CAAEW,gBAAiB,UAAWC,MAAO,UAAWC,OAAQ,mBAChE,IACA3B,EAAKD,OACH6B,IAAI,SAACc,GAAD,OAAUA,EAAKpD,aACnBqD,OAAO,SAACvC,EAAGwC,GAAJ,OAAUxC,EAAIwC,GAAG,GAAI,KAEjCzC,EAAAC,EAAAC,cAAA,MAAIS,MAAO,CAAEW,gBAAiB,UAAWC,MAAO,UAAWC,OAAQ,mBAChE,KAEHxB,EAAAC,EAAAC,cAAA,MAAIS,MAAO,CAAEW,gBAAiB,UAAWC,MAAO,UAAWC,OAAQ,mBAChE,IACA3B,EAAKD,OACH6B,IAAI,SAACc,GAAD,OAAUA,EAAKtD,gBACnBuD,OAAO,SAACvC,EAAGwC,GAAJ,OAAUxC,EAAIwC,GAAG,GAAI,KAEjCzC,EAAAC,EAAAC,cAAA,MAAIS,MAAO,CAAEW,gBAAiB,UAAWC,MAAO,UAAWC,OAAQ,mBAChE,IACA3B,EAAKD,OACH6B,IAAI,SAACc,GAAD,OAAUA,EAAKnD,gBACnBoD,OAAO,SAACvC,EAAGwC,GAAJ,OAAUxC,EAAIwC,GAAG,GAAI,KAEjCzC,EAAAC,EAAAC,cAAA,MAAIS,MAAO,CAAEW,gBAAiB,UAAWC,MAAO,UAAWC,OAAQ,mBAChE,IACA3B,EAAKD,OACH6B,IAAI,SAACc,GAAD,OAAUA,EAAKlD,aACnBmD,OAAO,SAACvC,EAAGwC,GAAJ,OAAUxC,EAAIwC,GAAG,GAAI,KAEjCzC,EAAAC,EAAAC,cAAA,MAAIS,MAAO,CAAEW,gBAAiB,UAAWC,MAAO,UAAWC,OAAQ,mBAChE,IACA3B,EAAKD,OACH6B,IAAI,SAACc,GAAD,OAAUA,EAAKjD,cACnBkD,OAAO,SAACvC,EAAGwC,GAAJ,OAAUxC,EAAIwC,GAAG,GAAI,UAMzCzC,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAIW,QAAQ,IAAIF,MAAO,CAAEa,OAAQ,iBAAiBF,gBAAiB,UAAWC,MAAO,UAAUe,UAAU,WAAzG,wBACuBpD,GAEvBc,EAAAC,EAAAC,cAAA,MAAIS,MAAO,CAAEW,gBAAiB,UAAWC,MAAO,UAAUC,OAAQ,mBAC/DxC,GAEHgB,EAAAC,EAAAC,cAAA,MAAIS,MAAO,CAAEW,gBAAiB,UAAWC,MAAO,UAAUC,OAAQ,mBAC/DjC,GAEHS,EAAAC,EAAAC,cAAA,MAAIS,MAAO,CAAEW,gBAAiB,UAAWC,MAAO,UAAUC,OAAQ,mBAC/DrC,GAEHa,EAAAC,EAAAC,cAAA,MAAIS,MAAO,CAAEW,gBAAiB,UAAWC,MAAO,UAAUC,OAAQ,mBAAlE,KACAxB,EAAAC,EAAAC,cAAA,MAAIS,MAAO,CAAEW,gBAAiB,UAAWC,MAAO,UAAUC,OAAQ,mBAC/DvC,GAEHe,EAAAC,EAAAC,cAAA,MAAIS,MAAO,CAAEW,gBAAiB,UAAWC,MAAO,UAAUC,OAAQ,mBAC/DpC,GAEHY,EAAAC,EAAAC,cAAA,MAAIS,MAAO,CAAEW,gBAAiB,UAAWC,MAAO,UAAUC,OAAQ,mBAC/DnC,GAEHW,EAAAC,EAAAC,cAAA,MAAIS,MAAO,CAAEW,gBAAiB,UAAWC,MAAO,UAAUC,OAAQ,mBAC/DlC,aAxP4BoD,sBCkX5BC,UA3WuB,WAAe,IAK/CC,EALiCpD,EAAcqD,UAAA9C,OAAA,QAAA+C,IAAAD,UAAA,GAAAA,UAAA,GAAP,GAEtCE,EAAM,IAAIC,UAAM,IAAK,KAAM,CAAC,IAAK,MAEnCC,EAAY,GAEZC,EAAS,GAETC,EAAgB,EAChBC,EAAc,EACdC,EAAc,EACdC,EAAmB,EACnBC,EAAsB,EACtBC,EAAsB,EACtBC,EAAmB,EACnBC,EAAoB,EAExBX,EAAIY,YAAY,IAChBZ,EAAIa,KAAK,oCAAqC,GAAI,IAClDb,EAAIY,YAAY,IAChBZ,EAAIa,KAAKzC,cAAcC,UAAW,IAAK,IACvC2B,EAAIY,YAAY,GAChB,IAAIE,EAAa1C,cAAcE,YAAYtB,OACvC8D,EAAa,IACfd,EAAIa,KAAKzC,cAAcE,YAAYyC,MAAM,EAAE,IAAK,IAAK,IAEnDD,EAAa,IACfd,EAAIa,KAAKzC,cAAcE,YAAYyC,MAAM,GAAG,IAAK,IAAK,IAExDf,EAAIY,YAAY,IAChBZ,EAAIgB,cAAc,CAChBC,MAAO,sCAGTjB,EAAIa,KAAJ,aAAAK,OAEiD,IAA7CnD,YAAmB,eAAef,OAC9B,KACAgB,KAAKC,MAAMF,YAAmB,gBAAgBG,SAC9C,QACAF,KAAKC,MAAMF,YAAmB,gBAAgBI,WAEpD,GACA,IAEF0B,EAAc,CACZ,CACE,CACEsB,QAAO,aAET,CACEA,QAAO,eAET,CACEA,QAAO,SAET,CACEA,QAAO,UAET,CACEA,QAAO,cAET,CACEA,QAAO,gBAET,CACEA,QAAO,iBAET,CACEA,QAAO,iBAET,CACEA,QAAO,cAET,CACEA,QAAO,iBAIb1E,EAAKC,QAAQ,SAACI,EAAMF,GAClB,IAAIwE,EAAY,EACZC,EAAY,EACZC,EAAiB,EACjBC,EAAiB,EACjBC,EAAoB,EACpBC,EAAoB,EACpBC,EAAkB,EACtB5E,EAAK6B,IAAIC,WAAWlC,QAAQ,SAACmC,EAAejC,GAC1C,IAAI+E,EAAS,CACX,CACER,QAAO,GAAAD,OACLrC,EAAcC,MADT,OAAAoC,OAEDnC,SAASF,EAAcG,WAAWC,eAAe,SAFhD,KAGPnB,QAAS,KAGboC,EAAU0B,KAAKD,KAGjB7E,EAAKD,OAAOH,QAAQ,SAACI,EAAMF,GACzB,IAAIiF,EAAO,CACT/E,EAAKqC,eACLrC,EAAKuC,YACLvC,EAAKb,MAAM6F,QAAQ,GACnB/C,SAASjC,EAAKN,QAAQyC,eAAe,SACrCF,SAASjC,EAAKV,YAAY6C,eAAe,SACzCnC,EAAKwC,aACLxC,EAAKZ,cAAc4F,QAAQ,GAC3B/C,SAASjC,EAAKT,eAAe4C,eAAe,SAC5CF,SAASjC,EAAKR,YAAY2C,eAAe,SACzCF,SAASjC,EAAKP,aAAa0C,eAAe,UAG5CoB,GAA4B0B,WAAWjF,EAAKb,OAC5CqE,GAA4BvB,SAASjC,EAAKN,QAC1C+D,GAAsCxB,SAASjC,EAAKV,YACpDoE,GAA4CzB,SAASjC,EAAKZ,eAC1DuE,GAA4C1B,SAASjC,EAAKT,eAC1DqE,GAAsC3B,SAASjC,EAAKR,YACpDqE,GAAwC5B,SAASjC,EAAKP,aAEtD6E,GAAwBW,WAAWjF,EAAKb,OACxCoF,GAAwBtC,SAASjC,EAAKN,QACtC8E,GAAkCvC,SAASjC,EAAKV,YAChDoF,GAAwCzC,SAASjC,EAAKZ,eACtDuF,GAAwC1C,SAASjC,EAAKT,eACtDkF,GAAkCxC,SAASjC,EAAKR,YAChDoF,GAAoC3C,SAASjC,EAAKP,aAClD2D,EAAU0B,KAAKC,KAGjBzB,GAAgCtD,EAAKD,OAAOG,OAG5C,IAAIgF,EAAQ,CACV,CACEb,QAAO,kBAAAD,OAAoBpE,EAAKD,OAAOG,QACvCc,QAAS,EACTmE,OAAQ,CACNC,OAAQ,SACRC,UAAW,CAAC,EAAG,IAAK,IACpBC,UAAW,SAGf,CACEjB,QAAO,GAAAD,OAAKE,EAAUU,QAAQ,IAC9BG,OAAQ,CACNE,UAAW,CAAC,EAAG,IAAK,IACpBC,UAAW,SAGf,CACEjB,QAAO,GAAAD,OAAKnC,SAASsC,GAAWpC,eAAe,UAC/CgD,OAAQ,CACNE,UAAW,CAAC,EAAG,IAAK,IACpBC,UAAW,SAGf,CACEjB,QAAO,GAAAD,OAAKnC,SAASuC,GAAgBrC,eAAe,UACpDgD,OAAQ,CAENE,UAAW,CAAC,EAAG,IAAK,IACpBC,UAAW,SAGf,CACEjB,QAAO,GACPc,OAAQ,CAENE,UAAW,CAAC,EAAG,IAAK,IACpBC,UAAW,SAGf,CACEjB,QAAO,GAAAD,OAAKM,EAAkBM,QAAQ,IACtCG,OAAQ,CAENE,UAAW,CAAC,EAAG,IAAK,IACpBC,UAAW,SAGf,CACEjB,QAAO,GAAAD,OAAKnC,SAAS0C,GAAmBxC,eAAe,UACvDgD,OAAQ,CAENE,UAAW,CAAC,EAAG,IAAK,IACpBC,UAAW,SAGf,CACEjB,QAAO,GAAAD,OAAKnC,SAASwC,GAAgBtC,eAAe,UACpDgD,OAAQ,CAENE,UAAW,CAAC,EAAG,IAAK,IACpBC,UAAW,SAGf,CACEjB,QAAO,GAAAD,OAAKnC,SAAS2C,GAAiBzC,eAAe,UACrDgD,OAAQ,CAENE,UAAW,CAAC,EAAG,IAAK,IACpBC,UAAW,UAqBjBlC,EAAU0B,KAAKI,KAGjB,IAAIK,EAAS,CACX,CACElB,QAAO,kBAAAD,OAAoBd,GAC3BtC,QAAS,EACTmE,OAAQ,CACNC,OAAQ,SACRC,UAAW,CAAC,EAAG,IAAK,IACpBC,UAAW,SAGf,CACEjB,QAAO,GAAAD,OAAKb,EAAYyB,QAAQ,IAChCG,OAAQ,CACNE,UAAW,CAAC,EAAG,IAAK,IACpBC,UAAW,SAGf,CACEjB,QAAO,GAAAD,OAAKnC,SAASuB,GAAarB,eAAe,UACjDgD,OAAQ,CACNE,UAAW,CAAC,EAAG,IAAK,IACpBC,UAAW,SAGf,CACEjB,QAAO,GAAAD,OAAKnC,SAASwB,GAAkBtB,eAAe,UACtDgD,OAAQ,CACNE,UAAW,CAAC,EAAG,IAAK,IACpBC,UAAW,SAGf,CACEjB,QAAO,GACPc,OAAQ,CACNE,UAAW,CAAC,EAAG,IAAK,IACpBC,UAAW,SAGf,CACEjB,QAAO,GAAAD,OAAKV,EAAoBsB,QAAQ,IACxCG,OAAQ,CACNE,UAAW,CAAC,EAAG,IAAK,IACpBC,UAAW,SAIf,CACEjB,QAAO,GAAAD,OAAKnC,SAAS0B,GAAqBxB,eAAe,UACzDgD,OAAQ,CACNE,UAAW,CAAC,EAAG,IAAK,IACpBC,UAAW,SAGf,CACEjB,QAAO,GAAAD,OAAKnC,SAAS2B,GAAkBzB,eAAe,UACtDgD,OAAQ,CACNE,UAAW,CAAC,EAAG,IAAK,IACpBC,UAAW,SAGf,CACEjB,QAAO,GAAAD,OAAKnC,SAAS4B,GAAmB1B,eAAe,UACvDgD,OAAQ,CACNE,UAAW,CAAC,EAAG,IAAK,IACpBC,UAAW,UAIjBlC,EAAU0B,KAAKS,GACfrC,EAAIsC,UAAU,CACZC,KAAM1C,EACN2C,KAAMtC,EAENuC,OAAOtC,EACPuC,MAAO,QACPC,aAAc,QAEdC,OAAQ,CAAEC,IAAK,IACfC,WAAY,CACVC,UAAW,IACXC,UAAW,OACXC,SAAU,GAEZC,WAAY,CACVD,SAAU,EACVF,UAAW,IACXC,UAAW,OACXZ,UAAW,OACXD,UAAW,CAAC,EAAG,IAAK,OAGxBhC,EAASH,EAAImD,mBAAqB,EAClCjD,EAAY,GAMZF,EAAIa,KAAJ,oCAAAK,OAEIlD,KAAKC,MAAMF,YAAmB,aAAaqF,SAE7C,GACAjD,EAAS,IAEXH,EAAIa,KAAJ,kCAAAK,OAA2CmC,eAAc,GAAIlD,EAAS,IAEtE,IAAMmD,EAAQtD,EAAIuD,SAASC,mBACrBC,EAAYzD,EAAIuD,SAASG,SAASC,MAClCC,EAAa5D,EAAIuD,SAASG,SAASG,OACzC7D,EAAIY,YAAY,IAChB,IAAK,IAAIkD,EAAI,EAAGA,EAAIR,EAAQ,EAAGQ,IAAK,CAClC,IAAIC,EAAgBN,EAAY,EAC5BO,EAAcJ,EAAa,GAC/B5D,EAAIiE,QAAQH,GACZ9D,EAAIa,KAAJ,GAAAK,OAAY4C,EAAZ,QAAA5C,OAAoBoC,GAASS,EAAeC,EAAa,CACvDE,MAAO,WAKX,IAAIC,EAASnE,EAAIoE,OAAO,iBAEpBC,EAAIC,OAAOC,OACfF,EAAEG,SAASD,OACXF,EAAEG,SAASC,MACT,+IACEN,EACA,+CClWAO,oDACJ,SAAAA,EAAYjJ,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA6I,IACjBhJ,EAAAI,EAAAC,KAAAF,KAAMJ,IACDO,MAAQ,CACX2I,KAAM,IAAIC,MAEZlJ,EAAKmJ,aAAenJ,EAAKmJ,aAAaC,KAAlBnJ,OAAAoJ,EAAA,EAAApJ,CAAAD,IACpBA,EAAKsJ,YAActJ,EAAKsJ,YAAYF,KAAjBnJ,OAAAoJ,EAAA,EAAApJ,CAAAD,IANFA,0DASjBkE,EAA8B/D,KAAKJ,MAAMwJ,4DAE9BN,GACX9I,KAAKqJ,SAAS,CACZhH,SAAU,IAAI0G,KAAKD,yCAGXA,GACV9I,KAAKqJ,SAAS,CACZ/G,UAAW,IAAIyG,KAAKD,sCAGf,IAAAQ,EAAAtJ,KACHuJ,EAAa,GACbnJ,EAAQ,EACRO,EAAS,EACTJ,EAAa,EACbG,EAAc,EACdD,EAAa,EACjBT,KAAKJ,MAAMwJ,sBAAsBvI,QAAQ,SAAC2I,GACxCA,EAAQxI,OAAOH,QAAQ,SAACG,GACtBuI,EAAWxD,KAAK/E,GAChBZ,GAAgBY,EAAOZ,MACvBO,GAAkBK,EAAOL,OACzBJ,GAA0BS,EAAOT,WACjCG,GAA4BM,EAAON,YACnCD,GAA0BO,EAAOP,eAGrC,IAAMgJ,EAAU,CACd,CACEC,UAAW,iBACX1E,KAAM,QACN2E,YAAa,CACX1H,QAAS,KAEXuE,OAAQ,SAACoD,EAAMvG,EAAKwG,EAAK9I,GACvB,OAAOK,EAAAC,EAAAC,cAAA,6BAAqBiI,EAAWpI,OAAhC,OAGX,CACEuI,UAAW,eACX1E,KAAM,gBAER,CACE0E,UAAW,cACX1E,KAAM,eAER,CACE0E,UAAW,QACX1E,KAAM,QACNwB,OAAQ,SAACoD,EAAMvG,EAAKwG,EAAK9I,GACvB,OAAOK,EAAAC,EAAAC,cAAA,WAAMlB,EAAM6F,QAAQ,GAApB,MAET6D,UAAW,SAACF,GACV,OAAOA,EAAK3D,QAAQ,KAGxB,CACEyD,UAAW,SACX1E,KAAM,SACN+E,cAAe,aACfvD,OAAQ,SAACoD,EAAMvG,EAAKwG,EAAK9I,GACvB,OACEK,EAAAC,EAAAC,cAAA,OAAKI,UAAU,cAAcf,EAAOyC,eAAe,SAAnD,MAGJ0G,UAAW,SAACF,GACV,OACExI,EAAAC,EAAAC,cAAA,OAAKI,UAAU,cAAckI,EAAKxG,eAAe,YAIvD,CACEsG,UAAW,aACX1E,KAAM,aACN+E,cAAe,aACfvD,OAAQ,SAACoD,EAAMvG,EAAKwG,EAAK9I,GACvB,OACEK,EAAAC,EAAAC,cAAA,OAAKI,UAAU,cACZnB,EAAW6C,eAAe,SAAU,MAI3C0G,UAAW,SAACF,GACV,OACExI,EAAAC,EAAAC,cAAA,OAAKI,UAAU,cAAckI,EAAKxG,eAAe,YAIvD,CACEsG,UAAW,aACX1E,KAAM,aACN+E,cAAe,aACfvD,OAAQ,SAACoD,EAAMvG,EAAKwG,EAAK9I,GACvB,OACEK,EAAAC,EAAAC,cAAA,OAAKI,UAAU,cACZjB,EAAW2C,eAAe,SAAU,MAI3C0G,UAAW,SAACF,GACV,OACExI,EAAAC,EAAAC,cAAA,OAAKI,UAAU,cAAckI,EAAKxG,eAAe,YAIvD,CACEsG,UAAW,cACX1E,KAAM,cACN+E,cAAe,aACfvD,OAAQ,SAACoD,EAAMvG,EAAKwG,EAAK9I,GACvB,OACEK,EAAAC,EAAAC,cAAA,OAAKI,UAAU,cACZhB,EAAY0C,eAAe,SAAU,MAI5C0G,UAAW,SAACF,GACV,OACExI,EAAAC,EAAAC,cAAA,OAAKI,UAAU,cAAckI,EAAKxG,eAAe,aAKzD,OACEhC,EAAAC,EAAAC,cAAA,QAAM0I,SAAUhK,KAAKJ,MAAMqK,aAAcC,aAAa,OACpD9I,EAAAC,EAAAC,cAAA,OAAKI,UAAU,OACbN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,YACbN,EAAAC,EAAAC,cAAC6I,EAAA,EAAD,CACEC,KAAK,WACLC,UAAWC,IACXC,MAAM,eACNC,KAAK,OACLC,SAAUzK,KAAKG,MAAMkC,SACrBqI,SAAU,SAAC5B,GAAD,OAAUQ,EAAKN,aAAaF,IACtC6B,YAAY,0BAIhBvJ,EAAAC,EAAAC,cAAA,OAAKI,UAAU,YACbN,EAAAC,EAAAC,cAAC6I,EAAA,EAAD,CACEC,KAAK,YACLC,UAAWC,IACXE,KAAK,OACLC,SAAUzK,KAAKG,MAAMmC,UACrBoI,SAAU,SAAC5B,GAAD,OAAUQ,EAAKH,YAAYL,IACrCyB,MAAM,gBACNI,YAAY,2BAIhBvJ,EAAAC,EAAAC,cAAA,OAAKI,UAAU,YACbN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,cACbN,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,UACEkJ,KAAK,SACLI,MAAM,MACNR,KAAK,WACL1I,UAAU,6BAET1B,KAAKJ,MAAMiL,UACVzJ,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAAA,KAAGI,UAAU,2BADf,wBAKA,kBAKRN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACbN,EAAAC,EAAAC,cAACwJ,EAAA,EAAD,CACEC,SAAS,eACTnK,KAAMZ,KAAKJ,MAAMoL,OAASzB,EAAa,GACvCE,QAASA,EACTwB,OAAO,EACPC,UAAU,mDAId9J,EAAAC,EAAAC,cAAA,OAAKI,UAAW1B,KAAKJ,MAAMoL,OAAS,YAAc,oBAEhD5J,EAAAC,EAAAC,cAAA,OAAKI,UAAU,OACbN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,YACbN,EAAAC,EAAAC,cAAA,UACE6J,QAAS,kBAAM7B,EAAK8B,aACpB1J,UAAU,6BAET,IAJH,aAKa,MAGfN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,YACbN,EAAAC,EAAAC,cAAC+J,EAAD,CACEzK,KAAMZ,KAAKJ,MAAMwJ,4BAM1BpJ,KAAKJ,MAAMiL,UACZzJ,EAAAC,EAAAC,cAACgK,EAAAjK,EAAD,CACAkK,SAAO,EACPC,WAAW,sBACVC,YAAY,0BACX,aAzNqB3H,aA+N/B+E,EAAmB6C,YAAU,CAC3BC,KAAM,mBACNC,oBAAoB,EACpBC,SAAUC,KAHOJ,CAIhB7C,GAEYkD,sBAAQ,SAAC5L,GACtB,MAAO,CACL6L,cAAe,CACb3J,SAAU4J,cACV3J,UAAW2J,iBAJFF,CAOZlD,qCCrPH/I,OAAAoM,eAAAC,EAAA,cACAvB,OAAA,IAGA,IAAAwB,EAAA,WACA,SAAAC,EAAAC,EAAA1M,GACA,QAAA2M,EAAA,EAAmBA,EAAA3M,EAAAuB,OAAkBoL,IAAA,CACrC,IAAAC,EAAA5M,EAAA2M,GACAC,EAAAC,WAAAD,EAAAC,aAAA,EACAD,EAAAE,cAAA,EACA,UAAAF,MAAAG,UAAA,GACA7M,OAAAoM,eAAAI,EAAAE,EAAAI,IAAAJ,IAIA,gBAAAK,EAAAC,EAAAC,GAGA,OAFAD,GAAAT,EAAAQ,EAAAG,UAAAF,GACAC,GAAAV,EAAAQ,EAAAE,GACAF,GAdA,GAkBAI,EAAaC,EAAQ,GAErBC,EAAAC,EAAAH,GAIAI,EAAAD,EAFiBF,EAAQ,IAIzB,SAAAE,EAAAE,GACA,OAAAA,KAAAC,WAAAD,EAAA,CACAE,QAAAF,GAoCA,IAAAG,EAAA,CACA9L,MAAA0L,EAAAG,QAAAlF,OAAAoF,WACA9L,SAAAyL,EAAAG,QAAAlF,OAAAoF,WACA7L,MAAAwL,EAAAG,QAAAlF,OAAAoF,WACAjM,GAAA4L,EAAAG,QAAAlF,OACA5G,UAAA2L,EAAAG,QAAAlF,OACAxG,WAAAuL,EAAAG,QAAAlF,QAQAqF,EAAA,SAAAC,GAGA,SAAAD,EAAA/N,IAjDA,SAAAiO,EAAAhB,GACA,KAAAgB,aAAAhB,GACA,UAAAiB,UAAA,qCAgDAC,CAAA/N,KAAA2N,GAEA,IAAA9N,EA9CA,SAAAmO,EAAA9N,GACA,IAAA8N,EACA,UAAAC,eAAA,6DAGA,OAAA/N,GAAA,kBAAAA,GAAA,oBAAAA,EAAA8N,EAAA9N,EAyCAgO,CAAAlO,MAAA2N,EAAAQ,WAAArO,OAAAsO,eAAAT,IAAAzN,KAAAF,KAAAJ,IAGA,OADAC,EAAAwO,eAAAxO,EAAAwO,eAAApF,KAAApJ,GACAA,EAyEA,OAlHA,SAAAyO,EAAAC,GACA,uBAAAA,GAAA,OAAAA,EACA,UAAAT,UAAA,kEAAAS,GAGAD,EAAAtB,UAAAlN,OAAA0O,OAAAD,KAAAvB,UAAA,CACAyB,YAAA,CACA7D,MAAA0D,EACA7B,YAAA,EACAE,UAAA,EACAD,cAAA,KAGA6B,IAAAzO,OAAA4O,eAAA5O,OAAA4O,eAAAJ,EAAAC,GAAAD,EAAAH,UAAAI,GAoBAI,CAAAhB,EAkFCV,EAAAnJ,WAvEDsI,EAAAuB,EAAA,EACAf,IAAA,iBACAhC,MAAA,WACA,IAAAjC,SAKA,YAGA,OAAAA,SAAAiG,eAAA5O,KAAAJ,MAAA+B,OAAAkN,UAAA,UAAAlG,SAAAiG,eAAA5O,KAAAJ,MAAA+B,OAAAmN,SAKA,YAGA,IAAAnN,EAAAgH,SAAAiG,eAAA5O,KAAAJ,MAAA+B,OAAAoN,UACAlN,EAAAmN,OAAAhP,KAAAJ,MAAAiC,OACAD,EAAAoN,OAAAhP,KAAAJ,MAAAgC,UAAA,OAGAqN,EAAA,CACAC,UAAArN,GAAA,YACAF,SAGA,GAAA8G,OAAA0G,UAAAC,iBAAA,CACA,IACAC,EAAA,IAAAC,KADA,ubAA4T3N,EAAA,mBAK5T,OAHAgH,SAAAiG,eAAA,6BAAAW,OAAA5G,CAAA,WACAF,OAAA0G,UAAAC,iBAAAC,EAAAzN,MAEA,EAGA,IAAA4H,EAAAf,OAAAE,SAAArH,cAAA,KAMA,OALAkI,EAAAgG,KAjBA,wCAiBA7B,EAAA8B,OAAA9B,EAAA+B,OAhBA,2cAgBAT,IACAzF,EAAAmG,SAAA/N,EACA+G,SAAAhC,KAAAiJ,YAAApG,GACAA,EAAA+F,QACA5G,SAAAhC,KAAAkJ,YAAArG,IACA,IAEG,CACHoD,IAAA,SACAhC,MAAA,WACA,OAAAuC,EAAAK,QAAAlM,cAAA,UACAG,GAAAzB,KAAAJ,MAAA6B,GACAC,UAAA1B,KAAAJ,MAAA8B,UACA8I,KAAA,SACAW,QAAAnL,KAAAqO,gBACOrO,KAAAJ,MAAAkC,eAEJ,EACH8K,IAAA,SACAhC,MAAA,SAAAkF,GACA,OAAArH,OAAAsH,KAAAC,SAAAC,mBAAAH,OAEG,CACHlD,IAAA,SACAhC,MAAA,SAAAkF,EAAAI,GACA,OAAAJ,EAAAK,QAAA,WAA+B,SAAAC,EAAAC,GAC/B,OAAAH,EAAAG,SAKA1C,EAlFA,GAqFAA,EAAAF,YACAE,EAAA2C,aA5FA,CACA7O,GAAA,yBACAC,UAAA,kBACAI,WAAA,YA0FAqK,EAAAqB,QAAAG,oCC5JiB7B,IAfe,SAAClB,EAAO2F,GACpC,IAAMC,EAAS,GAWf,OATK5F,EAAM6F,eACTD,EAAOC,aAAe,8BAEnB7F,EAAMJ,OACTgG,EAAOhG,KAAO,2BAEXI,EAAM8F,eACTF,EAAOE,aAAe,mCAEjBF","file":"static/js/22.efdec54f.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport ReactHTMLTableToExcel from \"react-html-table-to-excel\";\r\nimport { getUserdata, localStoragedecryp } from \"../../../../../components/helpers/function\";\r\nclass ExportTransaksiPenjualanExel extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  render() {\r\n    let stock_on_hand = 0;\r\n    let berat = 0;\r\n    let berat_atribut = 0;\r\n    let total_barang = 0;\r\n    let harga_jual = 0;\r\n    let harga_atribut = 0;\r\n    let harga_gram = 0;\r\n    let harga_total = 0;\r\n    let ongkos = 0;\r\n    this.props.data.forEach((barang, index) => {\r\n      barang.detail.forEach((item, index) => {\r\n        stock_on_hand = stock_on_hand + item.stock_on_hand;\r\n        berat_atribut = berat_atribut + item.berat_atribut;\r\n        berat = berat + item.berat;\r\n        harga_jual = harga_jual + item.harga_jual;\r\n        ongkos = ongkos + item.ongkos;\r\n        harga_total = harga_total + item.harga_total;\r\n        harga_gram = harga_gram + item.harga_gram;\r\n        harga_atribut = harga_atribut + item.harga_atribut;\r\n      });\r\n      total_barang = total_barang + barang.detail.length;\r\n    });\r\n    return (\r\n      <>\r\n        <ReactHTMLTableToExcel\r\n          id=\"test-table-xls-button\"\r\n          className=\"btn btn-success btn-block\"\r\n          table=\"table-to-xls\"\r\n          filename=\"Laporan Transaksi Penjualan Bayar\"\r\n          sheet=\"Laporan Transaksi Penjualan Bayar\"\r\n          buttonText=\"Export Exel\"\r\n        />\r\n        <table id=\"table-to-xls\" style={{ display: \"none\" }}>\r\n          <thead>\r\n            <tr>\r\n              <th colSpan=\"10\"> Periode </th>\r\n            </tr>\r\n            <tr>\r\n              <th colSpan=\"10\">\r\n                {\" \"}\r\n                {localStoragedecryp(\"tgl_laporan\").length === 0\r\n                  ? null\r\n                  : JSON.parse(localStoragedecryp(\"tgl_laporan\")).tgl_awal +\r\n                    \" s/d \" +\r\n                    JSON.parse(localStoragedecryp(\"tgl_laporan\"))\r\n                      .tgl_akhir}{\" \"}\r\n              </th>\r\n            </tr>\r\n            <tr>\r\n              <th colSpan=\"10\"> TOKO :  {getUserdata().nama_toko} </th>\r\n            </tr>\r\n           \r\n            <tr>\r\n              <th colSpan=\"10\"> ALAMAT :  {getUserdata().alamat_toko} </th>\r\n            </tr>\r\n            <tr>\r\n              <th colSpan=\"10\"></th>\r\n            </tr>\r\n            <tr>\r\n                  <td style={{ backgroundColor: \"#008846\", color: \"#FFFFFF\",border: \"1px solid #000\" }}>\r\n                    NO FAKTUR\r\n                  </td>\r\n                  <td style={{ backgroundColor: \"#008846\", color: \"#FFFFFF\",border: \"1px solid #000\" }}>\r\n                    NAMA BARANG\r\n                  </td>\r\n                  <td style={{ backgroundColor: \"#008846\", color: \"#FFFFFF\",border: \"1px solid #000\" }}>\r\n                    BERAT\r\n                  </td>\r\n                  <td style={{ backgroundColor: \"#008846\", color: \"#FFFFFF\",border: \"1px solid #000\" }}>\r\n                    ONGKOS\r\n                  </td>\r\n                  <td style={{ backgroundColor: \"#008846\", color: \"#FFFFFF\",border: \"1px solid #000\" }}>\r\n                    HARGA JUAL\r\n                  </td>\r\n                  <td style={{ backgroundColor: \"#008846\", color: \"#FFFFFF\",border: \"1px solid #000\" }}>\r\n                    NAMA ATRIBUT\r\n                  </td>\r\n                  <td style={{ backgroundColor: \"#008846\", color: \"#FFFFFF\",border: \"1px solid #000\" }}>\r\n                    BERAT ATRIBUT\r\n                  </td>\r\n                  <td style={{ backgroundColor: \"#008846\", color: \"#FFFFFF\",border: \"1px solid #000\" }}>\r\n                    HARGA ATRIBUT\r\n                  </td>\r\n                  <td style={{ backgroundColor: \"#008846\", color: \"#FFFFFF\",border: \"1px solid #000\" }}>\r\n                    HARGA GRAM\r\n                  </td>\r\n                  <td style={{ backgroundColor: \"#008846\", color: \"#FFFFFF\",border: \"1px solid #000\" }}>\r\n                    HARGA TOTAL\r\n                  </td>\r\n                </tr>\r\n          </thead>\r\n          {this.props.data.map((item, index) => (\r\n            <>\r\n              <tbody>\r\n                {item._id.pembayaran.map((header_detail, index) => (\r\n                  <>\r\n                    {/* <tr>\r\n                      <td style={{ textAlign: \"left\" }}>No Faktur Group</td>\r\n                      <td colSpan=\"9\" style={{ border: \"1px solid #000\" }}> {header_detail.no_faktur_group}</td>\r\n                    </tr> */}\r\n                    <tr>\r\n                      <td colSpan=\"10\" style={{ border: \"1px solid #000\" }}>\r\n                        {header_detail.jenis}{\" \"}\r\n                        {parseInt(header_detail.jumlah_rp).toLocaleString(\r\n                          \"kr-KO\"\r\n                        )}\r\n                      </td>\r\n                    </tr>\r\n                  </>\r\n                ))}\r\n               \r\n                {item.detail.map((row, index) => (\r\n                  <tr>\r\n                    <td style={{ border: \"1px solid #000\" }}>\r\n                      {row.no_faktur_jual}\r\n                    </td>\r\n                    <td\r\n                      style={{ border: \"1px solid #000\", whiteSpace: \"nowrap\" }}\r\n                    >\r\n                      {row.nama_barang}\r\n                    </td>\r\n                    <td\r\n                      style={{ border: \"1px solid #000\" }}\r\n                    >\r\n                      {row.berat}\r\n                    </td>\r\n                    <td\r\n                      style={{ border: \"1px solid #000\" }}\r\n                    >\r\n                      {row.ongkos}\r\n                    </td>\r\n                    <td\r\n                      style={{ border: \"1px solid #000\" }}\r\n                    >\r\n                      {row.harga_jual}\r\n                    </td>\r\n                    <td\r\n                      style={{ border: \"1px solid #000\" }}\r\n                    >\r\n                      {row.nama_atribut}\r\n                    </td>\r\n                    <td\r\n                      style={{ border: \"1px solid #000\" }}\r\n                    >\r\n                      {row.berat_atribut}\r\n                    </td>\r\n                    <td\r\n                      style={{ border: \"1px solid #000\" }}\r\n                    >\r\n                      {row.harga_atribut}\r\n                    </td>\r\n                    <td\r\n                      style={{ border: \"1px solid #000\" }}\r\n                    >\r\n                      {row.harga_gram}\r\n                    </td>\r\n                    <td\r\n                      style={{ border: \"1px solid #000\" }}\r\n                    >\r\n                      {row.harga_total}\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n              <tfoot>\r\n                <tr>\r\n                  <td colSpan=\"2\" style={{ backgroundColor: \"#008846\", color: \"#FFFFFF\", border: \"1px solid #000\", textAlign: \"center\" }}>\r\n                    Total Barang : {item.detail.length}\r\n                  </td>\r\n                  <td style={{ backgroundColor: \"#008846\", color: \"#FFFFFF\", border: \"1px solid #000\" }}>\r\n                    {\" \"}\r\n                    {item.detail\r\n                      .map((list) => list.berat)\r\n                      .reduce((a, b) => a + b, 0)}{\" \"}\r\n                  </td>\r\n                  <td style={{ backgroundColor: \"#008846\", color: \"#FFFFFF\", border: \"1px solid #000\" }}>\r\n                    {\" \"}\r\n                    {item.detail\r\n                      .map((list) => list.ongkos)\r\n                      .reduce((a, b) => a + b, 0)}{\" \"}\r\n                  </td>\r\n                  <td style={{ backgroundColor: \"#008846\", color: \"#FFFFFF\", border: \"1px solid #000\" }}>\r\n                    {\" \"}\r\n                    {item.detail\r\n                      .map((list) => list.harga_jual)\r\n                      .reduce((a, b) => a + b, 0)}{\" \"}\r\n                  </td>\r\n                  <td style={{ backgroundColor: \"#008846\", color: \"#FFFFFF\", border: \"1px solid #000\" }}>\r\n                    {\" \"}\r\n                  </td>\r\n                  <td style={{ backgroundColor: \"#008846\", color: \"#FFFFFF\", border: \"1px solid #000\" }}>\r\n                    {\" \"}\r\n                    {item.detail\r\n                      .map((list) => list.berat_atribut)\r\n                      .reduce((a, b) => a + b, 0)}{\" \"}\r\n                  </td>\r\n                  <td style={{ backgroundColor: \"#008846\", color: \"#FFFFFF\", border: \"1px solid #000\" }}>\r\n                    {\" \"}\r\n                    {item.detail\r\n                      .map((list) => list.harga_atribut)\r\n                      .reduce((a, b) => a + b, 0)}{\" \"}\r\n                  </td>\r\n                  <td style={{ backgroundColor: \"#008846\", color: \"#FFFFFF\", border: \"1px solid #000\" }}>\r\n                    {\" \"}\r\n                    {item.detail\r\n                      .map((list) => list.harga_gram)\r\n                      .reduce((a, b) => a + b, 0)}{\" \"}\r\n                  </td>\r\n                  <td style={{ backgroundColor: \"#008846\", color: \"#FFFFFF\", border: \"1px solid #000\" }}>\r\n                    {\" \"}\r\n                    {item.detail\r\n                      .map((list) => list.harga_total)\r\n                      .reduce((a, b) => a + b, 0)}{\" \"}\r\n                  </td>\r\n                </tr>\r\n              </tfoot>\r\n            </>\r\n          ))}\r\n          <tr>\r\n            <td colSpan=\"2\" style={{ border: \"1px solid #000\",backgroundColor: \"#008846\", color: \"#FFFFFF\",textAlign:\"center\" }}>\r\n             Grand Total Barang : {total_barang}\r\n            </td>\r\n            <td style={{ backgroundColor: \"#008846\", color: \"#FFFFFF\",border: \"1px solid #000\" }}>\r\n              {berat}\r\n            </td>\r\n            <td style={{ backgroundColor: \"#008846\", color: \"#FFFFFF\",border: \"1px solid #000\" }}>\r\n              {ongkos}\r\n            </td>\r\n            <td style={{ backgroundColor: \"#008846\", color: \"#FFFFFF\",border: \"1px solid #000\" }}>\r\n              {harga_jual}\r\n            </td>\r\n            <td style={{ backgroundColor: \"#008846\", color: \"#FFFFFF\",border: \"1px solid #000\" }}> </td>\r\n            <td style={{ backgroundColor: \"#008846\", color: \"#FFFFFF\",border: \"1px solid #000\" }}>\r\n              {berat_atribut}\r\n            </td>\r\n            <td style={{ backgroundColor: \"#008846\", color: \"#FFFFFF\",border: \"1px solid #000\" }}>\r\n              {harga_atribut}\r\n            </td>\r\n            <td style={{ backgroundColor: \"#008846\", color: \"#FFFFFF\",border: \"1px solid #000\" }}>\r\n              {harga_gram}\r\n            </td>\r\n            <td style={{ backgroundColor: \"#008846\", color: \"#FFFFFF\",border: \"1px solid #000\" }}>\r\n              {harga_total}\r\n            </td>\r\n          </tr>\r\n        </table>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default ExportTransaksiPenjualanExel;\r\n","import jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\nimport {\r\n  getToday,\r\n  getUserdata,\r\n  localStoragedecryp,\r\n} from \"../../../../../components/helpers/function\";\r\n// Date Fns is used to format the dates we receive\r\n\r\n// define a generatePDF function that accepts a tickets argument\r\nconst ExportTransaksiPenjualanBayar = (data = \"\") => {\r\n  // initialize jsPDF\r\n  const doc = new jsPDF(\"l\", \"mm\", [297, 210]);\r\n  //   let data = JSON.parse(localStorage.getItem(\"tt_pengeluaran_barang\")) || [];\r\n  let tableRows = [];\r\n  let tableColumn = [];\r\n  let finalY = 30;\r\n\r\n  let total_baraang = 0;\r\n  let total_berat = 0;\r\n  let total_onkos = 0;\r\n  let total_harga_jual = 0;\r\n  let total_berat_atribut = 0;\r\n  let total_harga_atribut = 0;\r\n  let total_harga_gram = 0;\r\n  let total_harga_total = 0;\r\n\r\n  doc.setFontSize(15);\r\n  doc.text(\"LAPORAN TRANSAKSI PENJUALAN BAYAR\", 14, 15);\r\n  doc.setFontSize(20);\r\n  doc.text(getUserdata().nama_toko, 200, 15);\r\n  doc.setFontSize(8);\r\n  let jml_alamat = getUserdata().alamat_toko.length;\r\n  if (jml_alamat > 20) {\r\n    doc.text(getUserdata().alamat_toko.slice(0,48), 200, 20);\r\n  }\r\n  if (jml_alamat > 50) {\r\n    doc.text(getUserdata().alamat_toko.slice(48,90), 200, 25);\r\n  }\r\n  doc.setFontSize(10);\r\n  doc.setProperties({\r\n    title: \"LAPORAN TRANSAKSI PENJUALAN BAYAR\",\r\n  });\r\n  //row 1\r\n  doc.text(\r\n    `PERIODE : ${\r\n      localStoragedecryp(\"tgl_laporan\").length === 0\r\n        ? null\r\n        : JSON.parse(localStoragedecryp(\"tgl_laporan\")).tgl_awal +\r\n          \" s/d \" +\r\n          JSON.parse(localStoragedecryp(\"tgl_laporan\")).tgl_akhir\r\n    }`,\r\n    14,\r\n    25\r\n  );\r\n  tableColumn = [\r\n    [\r\n      {\r\n        content: `NO FAKTUR`,\r\n      },\r\n      {\r\n        content: `NAMA BARANG`,\r\n      },\r\n      {\r\n        content: `BERAT`,\r\n      },\r\n      {\r\n        content: `ONGKOS`,\r\n      },\r\n      {\r\n        content: `HARGA JUAL`,\r\n      },\r\n      {\r\n        content: `NAMA ATRIBUT`,\r\n      },\r\n      {\r\n        content: `BERAT ATRIBUT`,\r\n      },\r\n      {\r\n        content: `HARGA ATRIBUT`,\r\n      },\r\n      {\r\n        content: `HARGA GRAM`,\r\n      },\r\n      {\r\n        content: `HARGA TOTAL`,\r\n      },\r\n    ],\r\n  ];\r\n  data.forEach((item, index) => {\r\n    let tot_berat = 0;\r\n    let tot_onkos = 0;\r\n    let tot_harga_jual = 0;\r\n    let tot_harga_gram = 0;\r\n    let tot_berat_atribut = 0;\r\n    let tot_harga_atribut = 0;\r\n    let tot_harga_total = 0;\r\n    item._id.pembayaran.forEach((header_detail, index) => {\r\n      let header = [\r\n        {\r\n          content: `${\r\n            header_detail.jenis\r\n          }  (${parseInt(header_detail.jumlah_rp).toLocaleString(\"kr-KO\")})`,\r\n          colSpan: 11,\r\n        },\r\n      ];\r\n      tableRows.push(header);\r\n    });\r\n\r\n    item.detail.forEach((item, index) => {\r\n      let rows = [\r\n        item.no_faktur_jual,\r\n        item.nama_barang,\r\n        item.berat.toFixed(3),\r\n        parseInt(item.ongkos).toLocaleString(\"kr-KO\"),\r\n        parseInt(item.harga_jual).toLocaleString(\"kr-KO\"),\r\n        item.nama_atribut,\r\n        item.berat_atribut.toFixed(3),\r\n        parseInt(item.harga_atribut).toLocaleString(\"kr-KO\"),\r\n        parseInt(item.harga_gram).toLocaleString(\"kr-KO\"),\r\n        parseInt(item.harga_total).toLocaleString(\"kr-KO\"),\r\n      ];\r\n\r\n      total_berat = total_berat + parseFloat(item.berat);\r\n      total_onkos = total_onkos + parseInt(item.ongkos);\r\n      total_harga_jual = total_harga_jual + parseInt(item.harga_jual);\r\n      total_berat_atribut = total_berat_atribut + parseInt(item.berat_atribut);\r\n      total_harga_atribut = total_harga_atribut + parseInt(item.harga_atribut);\r\n      total_harga_gram = total_harga_gram + parseInt(item.harga_gram);\r\n      total_harga_total = total_harga_total + parseInt(item.harga_total);\r\n\r\n      tot_berat = tot_berat + parseFloat(item.berat);\r\n      tot_onkos = tot_onkos + parseInt(item.ongkos);\r\n      tot_harga_jual = tot_harga_jual + parseInt(item.harga_jual);\r\n      tot_berat_atribut = tot_berat_atribut + parseInt(item.berat_atribut);\r\n      tot_harga_atribut = tot_harga_atribut + parseInt(item.harga_atribut);\r\n      tot_harga_gram = tot_harga_gram + parseInt(item.harga_gram);\r\n      tot_harga_total = tot_harga_total + parseInt(item.harga_total);\r\n      tableRows.push(rows);\r\n    });\r\n\r\n    total_baraang = total_baraang + item.detail.length;\r\n    // localStorage.setItem('hasil',JSON.stringify(item.detail.length))\r\n    // console.log();\r\n    let total = [\r\n      {\r\n        content: `Total Barang : ${item.detail.length}`,\r\n        colSpan: 2,\r\n        styles: {\r\n          halign: 'center',\r\n          fillColor: [0, 136, 70],\r\n          textColor: \"#fff\",\r\n        },\r\n      },\r\n      {\r\n        content: `${tot_berat.toFixed(3)}`,\r\n        styles: {\r\n          fillColor: [0, 136, 70],\r\n          textColor: \"#fff\",\r\n        },\r\n      },\r\n      {\r\n        content: `${parseInt(tot_onkos).toLocaleString(\"kr-KO\")}`,\r\n        styles: {\r\n          fillColor: [0, 136, 70],\r\n          textColor: \"#fff\",\r\n        },\r\n      },\r\n      {\r\n        content: `${parseInt(tot_harga_jual).toLocaleString(\"kr-KO\")}`,\r\n        styles: {\r\n          // halign: 'center',\r\n          fillColor: [0, 136, 70],\r\n          textColor: \"#fff\",\r\n        },\r\n      },\r\n      {\r\n        content: ``,\r\n        styles: {\r\n          // halign: 'center',\r\n          fillColor: [0, 136, 70],\r\n          textColor: \"#fff\",\r\n        },\r\n      },\r\n      {\r\n        content: `${tot_berat_atribut.toFixed(3)}`,\r\n        styles: {\r\n          // halign: 'center',\r\n          fillColor: [0, 136, 70],\r\n          textColor: \"#fff\",\r\n        },\r\n      },\r\n      {\r\n        content: `${parseInt(tot_harga_atribut).toLocaleString(\"kr-KO\")}`,\r\n        styles: {\r\n          // halign: 'center',\r\n          fillColor: [0, 136, 70],\r\n          textColor: \"#fff\",\r\n        },\r\n      },\r\n      {\r\n        content: `${parseInt(tot_harga_gram).toLocaleString(\"kr-KO\")}`,\r\n        styles: {\r\n          // halign: 'center',\r\n          fillColor: [0, 136, 70],\r\n          textColor: \"#fff\",\r\n        },\r\n      },\r\n      {\r\n        content: `${parseInt(tot_harga_total).toLocaleString(\"kr-KO\")}`,\r\n        styles: {\r\n          // halign: 'center',\r\n          fillColor: [0, 136, 70],\r\n          textColor: \"#fff\",\r\n        },\r\n      },\r\n    ];\r\n    //   // `Total : ${item.detail.length}`,\r\n    //   // \"\",\r\n    //   {\r\n    //     content: `Total : ${item.detail.length}`,\r\n    //     colSpan: 2,\r\n    //     styles: { halign: 'center' },\r\n    //     fillColor: [187, 187, 187],\r\n    //   },\r\n    //   `${tot_berat.toFixed(3)}`,\r\n    //   `${parseInt(tot_onkos).toLocaleString(\"kr-KO\")}`,\r\n    //   `${parseInt(tot_harga_jual).toLocaleString(\"kr-KO\")}`,\r\n    //   \"\",\r\n    //   `${tot_berat_atribut.toFixed(3)}`,\r\n    //   `${parseInt(tot_harga_atribut).toLocaleString(\"kr-KO\")}`,\r\n    //   `${tot_harga_gram.toLocaleString(\"kr-KO\")}`,\r\n    //   `${tot_harga_total.toLocaleString(\"kr-KO\")}`,\r\n    // ];\r\n    tableRows.push(total);\r\n  \r\n  });\r\n  let footer = [\r\n    {\r\n      content: `Grand Barang : ${total_baraang}`,\r\n      colSpan: 2,\r\n      styles: {\r\n        halign: 'center',\r\n        fillColor: [0, 136, 70],\r\n        textColor: \"#fff\",\r\n      },\r\n    },\r\n    {\r\n      content: `${total_berat.toFixed(3)}`,\r\n      styles: {\r\n        fillColor: [0, 136, 70],\r\n        textColor: \"#fff\",\r\n      },\r\n    },\r\n    {\r\n      content: `${parseInt(total_onkos).toLocaleString(\"kr-KO\")}`,\r\n      styles: {\r\n        fillColor: [0, 136, 70],\r\n        textColor: \"#fff\",\r\n      },\r\n    },\r\n    {\r\n      content: `${parseInt(total_harga_jual).toLocaleString(\"kr-KO\")}`,\r\n      styles: {\r\n        fillColor: [0, 136, 70],\r\n        textColor: \"#fff\",\r\n      },\r\n    },\r\n    {\r\n      content: ``,\r\n      styles: {\r\n        fillColor: [0, 136, 70],\r\n        textColor: \"#fff\",\r\n      },\r\n    },\r\n    {\r\n      content: `${total_berat_atribut.toFixed(3)}`,\r\n      styles: {\r\n        fillColor: [0, 136, 70],\r\n        textColor: \"#fff\",\r\n      },\r\n    },\r\n   \r\n    {\r\n      content: `${parseInt(total_harga_atribut).toLocaleString(\"kr-KO\")}`,\r\n      styles: {\r\n        fillColor: [0, 136, 70],\r\n        textColor: \"#fff\",\r\n      },\r\n    },\r\n    {\r\n      content: `${parseInt(total_harga_gram).toLocaleString(\"kr-KO\")}`,\r\n      styles: {\r\n        fillColor: [0, 136, 70],\r\n        textColor: \"#fff\",\r\n      },\r\n    },\r\n    {\r\n      content: `${parseInt(total_harga_total).toLocaleString(\"kr-KO\")}`,\r\n      styles: {\r\n        fillColor: [0, 136, 70],\r\n        textColor: \"#fff\",\r\n      },\r\n    },\r\n  ];\r\n  tableRows.push(footer);\r\n  doc.autoTable({\r\n    head: tableColumn,\r\n    body: tableRows,\r\n    // foot: footRows,\r\n    startY:finalY,\r\n    theme: \"plain\",\r\n    rowPageBreak: \"avoid\",\r\n    // pageBreak: \"avoid\",\r\n    margin: { top: 10 },\r\n    bodyStyles: {\r\n      lineWidth: 0.02,\r\n      lineColor: \"#000\",\r\n      fontSize: 8,\r\n    },\r\n    headStyles: {\r\n      fontSize: 8,\r\n      lineWidth: 0.02,\r\n      lineColor: \"#000\",\r\n      textColor: \"#fff\",\r\n      fillColor: [0, 136, 70],\r\n    },\r\n  });\r\n  finalY = doc.autoTableEndPosY() + 3;\r\n  tableRows = [];\r\n \r\n  // const date = Date().split(\" \");\r\n  // we use a date string to generate our filename.\r\n  // const dateStr = date[2] + date[3] + date[4];\r\n  // ticket title. and margin-top + margin-left\r\n  doc.text(\r\n    `User                           : ${\r\n      JSON.parse(localStoragedecryp(\"userdata\")).user_id\r\n    }`,\r\n    14,\r\n    finalY + 10\r\n  );\r\n  doc.text(`Cetak                        : ${getToday()}`, 14, finalY + 16);\r\n  // doc.text(`Total Barang Terjual : ${total_baraang}`, 14, finalY + 20);\r\n  const pages = doc.internal.getNumberOfPages();\r\n  const pageWidth = doc.internal.pageSize.width; //Optional\r\n  const pageHeight = doc.internal.pageSize.height; //Optional\r\n  doc.setFontSize(10); //Optional\r\n  for (let j = 1; j < pages + 1; j++) {\r\n    let horizontalPos = pageWidth / 2; //Can be fixed number\r\n    let verticalPos = pageHeight - 10; //Can be fixed number\r\n    doc.setPage(j);\r\n    doc.text(`${j} of ${pages}`, horizontalPos, verticalPos, {\r\n      align: \"center\",\r\n    });\r\n  }\r\n  // doc.autoPrint();\r\n  // doc.save(`LAPORAN TRANSAKSI PENJUALAN BAYAR.pdf`);\r\n  var string = doc.output(\"datauristring\");\r\n  // var embed = \"<embed width='100%' height='100%' src='\" + string + \"'/>\";\r\n  var x = window.open();\r\n  x.document.open();\r\n  x.document.write(\r\n    \"<html><head><title>LAPORAN TRANSAKSI PENJUALAN BAYAR</title></head><body style='margin:0 !important'><embed width='100%' height='100%'  src=\" +\r\n      string +\r\n      \"></embed></body></html>\"\r\n  );\r\n  // x.document.write(embed);\r\n  // setInterval(() => {\r\n  //   x.close();\r\n  // }, 1000);\r\n};\r\n\r\nexport default ExportTransaksiPenjualanBayar;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { InputDate } from \"../../../../components/helpers/field\";\r\nimport { getTglSystem } from \"../../../../components/helpers/function\";\r\nimport Tabel from \"../../../../components/helpers/tabel\";\r\nimport ValidasiLaporanKeuangan from \"../../../../Validasi/LaporanKeuangan/ValidasiLaporanKeuangan\";\r\nimport ExportTransaksiPenjualanExel from \"./exel/ExportTransaksiPenjualanExel\";\r\nimport ExportTransaksiPenjualanBayar from \"./pdf/ExportTransaksiPenjualanBayar\";\r\nimport Loading from 'react-fullscreen-loading';\r\n\r\nclass HeadLaporanBayar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      date: new Date(),\r\n    };\r\n    this.setStartDate = this.setStartDate.bind(this);\r\n    this.setLastDate = this.setLastDate.bind(this);\r\n  }\r\n  exportPdf() {\r\n    ExportTransaksiPenjualanBayar(this.props.LaporanPenjualanBayar);\r\n  }\r\n  setStartDate(date) {\r\n    this.setState({\r\n      tgl_awal: new Date(date),\r\n    });\r\n  }\r\n  setLastDate(date) {\r\n    this.setState({\r\n      tgl_akhir: new Date(date),\r\n    });\r\n  }\r\n  render() {\r\n    let databarang = [];\r\n    let berat = 0;\r\n    let ongkos = 0;\r\n    let harga_jual = 0;\r\n    let harga_total = 0;\r\n    let harga_gram = 0;\r\n    this.props.LaporanPenjualanBayar.forEach((element) => {\r\n      element.detail.forEach((detail) => {\r\n        databarang.push(detail);\r\n        berat = berat + detail.berat;\r\n        ongkos = ongkos + detail.ongkos;\r\n        harga_jual = harga_jual + detail.harga_jual;\r\n        harga_total = harga_total + detail.harga_total;\r\n        harga_gram = harga_gram + detail.harga_gram;\r\n      });\r\n    });\r\n    const columns = [\r\n      {\r\n        dataField: \"no_faktur_jual\",\r\n        text: \"NO FJ\",\r\n        footerAttrs: {\r\n          colSpan: \"3\",\r\n        },\r\n        footer: (cell, row, num, index) => {\r\n          return <div>Total Barang : {databarang.length} </div>;\r\n        },\r\n      },\r\n      {\r\n        dataField: \"kode_barcode\",\r\n        text: \"Kode Barcode\",\r\n      },\r\n      {\r\n        dataField: \"nama_barang\",\r\n        text: \"Nama Barang\",\r\n      },\r\n      {\r\n        dataField: \"berat\",\r\n        text: \"Berat\",\r\n        footer: (cell, row, num, index) => {\r\n          return <div>{berat.toFixed(3)} </div>;\r\n        },\r\n        formatter: (cell) => {\r\n          return cell.toFixed(3);\r\n        },\r\n      },\r\n      {\r\n        dataField: \"ongkos\",\r\n        text: \"Ongkos\",\r\n        headerClasses: \"text-right\",\r\n        footer: (cell, row, num, index) => {\r\n          return (\r\n            <div className=\"text-right\">{ongkos.toLocaleString(\"kr-KO\")} </div>\r\n          );\r\n        },\r\n        formatter: (cell) => {\r\n          return (\r\n            <div className=\"text-right\">{cell.toLocaleString(\"kr-KO\")}</div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        dataField: \"harga_jual\",\r\n        text: \"Harga Jual\",\r\n        headerClasses: \"text-right\",\r\n        footer: (cell, row, num, index) => {\r\n          return (\r\n            <div className=\"text-right\">\r\n              {harga_jual.toLocaleString(\"kr-KO\")}{\" \"}\r\n            </div>\r\n          );\r\n        },\r\n        formatter: (cell) => {\r\n          return (\r\n            <div className=\"text-right\">{cell.toLocaleString(\"kr-KO\")}</div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        dataField: \"harga_gram\",\r\n        text: \"Harga/Gram\",\r\n        headerClasses: \"text-right\",\r\n        footer: (cell, row, num, index) => {\r\n          return (\r\n            <div className=\"text-right\">\r\n              {harga_gram.toLocaleString(\"kr-KO\")}{\" \"}\r\n            </div>\r\n          );\r\n        },\r\n        formatter: (cell) => {\r\n          return (\r\n            <div className=\"text-right\">{cell.toLocaleString(\"kr-KO\")}</div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        dataField: \"harga_total\",\r\n        text: \"Harga Total\",\r\n        headerClasses: \"text-right\",\r\n        footer: (cell, row, num, index) => {\r\n          return (\r\n            <div className=\"text-right\">\r\n              {harga_total.toLocaleString(\"kr-KO\")}{\" \"}\r\n            </div>\r\n          );\r\n        },\r\n        formatter: (cell) => {\r\n          return (\r\n            <div className=\"text-right\">{cell.toLocaleString(\"kr-KO\")}</div>\r\n          );\r\n        },\r\n      },\r\n    ];\r\n    return (\r\n      <form onSubmit={this.props.handleSubmit} autoComplete=\"off\">\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-4\">\r\n            <Field\r\n              name=\"tgl_awal\"\r\n              component={InputDate}\r\n              label=\"Tanggal Dari\"\r\n              type=\"text\"\r\n              selected={this.state.tgl_awal}\r\n              onChange={(date) => this.setStartDate(date)}\r\n              placeholder=\"Masukan Tanggal Dari\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"col-lg-4\">\r\n            <Field\r\n              name=\"tgl_akhir\"\r\n              component={InputDate}\r\n              type=\"text\"\r\n              selected={this.state.tgl_akhir}\r\n              onChange={(date) => this.setLastDate(date)}\r\n              label=\"Tanggal Akhir\"\r\n              placeholder=\"Masukan Tanggal Akhir\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"col-lg-4\">\r\n            <div className=\"text-right\">\r\n              <label>&nbsp;</label>\r\n              <button\r\n                type=\"submit\"\r\n                value=\"PDF\"\r\n                name=\"type_btn\"\r\n                className=\"btn btn-primary btn-block\"\r\n              >\r\n                {this.props.isLoading ? (\r\n                  <>\r\n                    <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Sedang\r\n                    Mencari\r\n                  </>\r\n                ) : (\r\n                  \"Cari Laporan\"\r\n                )}\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-lg-12\">\r\n            <Tabel\r\n              keyField=\"kode_barcode\"\r\n              data={this.props.export ? databarang : []}\r\n              columns={columns}\r\n              empty={true}\r\n              textEmpty=\"Data Laporan Transaksi Penjualan Bayar Kosong\"\r\n            />\r\n          </div>\r\n\r\n          <div className={this.props.export ? \"col-lg-12\" : \"col-lg-12 d-none\"}>\r\n            {/* <label htmlFor=\"\">&nbsp;</label> */}\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-6\">\r\n                <button\r\n                  onClick={() => this.exportPdf()}\r\n                  className=\"btn btn-warning btn-block\"\r\n                >\r\n                  {\" \"}\r\n                  Export PDF{\" \"}\r\n                </button>\r\n              </div>\r\n              <div className=\"col-lg-6\">\r\n                <ExportTransaksiPenjualanExel\r\n                  data={this.props.LaporanPenjualanBayar}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {this.props.isLoading ? (\r\n        <Loading \r\n        loading\r\n        background=\"rgba(0, 0, 0, 0.35)\"\r\n         loaderColor=\"rgba(94, 147, 117, 1)\" />\r\n      ) : null}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nHeadLaporanBayar = reduxForm({\r\n  form: \"HeadLaporanBayar\",\r\n  enableReinitialize: true,\r\n  validate: ValidasiLaporanKeuangan,\r\n})(HeadLaporanBayar);\r\n// export default connect(null)(HeadLaporanBayar);\r\nexport default connect((state) => {\r\n  return {\r\n    initialValues: {\r\n      tgl_awal: getTglSystem(),\r\n      tgl_akhir: getTglSystem(),\r\n    },\r\n  };\r\n})(HeadLaporanBayar);\r\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n/* global window, document, Blob */\n\n\nvar propTypes = {\n  table: _propTypes2.default.string.isRequired,\n  filename: _propTypes2.default.string.isRequired,\n  sheet: _propTypes2.default.string.isRequired,\n  id: _propTypes2.default.string,\n  className: _propTypes2.default.string,\n  buttonText: _propTypes2.default.string\n};\nvar defaultProps = {\n  id: 'button-download-as-xls',\n  className: 'button-download',\n  buttonText: 'Download'\n};\n\nvar ReactHTMLTableToExcel = function (_Component) {\n  _inherits(ReactHTMLTableToExcel, _Component);\n\n  function ReactHTMLTableToExcel(props) {\n    _classCallCheck(this, ReactHTMLTableToExcel);\n\n    var _this = _possibleConstructorReturn(this, (ReactHTMLTableToExcel.__proto__ || Object.getPrototypeOf(ReactHTMLTableToExcel)).call(this, props));\n\n    _this.handleDownload = _this.handleDownload.bind(_this);\n    return _this;\n  }\n\n  _createClass(ReactHTMLTableToExcel, [{\n    key: 'handleDownload',\n    value: function handleDownload() {\n      if (!document) {\n        if (process.env.NODE_ENV !== 'production') {\n          console.error('Failed to access document object');\n        }\n\n        return null;\n      }\n\n      if (document.getElementById(this.props.table).nodeType !== 1 || document.getElementById(this.props.table).nodeName !== 'TABLE') {\n        if (process.env.NODE_ENV !== 'production') {\n          console.error('Provided table property is not html table element');\n        }\n\n        return null;\n      }\n\n      var table = document.getElementById(this.props.table).outerHTML;\n      var sheet = String(this.props.sheet);\n      var filename = String(this.props.filename) + '.xls';\n      var uri = 'data:application/vnd.ms-excel;base64,';\n      var template = '<html xmlns:o=\"urn:schemas-microsoft-com:office:office\" xmlns:x=\"urn:schemas-mic' + 'rosoft-com:office:excel\" xmlns=\"http://www.w3.org/TR/REC-html40\"><head><meta cha' + 'rset=\"UTF-8\"><!--[if gte mso 9]><xml><x:ExcelWorkbook><x:ExcelWorksheets><x:Exce' + 'lWorksheet><x:Name>{worksheet}</x:Name><x:WorksheetOptions><x:DisplayGridlines/>' + '</x:WorksheetOptions></x:ExcelWorksheet></x:ExcelWorksheets></x:ExcelWorkbook></' + 'xml><![endif]--></head><body>{table}</body></html>';\n      var context = {\n        worksheet: sheet || 'Worksheet',\n        table: table\n      }; // If IE11\n\n      if (window.navigator.msSaveOrOpenBlob) {\n        var fileData = ['' + ('<html xmlns:o=\"urn:schemas-microsoft-com:office:office\" xmlns:x=\"urn:schemas-mic' + 'rosoft-com:office:excel\" xmlns=\"http://www.w3.org/TR/REC-html40\"><head><meta cha' + 'rset=\"UTF-8\"><!--[if gte mso 9]><xml><x:ExcelWorkbook><x:ExcelWorksheets><x:Exce' + 'lWorksheet><x:Name>{worksheet}</x:Name><x:WorksheetOptions><x:DisplayGridlines/>' + '</x:WorksheetOptions></x:ExcelWorksheet></x:ExcelWorksheets></x:ExcelWorkbook></' + 'xml><![endif]--></head><body>') + table + '</body></html>'];\n        var blobObject = new Blob(fileData);\n        document.getElementById('react-html-table-to-excel').click()(function () {\n          window.navigator.msSaveOrOpenBlob(blobObject, filename);\n        });\n        return true;\n      }\n\n      var element = window.document.createElement('a');\n      element.href = uri + ReactHTMLTableToExcel.base64(ReactHTMLTableToExcel.format(template, context));\n      element.download = filename;\n      document.body.appendChild(element);\n      element.click();\n      document.body.removeChild(element);\n      return true;\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      return _react2.default.createElement('button', {\n        id: this.props.id,\n        className: this.props.className,\n        type: 'button',\n        onClick: this.handleDownload\n      }, this.props.buttonText);\n    }\n  }], [{\n    key: 'base64',\n    value: function base64(s) {\n      return window.btoa(unescape(encodeURIComponent(s)));\n    }\n  }, {\n    key: 'format',\n    value: function format(s, c) {\n      return s.replace(/{(\\w+)}/g, function (m, p) {\n        return c[p];\n      });\n    }\n  }]);\n\n  return ReactHTMLTableToExcel;\n}(_react.Component);\n\nReactHTMLTableToExcel.propTypes = propTypes;\nReactHTMLTableToExcel.defaultProps = defaultProps;\nexports.default = ReactHTMLTableToExcel;","const ValidasiLaporanKeuangan = (value, event) => {\r\n    const errors = {};\r\n    // console.log(event.charCode==13);\r\n    if (!value.tanggal_awal) {\r\n      errors.tanggal_awal = \"Tanggal Tidak Boleh Kosong\";\r\n    }\r\n    if (!value.type) {\r\n      errors.type = \"Type Tidak Boleh Kosong\";\r\n    }\r\n    if (!value.type_laporan) {\r\n      errors.type_laporan = \"Type Laporan Tidak Boleh Kosong\";\r\n    }\r\n    return errors;\r\n  };\r\n  \r\n  export default ValidasiLaporanKeuangan;\r\n  "],"sourceRoot":""}