{"version":3,"sources":["pages/Laporan/LaporanService/LaporanServiceAmbil/exel/LaporanServiceAmbilExel.jsx","pages/Laporan/LaporanService/LaporanServiceAmbil/pdf/CetakLaporanServiceAmbilPdf.jsx","pages/Laporan/LaporanService/LaporanServiceAmbil/HeadLaporanServiceAmbil.jsx","../node_modules/react-html-table-to-excel/index.js","Validasi/ValidasiTanggalLaporan.jsx"],"names":["LaporanServiceAmbilExel","props","_this","Object","classCallCheck","this","_super","call","state","react_default","a","createElement","Fragment","react_html_table_to_excel_default","id","className","table","filename","sheet","buttonText","style","display","colSpan","textAlign","localStoragedecryp","length","JSON","parse","tgl_awal","tgl_akhir","getUserdata","nama_toko","alamat_toko","backgroundColor","color","data","map","row","index","key","no_faktur_service","tgl_system","nama_customer","kode_sales","detail_barang","deskripsi","berat","toFixed","jumlah","toLocaleString","ongkos","Component","CetakLaporanServiceAmbilPdf","tableColumn","arguments","undefined","doc","jsPDF","tableRows","finalY","setFontSize","text","jml_alamat","slice","setProperties","title","concat","content","styles","halign","total","forEach","item","rows","parseInt","push","footer","fillColor","textColor","printed","user_id","getToday","fontStyle","autoTable","head","body","startY","theme","rowPageBreak","margin","top","footStyles","fontSize","bodyStyles","headStyles","tableLineColor","tableLineWidth","autoTableEndPosY","pages","internal","getNumberOfPages","pageWidth","pageSize","width","pageHeight","height","j","horizontalPos","verticalPos","setPage","align","save","HeadLaporanServiceAmbil","date","Date","columns","dataField","footerAttrs","cell","num","LaporanServices","headerClasses","formatter","setStartDate","bind","assertThisInitialized","setLastDate","setState","_this2","onSubmit","handleSubmit","autoComplete","Field","name","component","InputDate","label","type","selected","onChange","placeholder","value","isLoading","tabel","keyField","export","empty","textEmpty","onClick","exportPdf","exel_LaporanServiceAmbilExel","loading_default","loading","background","loaderColor","reduxForm","form","enableReinitialize","validate","ValidasiTanggalLaporan","connect","initialValues","getTglSystem","defineProperty","exports","_createClass","defineProperties","target","i","descriptor","enumerable","configurable","writable","Constructor","protoProps","staticProps","prototype","_react","__webpack_require__","_react2","_interopRequireDefault","_propTypes2","obj","__esModule","default","propTypes","string","isRequired","ReactHTMLTableToExcel","_Component","instance","TypeError","_classCallCheck","self","ReferenceError","_possibleConstructorReturn","__proto__","getPrototypeOf","handleDownload","subClass","superClass","create","constructor","setPrototypeOf","_inherits","document","getElementById","nodeType","nodeName","outerHTML","String","context","worksheet","window","navigator","msSaveOrOpenBlob","blobObject","Blob","click","element","href","base64","format","download","appendChild","removeChild","s","btoa","unescape","encodeURIComponent","c","replace","m","p","defaultProps","event","errors"],"mappings":"6OAiJeA,oDA1Ib,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAI,EAAAC,KAAAF,KAAMJ,IACDO,MAAQ,GAFIN,uDAKjB,OACEO,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAACE,EAAAH,EAAD,CACEI,GAAG,wBACHC,UAAU,4BACVC,MAAM,eACNC,SAAS,wBACTC,MAAM,wBACNC,WAAW,gBAEbV,EAAAC,EAAAC,cAAA,SAAOG,GAAG,eAAeM,MAAO,CAAEC,QAAS,SACzCZ,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAIW,QAAQ,IAAIF,MAAO,CAAEG,UAAW,WACjC,IADH,wBAEwB,MAG1Bd,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAIW,QAAQ,KAAZ,cAEFb,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAIW,QAAQ,KACT,IAC6C,IAA7CE,YAAmB,eAAeC,OAC/B,KACAC,KAAKC,MAAMH,YAAmB,gBAAgBI,SAC9C,QACAF,KAAKC,MAAMH,YAAmB,gBAC3BK,UAAW,MAGtBpB,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAIW,QAAQ,KAAZ,WAAyBQ,cAAcC,UAAvC,MAGFtB,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAIW,QAAQ,KAAZ,aAA2BQ,cAAcE,YAAzC,MAEFvB,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAIS,MAAO,CAAEa,gBAAiB,UAAWC,MAAO,SAAhD,cAGAzB,EAAAC,EAAAC,cAAA,MAAIS,MAAO,CAAEa,gBAAiB,UAAWC,MAAO,SAAhD,iBAGAzB,EAAAC,EAAAC,cAAA,MAAIS,MAAO,CAAEa,gBAAiB,UAAWC,MAAO,SAAhD,iBAIAzB,EAAAC,EAAAC,cAAA,MACES,MAAO,CACLa,gBAAiB,UACjBC,MAAO,OACPX,UAAW,UAJf,SASAd,EAAAC,EAAAC,cAAA,MACES,MAAO,CACLa,gBAAiB,UACjBC,MAAO,OACPX,UAAW,UAJf,aASAd,EAAAC,EAAAC,cAAA,MACES,MAAO,CACLa,gBAAiB,UACjBC,MAAO,OACPX,UAAW,UAJf,SASAd,EAAAC,EAAAC,cAAA,MACES,MAAO,CACLa,gBAAiB,UACjBC,MAAO,OACPX,UAAW,UAJf,OASAd,EAAAC,EAAAC,cAAA,MACES,MAAO,CACLa,gBAAiB,UACjBC,MAAO,OACPX,UAAW,UAJf,YAWJd,EAAAC,EAAAC,cAAA,aACGN,KAAKJ,MAAMkC,KAAKC,IAAI,SAACC,EAAKC,GAAN,OACnB7B,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAAA,MAAI4B,IAAKD,GACT7B,EAAAC,EAAAC,cAAA,UAAK0B,EAAIG,mBACP/B,EAAAC,EAAAC,cAAA,UAAK0B,EAAII,YACThC,EAAAC,EAAAC,cAAA,UAAK0B,EAAIK,eACTjC,EAAAC,EAAAC,cAAA,UAAK0B,EAAIM,YACTlC,EAAAC,EAAAC,cAAA,UAAK0B,EAAIO,cAAcC,WACvBpC,EAAAC,EAAAC,cAAA,MAAIS,MAAO,CAACG,UAAW,UAAvB,OAAyCc,EAAIO,cAAcE,MAAMC,QAAQ,IACzEtC,EAAAC,EAAAC,cAAA,MAAIS,MAAO,CAACG,UAAW,UAAvB,OAAyCc,EAAIO,cAAcI,OAAOC,eAAe,UACjFxC,EAAAC,EAAAC,cAAA,MAAIS,MAAO,CAACG,UAAW,UAAvB,OAAyCc,EAAIO,cAAcM,OAAOD,eAAe,eAKzFxC,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MACES,MAAO,CACLa,gBAAiB,UACjBC,MAAO,OACPX,UAAW,UAEbD,QAAQ,KANV,mBAQmBjB,KAAKJ,MAAMkC,KAAKV,mBAlIX0B,sBCoOvBC,UAhOqB,WAK/B,IAMCC,EAVJlB,EAIGmB,UAAA7B,OAAA,QAAA8B,IAAAD,UAAA,GAAAA,UAAA,GAJI,GAMDE,GAFHF,UAAA7B,OAAA,QAAA8B,IAAAD,UAAA,IAAAA,UAAA,GAAAA,UAAA7B,OAAA,QAAA8B,IAAAD,UAAA,IAAAA,UAAA,GAAAA,UAAA7B,OAAA,QAAA8B,IAAAD,UAAA,IAAAA,UAAA,GAES,IAAIG,UAAM,IAAK,KAAM,CAAC,IAAK,OAEnCC,EAAY,GAGZC,EAAS,GAGbH,EAAII,YAAY,IAChBJ,EAAIK,KAAK,wBAAyB,GAAI,IACtCL,EAAII,YAAY,IAChBJ,EAAIK,KAAK/B,cAAcC,UAAW,IAAK,IACvCyB,EAAII,YAAY,GAChB,IAAIE,EAAahC,cAAcE,YAAYP,OACvCqC,EAAa,IACfN,EAAIK,KAAK/B,cAAcE,YAAY+B,MAAM,EAAE,IAAK,IAAK,IAEnDD,EAAa,IACfN,EAAIK,KAAK/B,cAAcE,YAAY+B,MAAM,GAAG,IAAK,IAAK,IAExDP,EAAII,YAAY,IAChBJ,EAAIQ,cAAc,CAChBC,MAAO,0BAGTT,EAAIK,KAAJ,aAAAK,OAEiD,IAA7C1C,YAAmB,eAAeC,OAC9B,KACAC,KAAKC,MAAMH,YAAmB,gBAAgBI,SAC9C,QACAF,KAAKC,MAAMH,YAAmB,gBAAgBK,WAEpD,GACA,IAEFwB,EAAc,CACZ,CACE,CACEc,QAAO,cAET,CACEA,QAAO,iBAET,CACEA,QAAO,iBAET,CACEA,QAAO,SAET,CACEA,QAAO,aAET,CACEA,QAAO,QACPC,OAAQ,CACNC,OAAQ,UAGZ,CACEF,QAAO,MACPC,OAAQ,CACNC,OAAQ,UAGZ,CACEF,QAAO,SACPC,OAAQ,CACNC,OAAQ,YAKhB,IAAIC,EAAQ,EACZnC,EAAKoC,QAAQ,SAACC,EAAMlC,GAClBgC,GAAgBE,EAAK5B,cAAcM,OAEnC,IAAIuB,EAAO,CACTD,EAAKhC,kBACLgC,EAAK/B,WACL+B,EAAK9B,cACL8B,EAAK7B,WACL6B,EAAK5B,cAAcC,UACnB,CACEsB,QAASK,EAAK5B,cAAcE,MAAMC,QAAQ,GAC1CqB,OAAQ,CACNC,OAAQ,UAIZ,CACEF,QAASO,SAASF,EAAK5B,cAAcI,QACrCoB,OAAQ,CACNC,OAAS,UAGb,CACEF,QAASO,SAASF,EAAK5B,cAAcM,QAAQD,eAAe,SAC5DmB,OAAQ,CACNC,OAAS,WAMfX,EAAUiB,KAAKF,KAGjB,IAAIG,EAAS,CACX,CACET,QAAO,oBAAAD,OAAsB/B,EAAKV,QAClCH,QAAS,EACT8C,OAAQ,CACNC,OAAQ,SACRQ,UAAW,UACXC,UAAW,SAGf,CACEX,QAASO,SAASJ,GAAOrB,eAAe,SACxCmB,OAAQ,CACNC,OAAQ,QACRQ,UAAW,UACXC,UAAW,UAIjBpB,EAAUiB,KAAKC,GAEf,IAAIG,EAAU,CACZ,CACEZ,QAAO,cAAAD,OAAgBxC,KAAKC,MAAMH,YAAmB,aAAawD,QAA3D,OAAAd,OAAwEe,eAC/E3D,QAAS,EACT8C,OAAQ,CAENc,UAAW,SACXJ,UAAW,UAKjBpB,EAAUiB,KAAKI,GAEfvB,EAAI2B,UAAU,CACZC,KAAM/B,EACNgC,KAAM3B,EAEN4B,OAAQ3B,EACR4B,MAAO,QACPC,aAAc,QAEdC,OAAQ,CAAEC,IAAK,IACfC,WAAY,CAGVC,SAAU,GAEZC,WAAY,CAGVD,SAAU,GAEZE,WAAY,CACVF,SAAU,EAGVf,UAAW,UACXC,UAAW,QAEbiB,eAAgB,CAAC,IAAK,IAAK,KAC3BC,eAAgB,IAElBrC,EAASH,EAAIyC,mBAAqB,EAClCvC,EAAY,GAeZ,IAAMwC,EAAQ1C,EAAI2C,SAASC,mBACrBC,EAAY7C,EAAI2C,SAASG,SAASC,MAClCC,EAAahD,EAAI2C,SAASG,SAASG,OACzCjD,EAAII,YAAY,IAChB,IAAK,IAAI8C,EAAI,EAAGA,EAAIR,EAAQ,EAAGQ,IAAK,CAClC,IAAIC,EAAgBN,EAAY,EAC5BO,EAAcJ,EAAa,GAC/BhD,EAAIqD,QAAQH,GACZlD,EAAIK,KAAJ,GAAAK,OAAYwC,EAAZ,QAAAxC,OAAoBgC,GAASS,EAAeC,EAAa,CACvDE,MAAO,WAIXtD,EAAIuD,KAAJ,iDC9MIC,oDACJ,SAAAA,EAAY/G,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA2G,IACjB9G,EAAAI,EAAAC,KAAAF,KAAMJ,IACDO,MAAQ,CACXyG,KAAM,IAAIC,KACVC,QAAU,CACR,CACEC,UAAW,oBACXvD,KAAM,aACNwD,YAAa,CACX/F,QAAS,KAEXsD,OAAQ,SAAC0C,EAAMjF,EAAKkF,EAAKjF,GACvB,OACE7B,EAAAC,EAAAC,cAAA,gCACqBT,EAAKD,MAAMuH,gBAAgB/F,OAAQ,OAK9D,CACE2F,UAAW,aACXvD,KAAM,iBAER,CACEuD,UAAW,gBACXvD,KAAM,iBAGR,CACEuD,UAAW,kBACXvD,KAAM,UAER,CACEuD,UAAW,aACXvD,KAAM,SAER,CACEuD,UAAW,0BACXvD,KAAM,aAER,CACEuD,UAAW,sBACXvD,KAAM,QACN4D,cAAe,aACfC,UAAW,SAACJ,GACV,OAAO7G,EAAAC,EAAAC,cAAA,OAAKI,UAAU,cAAcuG,EAAKvE,QAAQ,MAGrD,CACEqE,UAAW,uBACXvD,KAAM,SACN4D,cAAe,aACfC,UAAW,SAACJ,GACV,OACE7G,EAAAC,EAAAC,cAAA,OAAKI,UAAU,cAAcuG,EAAKrE,eAAe,cAM3D/C,EAAKyH,aAAezH,EAAKyH,aAAaC,KAAlBzH,OAAA0H,EAAA,EAAA1H,CAAAD,IACpBA,EAAK4H,YAAc5H,EAAK4H,YAAYF,KAAjBzH,OAAA0H,EAAA,EAAA1H,CAAAD,IA7DFA,0DAiEjBkD,EAA4B/C,KAAKJ,MAAMuH,sDAE5BP,GACX5G,KAAK0H,SAAS,CACZnG,SAAU,IAAIsF,KAAKD,yCAGXA,GACV5G,KAAK0H,SAAS,CACZlG,UAAW,IAAIqF,KAAKD,sCAIf,IAAAe,EAAA3H,KACP,OACEI,EAAAC,EAAAC,cAAA,QAAMsH,SAAU5H,KAAKJ,MAAMiI,aAAcC,aAAa,OACpD1H,EAAAC,EAAAC,cAAA,OAAKI,UAAU,OACbN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,YACbN,EAAAC,EAAAC,cAACyH,EAAA,EAAD,CACEC,KAAK,WACLC,UAAWC,IACXC,MAAM,eACNC,KAAK,OACLC,SAAUrI,KAAKG,MAAMoB,SACrB+G,SAAU,SAAC1B,GAAD,OAAUe,EAAKL,aAAaV,IACtC2B,YAAY,0BAIhBnI,EAAAC,EAAAC,cAAA,OAAKI,UAAU,YACbN,EAAAC,EAAAC,cAACyH,EAAA,EAAD,CACEC,KAAK,YACLC,UAAWC,IACXE,KAAK,OACLC,SAAUrI,KAAKG,MAAMqB,UACrB8G,SAAU,SAAC1B,GAAD,OAAUe,EAAKF,YAAYb,IACrCuB,MAAM,gBACNI,YAAY,2BAKhBnI,EAAAC,EAAAC,cAAA,OAAKI,UAAU,YACbN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,cACbN,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,UACE8H,KAAK,SACLI,MAAM,MACNR,KAAK,WACLtH,UAAU,6BAETV,KAAKJ,MAAM6I,UACVrI,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAAA,KAAGI,UAAU,2BADf,wBAKA,kBAKRN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACbN,EAAAC,EAAAC,cAACoI,EAAA,EAAD,CACEC,SAAS,QACT7G,KAAM9B,KAAKJ,MAAMgJ,OAAS5I,KAAKJ,MAAMuH,gBAAkB,GACvDL,QAAS9G,KAAKG,MAAM2G,QACpB+B,OAAO,EACPC,UAAU,uCAGd1I,EAAAC,EAAAC,cAAA,OAAKI,UAAWV,KAAKJ,MAAMgJ,OAAS,YAAc,oBAEhDxI,EAAAC,EAAAC,cAAA,OAAKI,UAAU,OACbN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,YACbN,EAAAC,EAAAC,cAAA,UACEyI,QAAS,kBAAMpB,EAAKqB,aACpBtI,UAAU,6BAET,IAJH,aAKa,MAGfN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,YACbN,EAAAC,EAAAC,cAAC2I,EAAD,CAAyBnH,KAAM9B,KAAKJ,MAAMuH,sBAKjDnH,KAAKJ,MAAM6I,UACZrI,EAAAC,EAAAC,cAAC4I,EAAA7I,EAAD,CACA8I,SAAO,EACPC,WAAW,sBACVC,YAAY,0BACX,aAhK4BvG,aAsKtC6D,EAA0B2C,YAAU,CAClCC,KAAM,0BACNC,oBAAoB,EACpBC,SAAUC,KAHcJ,CAIvB3C,GAEYgD,sBAAQ,SAACxJ,GACtB,MAAO,CACLyJ,cAAe,CACbrI,SAAUsI,cACVrI,UAAWqI,iBAJFF,CAOZhD,qCC7LH7G,OAAAgK,eAAAC,EAAA,cACAvB,OAAA,IAGA,IAAAwB,EAAA,WACA,SAAAC,EAAAC,EAAAtK,GACA,QAAAuK,EAAA,EAAmBA,EAAAvK,EAAAwB,OAAkB+I,IAAA,CACrC,IAAAC,EAAAxK,EAAAuK,GACAC,EAAAC,WAAAD,EAAAC,aAAA,EACAD,EAAAE,cAAA,EACA,UAAAF,MAAAG,UAAA,GACAzK,OAAAgK,eAAAI,EAAAE,EAAAlI,IAAAkI,IAIA,gBAAAI,EAAAC,EAAAC,GAGA,OAFAD,GAAAR,EAAAO,EAAAG,UAAAF,GACAC,GAAAT,EAAAO,EAAAE,GACAF,GAdA,GAkBAI,EAAaC,EAAQ,GAErBC,EAAAC,EAAAH,GAIAI,EAAAD,EAFiBF,EAAQ,IAIzB,SAAAE,EAAAE,GACA,OAAAA,KAAAC,WAAAD,EAAA,CACAE,QAAAF,GAoCA,IAAAG,EAAA,CACAzK,MAAAqK,EAAAG,QAAAE,OAAAC,WACA1K,SAAAoK,EAAAG,QAAAE,OAAAC,WACAzK,MAAAmK,EAAAG,QAAAE,OAAAC,WACA7K,GAAAuK,EAAAG,QAAAE,OACA3K,UAAAsK,EAAAG,QAAAE,OACAvK,WAAAkK,EAAAG,QAAAE,QAQAE,EAAA,SAAAC,GAGA,SAAAD,EAAA3L,IAjDA,SAAA6L,EAAAjB,GACA,KAAAiB,aAAAjB,GACA,UAAAkB,UAAA,qCAgDAC,CAAA3L,KAAAuL,GAEA,IAAA1L,EA9CA,SAAA+L,EAAA1L,GACA,IAAA0L,EACA,UAAAC,eAAA,6DAGA,OAAA3L,GAAA,kBAAAA,GAAA,oBAAAA,EAAA0L,EAAA1L,EAyCA4L,CAAA9L,MAAAuL,EAAAQ,WAAAjM,OAAAkM,eAAAT,IAAArL,KAAAF,KAAAJ,IAGA,OADAC,EAAAoM,eAAApM,EAAAoM,eAAA1E,KAAA1H,GACAA,EAyEA,OAlHA,SAAAqM,EAAAC,GACA,uBAAAA,GAAA,OAAAA,EACA,UAAAT,UAAA,kEAAAS,GAGAD,EAAAvB,UAAA7K,OAAAsM,OAAAD,KAAAxB,UAAA,CACA0B,YAAA,CACA7D,MAAA0D,EACA7B,YAAA,EACAE,UAAA,EACAD,cAAA,KAGA6B,IAAArM,OAAAwM,eAAAxM,OAAAwM,eAAAJ,EAAAC,GAAAD,EAAAH,UAAAI,GAoBAI,CAAAhB,EAkFCX,EAAA9H,WAvEDkH,EAAAuB,EAAA,EACArJ,IAAA,iBACAsG,MAAA,WACA,IAAAgE,SAKA,YAGA,OAAAA,SAAAC,eAAAzM,KAAAJ,MAAAe,OAAA+L,UAAA,UAAAF,SAAAC,eAAAzM,KAAAJ,MAAAe,OAAAgM,SAKA,YAGA,IAAAhM,EAAA6L,SAAAC,eAAAzM,KAAAJ,MAAAe,OAAAiM,UACA/L,EAAAgM,OAAA7M,KAAAJ,MAAAiB,OACAD,EAAAiM,OAAA7M,KAAAJ,MAAAgB,UAAA,OAGAkM,EAAA,CACAC,UAAAlM,GAAA,YACAF,SAGA,GAAAqM,OAAAC,UAAAC,iBAAA,CACA,IACAC,EAAA,IAAAC,KADA,ubAA4TzM,EAAA,mBAK5T,OAHA6L,SAAAC,eAAA,6BAAAY,OAAAb,CAAA,WACAQ,OAAAC,UAAAC,iBAAAC,EAAAvM,MAEA,EAGA,IAAA0M,EAAAN,OAAAR,SAAAlM,cAAA,KAMA,OALAgN,EAAAC,KAjBA,wCAiBAhC,EAAAiC,OAAAjC,EAAAkC,OAhBA,2cAgBAX,IACAQ,EAAAI,SAAA9M,EACA4L,SAAAxH,KAAA2I,YAAAL,GACAA,EAAAD,QACAb,SAAAxH,KAAA4I,YAAAN,IACA,IAEG,CACHpL,IAAA,SACAsG,MAAA,WACA,OAAAsC,EAAAK,QAAA7K,cAAA,UACAG,GAAAT,KAAAJ,MAAAa,GACAC,UAAAV,KAAAJ,MAAAc,UACA0H,KAAA,SACAW,QAAA/I,KAAAiM,gBACOjM,KAAAJ,MAAAkB,eAEJ,EACHoB,IAAA,SACAsG,MAAA,SAAAqF,GACA,OAAAb,OAAAc,KAAAC,SAAAC,mBAAAH,OAEG,CACH3L,IAAA,SACAsG,MAAA,SAAAqF,EAAAI,GACA,OAAAJ,EAAAK,QAAA,WAA+B,SAAAC,EAAAC,GAC/B,OAAAH,EAAAG,SAKA7C,EAlFA,GAqFAA,EAAAH,YACAG,EAAA8C,aA5FA,CACA5N,GAAA,yBACAC,UAAA,kBACAI,WAAA,YA0FAiJ,EAAAoB,QAAAI,oCC/JiB7B,IAZc,SAAClB,EAAO8F,GACnC,IAAMC,EAAS,GAQf,OANK/F,EAAMjH,WACTgN,EAAOhN,SAAW,mCAEfiH,EAAMhH,YACT+M,EAAO/M,UAAY,oCAEd+M","file":"static/js/47.1d507fee.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport ReactHTMLTableToExcel from \"react-html-table-to-excel\";\r\nimport {\r\n  getUserdata,\r\n  localStoragedecryp,\r\n} from \"../../../../../components/helpers/function\";\r\nclass LaporanServiceAmbilExel extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n        <ReactHTMLTableToExcel\r\n          id=\"test-table-xls-button\"\r\n          className=\"btn btn-success btn-block\"\r\n          table=\"table-to-xls\"\r\n          filename=\"Laporan Service Ambil\"\r\n          sheet=\"Laporan Service Ambil\"\r\n          buttonText=\"Export Exel\"\r\n        />\r\n        <table id=\"table-to-xls\" style={{ display: \"none\" }}>\r\n          <thead>\r\n            <tr>\r\n              <th colSpan=\"8\" style={{ textAlign: \"center\" }}>\r\n                {\" \"}\r\n                LAPORAN SERVICE AMBIL{\" \"}\r\n              </th>\r\n            </tr>\r\n            <tr>\r\n              <th colSpan=\"8\"> Periode </th>\r\n            </tr>\r\n            <tr>\r\n              <th colSpan=\"8\">\r\n                {\" \"}\r\n                {localStoragedecryp(\"tgl_laporan\").length === 0\r\n                  ? null\r\n                  : JSON.parse(localStoragedecryp(\"tgl_laporan\")).tgl_awal +\r\n                    \" s/d \" +\r\n                    JSON.parse(localStoragedecryp(\"tgl_laporan\"))\r\n                      .tgl_akhir}{\" \"}\r\n              </th>\r\n            </tr>\r\n            <tr>\r\n              <th colSpan=\"8\"> TOKO : {getUserdata().nama_toko} </th>\r\n            </tr>\r\n\r\n            <tr>\r\n              <th colSpan=\"8\"> ALAMAT : {getUserdata().alamat_toko} </th>\r\n            </tr>\r\n            <tr></tr>\r\n            <tr>\r\n              <td style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>\r\n                NO SERVICE\r\n              </td>\r\n              <td style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>\r\n                TGL TRANSAKSI\r\n              </td>\r\n              <td style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>\r\n                NAMA CUSTOMER\r\n              </td>\r\n           \r\n              <td\r\n                style={{\r\n                  backgroundColor: \"#E8E5E5\",\r\n                  color: \"#000\",\r\n                  textAlign: \"right\",\r\n                }}\r\n              >\r\n                SALES\r\n              </td>\r\n              <td\r\n                style={{\r\n                  backgroundColor: \"#E8E5E5\",\r\n                  color: \"#000\",\r\n                  textAlign: \"right\",\r\n                }}\r\n              >\r\n                DESKRIPSI\r\n              </td>\r\n              <td\r\n                style={{\r\n                  backgroundColor: \"#E8E5E5\",\r\n                  color: \"#000\",\r\n                  textAlign: \"right\",\r\n                }}\r\n              >\r\n                BERAT\r\n              </td>\r\n              <td\r\n                style={{\r\n                  backgroundColor: \"#E8E5E5\",\r\n                  color: \"#000\",\r\n                  textAlign: \"right\",\r\n                }}\r\n              >\r\n                QTY\r\n              </td>\r\n              <td\r\n                style={{\r\n                  backgroundColor: \"#E8E5E5\",\r\n                  color: \"#000\",\r\n                  textAlign: \"right\",\r\n                }}\r\n              >\r\n                ONGKOS\r\n              </td>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.props.data.map((row, index) => (\r\n              <>\r\n                <tr key={index}>\r\n                <td>{row.no_faktur_service}</td>\r\n                  <td>{row.tgl_system}</td>\r\n                  <td>{row.nama_customer}</td>\r\n                  <td>{row.kode_sales}</td>\r\n                  <td>{row.detail_barang.deskripsi}</td>\r\n                  <td style={{textAlign: \"right\",}}>&nbsp;{row.detail_barang.berat.toFixed(2)}</td>\r\n                  <td style={{textAlign: \"right\",}}>&nbsp;{row.detail_barang.jumlah.toLocaleString(\"kr-KO\")}</td>\r\n                  <td style={{textAlign: \"right\",}}>&nbsp;{row.detail_barang.ongkos.toLocaleString(\"kr-KO\")}</td>\r\n                </tr>\r\n              </>\r\n            ))}\r\n          </tbody>\r\n          <tfoot>\r\n            <tr>\r\n              <td\r\n                style={{\r\n                  backgroundColor: \"#E8E5E5\",\r\n                  color: \"#000\",\r\n                  textAlign: \"center\",\r\n                }}\r\n                colSpan=\"8\"\r\n              >\r\n                Total Transaksi {this.props.data.length}\r\n              </td>\r\n            </tr>\r\n          </tfoot>\r\n        </table>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default LaporanServiceAmbilExel;\r\n","import jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\nimport {\r\n  getToday,\r\n  getUserdata,\r\n  localStoragedecryp,\r\n} from \"../../../../../components/helpers/function\";\r\n// Date Fns is used to format the dates we receive\r\n\r\n// define a generatePDF function that accepts a tickets argument\r\nconst CetakLaporanServiceAmbilPdf = (\r\n  data = \"\",\r\n  username = \"\",\r\n  tanggal_dari = \"\",\r\n  tanggal_sampai = \"\"\r\n) => {\r\n  // initialize jsPDF\r\n  const doc = new jsPDF(\"l\", \"mm\", [297, 210]);\r\n  //   let data = JSON.parse(localStorage.getItem(\"tt_pengeluaran_barang\")) || [];\r\n  let tableRows = [];\r\n  // let footRows = [];\r\n  let tableColumn = [];\r\n  let finalY = 30;\r\n\r\n\r\n  doc.setFontSize(15);\r\n  doc.text(\"LAPORAN SERVICE AMBIL\", 14, 15);\r\n  doc.setFontSize(20);\r\n  doc.text(getUserdata().nama_toko, 200, 15);\r\n  doc.setFontSize(8);\r\n  let jml_alamat = getUserdata().alamat_toko.length;\r\n  if (jml_alamat > 20) {\r\n    doc.text(getUserdata().alamat_toko.slice(0,48), 200, 20);\r\n  }\r\n  if (jml_alamat > 50) {\r\n    doc.text(getUserdata().alamat_toko.slice(48,90), 200, 25);\r\n  }\r\n  doc.setFontSize(10);\r\n  doc.setProperties({\r\n    title: \"LAPORAN SERVICE AMBIL\",\r\n  });\r\n  //row 1\r\n  doc.text(\r\n    `PERIODE : ${\r\n      localStoragedecryp(\"tgl_laporan\").length === 0\r\n        ? null\r\n        : JSON.parse(localStoragedecryp(\"tgl_laporan\")).tgl_awal +\r\n          \" s/d \" +\r\n          JSON.parse(localStoragedecryp(\"tgl_laporan\")).tgl_akhir\r\n    }`,\r\n    14,\r\n    25\r\n  );\r\n  tableColumn = [\r\n    [\r\n      {\r\n        content: `NO SERVICE`,\r\n      },\r\n      {\r\n        content: `TGL TRANSAKSI`,\r\n      },\r\n      {\r\n        content: `NAMA CUSTOMER`,\r\n      },\r\n      {\r\n        content: `SALES`,\r\n      },\r\n      {\r\n        content: `DESKRIPSI`,\r\n      },\r\n      {\r\n        content: `BERAT`,\r\n        styles: {\r\n          halign: 'right',\r\n        },\r\n      },\r\n      {\r\n        content: `QTY`,\r\n        styles: {\r\n          halign: 'right',\r\n        },\r\n      },\r\n      {\r\n        content: `ONGKOS`,\r\n        styles: {\r\n          halign: 'right',\r\n        },\r\n      },\r\n    ],\r\n  ];\r\n  let total = 0;\r\n  data.forEach((item, index) => {\r\n    total = total + item.detail_barang.ongkos;\r\n    \r\n    let rows = [\r\n      item.no_faktur_service,\r\n      item.tgl_system,\r\n      item.nama_customer,\r\n      item.kode_sales,\r\n      item.detail_barang.deskripsi,\r\n      {\r\n        content: item.detail_barang.berat.toFixed(3),\r\n        styles: {\r\n          halign: 'right',\r\n        },\r\n      },\r\n    \r\n      {\r\n        content: parseInt(item.detail_barang.jumlah),\r\n        styles: {\r\n          halign : \"right\",\r\n        }\r\n      },\r\n      {\r\n        content: parseInt(item.detail_barang.ongkos).toLocaleString(\"kr-KO\"),\r\n        styles: {\r\n          halign : \"right\",\r\n        }\r\n      },\r\n      \r\n\r\n    ];\r\n    tableRows.push(rows)\r\n  })\r\n  \r\n  let footer = [\r\n    {\r\n      content: `Total Transaksi: ${data.length}`,\r\n      colSpan: 8,\r\n      styles: {\r\n        halign: 'center',\r\n        fillColor: \"#E8E5E5\",\r\n        textColor: \"#000\",\r\n      },\r\n    },\r\n    {\r\n      content: parseInt(total).toLocaleString(\"kr-KO\"),\r\n      styles: {\r\n        halign: \"right\",\r\n        fillColor: \"#E8E5E5\",\r\n        textColor: \"#000\",\r\n      }\r\n    },\r\n  ]\r\n  tableRows.push(footer)\r\n\r\n  let printed = [\r\n    {\r\n      content: `Printed By ${JSON.parse(localStoragedecryp(\"userdata\")).user_id} / ${getToday()}`,\r\n      colSpan: 7,\r\n      styles: {\r\n        // lineWidth: 0.1,\r\n        fontStyle: \"italic\",\r\n        textColor: \"#000\",\r\n        // fillColor: \"#E8E5E5\"\r\n      },\r\n    },\r\n  ]\r\n  tableRows.push(printed);\r\n\r\n  doc.autoTable({\r\n    head: tableColumn,\r\n    body: tableRows,\r\n    // foot: tbl_barang,\r\n    startY: finalY,\r\n    theme: \"plain\",\r\n    rowPageBreak: \"avoid\",\r\n    // pageBreak: \"avoid\",\r\n    margin: { top: 10 },\r\n    footStyles: {\r\n      // lineWidth: 0.02,\r\n      // lineColor: \"#000\",\r\n      fontSize: 8,\r\n    },\r\n    bodyStyles: {\r\n      // lineWidth: 0.02,\r\n      // lineColor: \"#000\",\r\n      fontSize: 8,\r\n    },\r\n    headStyles: {\r\n      fontSize: 8,\r\n      // lineWidth: 0.02,\r\n      // lineColor: \"#000\",\r\n      fillColor: \"#E8E5E5\",\r\n      textColor: \"#000\",\r\n    },\r\n    tableLineColor: [255, 255, 255],\r\n    tableLineWidth: 1,\r\n  });\r\n  finalY = doc.autoTableEndPosY() + 3;\r\n  tableRows = [];\r\n  // footRows = [];\r\n  // tbl_barang = [];\r\n  // const date = Date().split(\" \");\r\n  // we use a date string to generate our filename.\r\n  // const dateStr = date[2] + date[3] + date[4];\r\n  // ticket title. and margin-top + margin-left\r\n  // doc.text(\r\n  //   `User                          : ${\r\n  //     JSON.parse(localStoragedecryp(\"userdata\")).user_id\r\n  //   }`,\r\n  //   14,\r\n  //   finalY + 10\r\n  // );\r\n  // doc.text(`Cetak                        : ${getToday()}`, 14, finalY + 16);\r\n  const pages = doc.internal.getNumberOfPages();\r\n  const pageWidth = doc.internal.pageSize.width; //Optional\r\n  const pageHeight = doc.internal.pageSize.height; //Optional\r\n  doc.setFontSize(10); //Optional\r\n  for (let j = 1; j < pages + 1; j++) {\r\n    let horizontalPos = pageWidth / 2; //Can be fixed number\r\n    let verticalPos = pageHeight - 10; //Can be fixed number\r\n    doc.setPage(j);\r\n    doc.text(`${j} of ${pages}`, horizontalPos, verticalPos, {\r\n      align: \"center\",\r\n    });\r\n  }\r\n  // doc.autoPrint();\r\n  doc.save(`LAPORAN SERVICE AMBIL.pdf`);\r\n  // var string = doc.output(\"datauristring\");\r\n  // // var embed = \"<embed width='100%' height='100%' src='\" + string + \"'/>\";\r\n  // var x = window.open();\r\n  // x.document.open();\r\n  // x.document.write(\r\n  //   \"<html><head><title>LAPORAN SERVICE AMBIL</title></head><body style='margin:0 !important'><embed width='100%' height='100%'  src=\" +\r\n  //     string +\r\n  //     \"></embed></body></html>\"\r\n  // );\r\n  // x.document.write(embed);\r\n  // setInterval(() => {\r\n  //   x.close();\r\n  // }, 1000);\r\n};\r\n\r\nexport default CetakLaporanServiceAmbilPdf;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { InputDate } from \"../../../../components/helpers/field\";\r\nimport { getTglSystem } from \"../../../../components/helpers/function\";\r\nimport Tabel from \"../../../../components/helpers/tabel\";\r\nimport ValidasiTanggalLaporan from \"../../../../Validasi/ValidasiTanggalLaporan\";\r\nimport LaporanServiceAmbilExel from \"./exel/LaporanServiceAmbilExel\";\r\n// import CetakLaporanServiceExel from \"./exel/CetakLaporanServiceExel\";\r\n// import CetakLaporanBatalHutangExel from \"./exel/CetakLaporanBatalHutangExel\";\r\nimport CetakLaporanServiceAmbilPdf from \"./pdf/CetakLaporanServiceAmbilPdf\";\r\nimport Loading from 'react-fullscreen-loading';\r\nclass HeadLaporanServiceAmbil extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      date: new Date(),\r\n      columns : [\r\n        {\r\n          dataField: \"no_faktur_service\",\r\n          text: \"No Service\",\r\n          footerAttrs: {\r\n            colSpan: \"8\",\r\n          },\r\n          footer: (cell, row, num, index) => {\r\n            return (\r\n              <div>\r\n                Total Transaksi : {this.props.LaporanServices.length}{\" \"}\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n        {\r\n          dataField: \"tgl_system\",\r\n          text: \"Tgl Transaksi\",\r\n        },\r\n        {\r\n          dataField: \"nama_customer\",\r\n          text: \"Nama Customer\",\r\n        },\r\n  \r\n        {\r\n          dataField: \"alamat_customer\",\r\n          text: \"Alamat\",\r\n        },\r\n        {\r\n          dataField: \"kode_sales\",\r\n          text: \"Sales\",\r\n        },\r\n        {\r\n          dataField: \"detail_barang.deskripsi\",\r\n          text: \"Deskripsi\",\r\n        },\r\n        {\r\n          dataField: \"detail_barang.berat\",\r\n          text: \"Berat\",\r\n          headerClasses: \"text-right\",\r\n          formatter: (cell) => {\r\n            return <div className=\"text-right\">{cell.toFixed(2)}</div>;\r\n          },\r\n        },\r\n        {\r\n          dataField: \"detail_barang.ongkos\",\r\n          text: \"Ongkos\",\r\n          headerClasses: \"text-right\",\r\n          formatter: (cell) => {\r\n            return (\r\n              <div className=\"text-right\">{cell.toLocaleString(\"kr-KO\")}</div>\r\n            );\r\n          },\r\n        },\r\n      ]\r\n    };\r\n    this.setStartDate = this.setStartDate.bind(this);\r\n    this.setLastDate = this.setLastDate.bind(this);\r\n  }\r\n\r\n  exportPdf() {\r\n    CetakLaporanServiceAmbilPdf(this.props.LaporanServices);\r\n  }\r\n  setStartDate(date) {\r\n    this.setState({\r\n      tgl_awal: new Date(date),\r\n    });\r\n  }\r\n  setLastDate(date) {\r\n    this.setState({\r\n      tgl_akhir: new Date(date),\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.props.handleSubmit} autoComplete=\"off\">\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-4\">\r\n            <Field\r\n              name=\"tgl_awal\"\r\n              component={InputDate}\r\n              label=\"Tanggal Dari\"\r\n              type=\"text\"\r\n              selected={this.state.tgl_awal}\r\n              onChange={(date) => this.setStartDate(date)}\r\n              placeholder=\"Masukan Tanggal Dari\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"col-lg-4\">\r\n            <Field\r\n              name=\"tgl_akhir\"\r\n              component={InputDate}\r\n              type=\"text\"\r\n              selected={this.state.tgl_akhir}\r\n              onChange={(date) => this.setLastDate(date)}\r\n              label=\"Tanggal Akhir\"\r\n              placeholder=\"Masukan Tanggal Akhir\"\r\n            />\r\n          </div>\r\n\r\n       \r\n          <div className=\"col-lg-4\">\r\n            <div className=\"text-right\">\r\n              <label>&nbsp;</label>\r\n              <button\r\n                type=\"submit\"\r\n                value=\"PDF\"\r\n                name=\"type_btn\"\r\n                className=\"btn btn-primary btn-block\"\r\n              >\r\n                {this.props.isLoading ? (\r\n                  <>\r\n                    <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Sedang\r\n                    Mencari\r\n                  </>\r\n                ) : (\r\n                  \"Cari Laporan\"\r\n                )}\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-lg-12\">\r\n            <Tabel\r\n              keyField=\"no_hp\"\r\n              data={this.props.export ? this.props.LaporanServices : []}\r\n              columns={this.state.columns}\r\n              empty={true}\r\n              textEmpty=\"Data Laporan Service Ambil Kosong\"\r\n            />\r\n          </div>\r\n          <div className={this.props.export ? \"col-lg-12\" : \"col-lg-12 d-none\"}>\r\n            {/* <label htmlFor=\"\">&nbsp;</label> */}\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-6\">\r\n                <button\r\n                  onClick={() => this.exportPdf()}\r\n                  className=\"btn btn-warning btn-block\"\r\n                >\r\n                  {\" \"}\r\n                  Export PDF{\" \"}\r\n                </button>\r\n              </div>\r\n              <div className=\"col-lg-6\">\r\n                <LaporanServiceAmbilExel data={this.props.LaporanServices} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {this.props.isLoading ? (\r\n        <Loading \r\n        loading\r\n        background=\"rgba(0, 0, 0, 0.35)\"\r\n         loaderColor=\"rgba(94, 147, 117, 1)\" />\r\n      ) : null}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nHeadLaporanServiceAmbil = reduxForm({\r\n  form: \"HeadLaporanServiceAmbil\",\r\n  enableReinitialize: true,\r\n  validate: ValidasiTanggalLaporan,\r\n})(HeadLaporanServiceAmbil);\r\n// export default connect()(HeadLaporanServiceAmbil);\r\nexport default connect((state) => {\r\n  return {\r\n    initialValues: {\r\n      tgl_awal: getTglSystem(),\r\n      tgl_akhir: getTglSystem(),\r\n    },\r\n  };\r\n})(HeadLaporanServiceAmbil);\r\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n/* global window, document, Blob */\n\n\nvar propTypes = {\n  table: _propTypes2.default.string.isRequired,\n  filename: _propTypes2.default.string.isRequired,\n  sheet: _propTypes2.default.string.isRequired,\n  id: _propTypes2.default.string,\n  className: _propTypes2.default.string,\n  buttonText: _propTypes2.default.string\n};\nvar defaultProps = {\n  id: 'button-download-as-xls',\n  className: 'button-download',\n  buttonText: 'Download'\n};\n\nvar ReactHTMLTableToExcel = function (_Component) {\n  _inherits(ReactHTMLTableToExcel, _Component);\n\n  function ReactHTMLTableToExcel(props) {\n    _classCallCheck(this, ReactHTMLTableToExcel);\n\n    var _this = _possibleConstructorReturn(this, (ReactHTMLTableToExcel.__proto__ || Object.getPrototypeOf(ReactHTMLTableToExcel)).call(this, props));\n\n    _this.handleDownload = _this.handleDownload.bind(_this);\n    return _this;\n  }\n\n  _createClass(ReactHTMLTableToExcel, [{\n    key: 'handleDownload',\n    value: function handleDownload() {\n      if (!document) {\n        if (process.env.NODE_ENV !== 'production') {\n          console.error('Failed to access document object');\n        }\n\n        return null;\n      }\n\n      if (document.getElementById(this.props.table).nodeType !== 1 || document.getElementById(this.props.table).nodeName !== 'TABLE') {\n        if (process.env.NODE_ENV !== 'production') {\n          console.error('Provided table property is not html table element');\n        }\n\n        return null;\n      }\n\n      var table = document.getElementById(this.props.table).outerHTML;\n      var sheet = String(this.props.sheet);\n      var filename = String(this.props.filename) + '.xls';\n      var uri = 'data:application/vnd.ms-excel;base64,';\n      var template = '<html xmlns:o=\"urn:schemas-microsoft-com:office:office\" xmlns:x=\"urn:schemas-mic' + 'rosoft-com:office:excel\" xmlns=\"http://www.w3.org/TR/REC-html40\"><head><meta cha' + 'rset=\"UTF-8\"><!--[if gte mso 9]><xml><x:ExcelWorkbook><x:ExcelWorksheets><x:Exce' + 'lWorksheet><x:Name>{worksheet}</x:Name><x:WorksheetOptions><x:DisplayGridlines/>' + '</x:WorksheetOptions></x:ExcelWorksheet></x:ExcelWorksheets></x:ExcelWorkbook></' + 'xml><![endif]--></head><body>{table}</body></html>';\n      var context = {\n        worksheet: sheet || 'Worksheet',\n        table: table\n      }; // If IE11\n\n      if (window.navigator.msSaveOrOpenBlob) {\n        var fileData = ['' + ('<html xmlns:o=\"urn:schemas-microsoft-com:office:office\" xmlns:x=\"urn:schemas-mic' + 'rosoft-com:office:excel\" xmlns=\"http://www.w3.org/TR/REC-html40\"><head><meta cha' + 'rset=\"UTF-8\"><!--[if gte mso 9]><xml><x:ExcelWorkbook><x:ExcelWorksheets><x:Exce' + 'lWorksheet><x:Name>{worksheet}</x:Name><x:WorksheetOptions><x:DisplayGridlines/>' + '</x:WorksheetOptions></x:ExcelWorksheet></x:ExcelWorksheets></x:ExcelWorkbook></' + 'xml><![endif]--></head><body>') + table + '</body></html>'];\n        var blobObject = new Blob(fileData);\n        document.getElementById('react-html-table-to-excel').click()(function () {\n          window.navigator.msSaveOrOpenBlob(blobObject, filename);\n        });\n        return true;\n      }\n\n      var element = window.document.createElement('a');\n      element.href = uri + ReactHTMLTableToExcel.base64(ReactHTMLTableToExcel.format(template, context));\n      element.download = filename;\n      document.body.appendChild(element);\n      element.click();\n      document.body.removeChild(element);\n      return true;\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      return _react2.default.createElement('button', {\n        id: this.props.id,\n        className: this.props.className,\n        type: 'button',\n        onClick: this.handleDownload\n      }, this.props.buttonText);\n    }\n  }], [{\n    key: 'base64',\n    value: function base64(s) {\n      return window.btoa(unescape(encodeURIComponent(s)));\n    }\n  }, {\n    key: 'format',\n    value: function format(s, c) {\n      return s.replace(/{(\\w+)}/g, function (m, p) {\n        return c[p];\n      });\n    }\n  }]);\n\n  return ReactHTMLTableToExcel;\n}(_react.Component);\n\nReactHTMLTableToExcel.propTypes = propTypes;\nReactHTMLTableToExcel.defaultProps = defaultProps;\nexports.default = ReactHTMLTableToExcel;","const ValidasiTanggalLaporan = (value, event) => {\r\n    const errors = {};\r\n    // console.log(event.charCode==13);\r\n    if (!value.tgl_awal) {\r\n      errors.tgl_awal = \"Tanggal Awal Tidak Boleh Kosong\";\r\n    }\r\n    if (!value.tgl_akhir) {\r\n      errors.tgl_akhir = \"Tanggal Akhir Tidak Boleh Kosong\";\r\n    }\r\n    return errors;\r\n  };\r\n  \r\n  export default ValidasiTanggalLaporan;\r\n  "],"sourceRoot":""}