{"version":3,"sources":["pages/DataMaster/Berlian/BatuSymetry/HeadBatuSymetry.jsx","pages/DataMaster/Berlian/BatuSymetry/index.jsx"],"names":["HeadBatuSymetry","props","_this","Object","classCallCheck","this","_super","call","state","isLoading","handleSubmit","bind","assertThisInitialized","_this2","setTimeout","isEdit","document","getElementById","focus","_this3","library","createElement","onSubmit","autoComplete","onKeyPress","e","key","preventDefault","id","tabIndex","name","component","HiidenFiled","type","ReanderField","label","readOnly","placeholder","onBlur","setState","aktif","className","onClick","dispatch","hideModal","disabled","submitting","Fragment","loading","background","loaderColor","React","Component","reduxForm","form","enableReinitialize","connect","initialValues","datamaster","ShowDataModal","kode_symmetry","nama_symmetry","BatuSymetry","columns","dataField","text","csvExport","headerClasses","formatter","rowcontent","row","dataEdit","_id","editData","hapusData","data","putDataNoTImeOut","then","res","ToastNotification","message","getDataSymetry","reset","catch","err","_err$response","_err$response$data","response","postDataNoTImeOut","_err$response2","_err$response2$data","showModal","Swal","fire","html","icon","position","cancelButtonText","showCancelButton","confirmButtonText","showConfirmButton","result","isConfirmed","deleteData","_this4","to","keyField","tambahData","handleClick","exportCsv","empty","textEmpty","size","title","content","BatuSymetry_HeadBatuSymetry"],"mappings":"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","file":"static/js/102.f7e6fd00.chunk.js","sourcesContent":["import {\r\n  Field,\r\n  React,\r\n  connect,\r\n  reduxForm,\r\n  Loading,\r\n  ReanderField,\r\n  hideModal,\r\n  HiidenFiled,\r\n} from \"../../../../components/helpers/library\";\r\n\r\nconst maptostate = (state) => {\r\n  return {\r\n    initialValues: {\r\n      id: state.datamaster.ShowDataModal.id,\r\n      kode_symmetry: state.datamaster.ShowDataModal.kode_symmetry,\r\n      nama_symmetry: state.datamaster.ShowDataModal.nama_symmetry,\r\n    },\r\n  };\r\n};\r\nclass HeadBatuSymetry extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n    };\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleSubmit() {}\r\n\r\n  componentDidMount() {\r\n    setTimeout(() => {\r\n      if (this.props.isEdit) {\r\n        document.getElementById(\"nama_symmetry\").focus();\r\n      } else {\r\n        document.getElementById(\"kode_symmetry\").focus();\r\n      }\r\n    }, 100);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form\r\n        onSubmit={this.props.handleSubmit}\r\n        autoComplete=\"off\"\r\n        onKeyPress={(e) => {\r\n          e.key === \"Enter\" && e.preventDefault();\r\n        }}\r\n      >\r\n        <Field\r\n          id=\"id\"\r\n          tabIndex=\"1\"\r\n          name=\"id\"\r\n          component={HiidenFiled}\r\n          type=\"hidden\"\r\n        />\r\n        <Field\r\n          id=\"kode_symmetry\"\r\n          tabIndex=\"1\"\r\n          name=\"kode_symmetry\"\r\n          component={ReanderField}\r\n          type=\"text\"\r\n          label=\"Kode Symetry\"\r\n          readOnly={this.props.isEdit}\r\n          placeholder=\"Masukan Kode Symetry\"\r\n        />\r\n        <Field\r\n          id=\"nama_symmetry\"\r\n          tabIndex=\"2\"\r\n          name=\"nama_symmetry\"\r\n          component={ReanderField}\r\n          type=\"text\"\r\n          label=\"Nama Symetry\"\r\n          placeholder=\"Masukan Nama Symetry\"\r\n          onBlur={() => this.setState({ aktif: true })}\r\n        />\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-12 text-right\">\r\n            <button\r\n              className=\"btn btn-white\"\r\n              onClick={() => this.props.dispatch(hideModal())}\r\n              type=\"button\"\r\n              disabled={this.props.isLoading}\r\n            >\r\n              Batal\r\n            </button>\r\n            &nbsp;\r\n            <button\r\n              tabIndex=\"3\"\r\n              className={this.state.aktif ? \"btn btn-primary\" : \"btn btn-white\"}\r\n              disabled={this.props.submitting}\r\n              type=\"submit\"\r\n            >\r\n              {this.props.isLoading ? (\r\n                <>\r\n                  <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Sedang\r\n                  Menyimpan\r\n                </>\r\n              ) : (\r\n                \"Simpan Data\"\r\n              )}\r\n            </button>\r\n          </div>\r\n        </div>\r\n        {this.props.isLoading ? (\r\n          <Loading\r\n            loading\r\n            background=\"rgba(0, 0, 0, 0.35)\"\r\n            loaderColor=\"rgba(94, 147, 117, 1)\"\r\n          />\r\n        ) : null}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nHeadBatuSymetry = reduxForm({\r\n  form: \"HeadBatuSymetry\",\r\n  enableReinitialize: true,\r\n})(HeadBatuSymetry);\r\nexport default connect(maptostate)(HeadBatuSymetry);\r\n","import {\r\n  ShowDataModal,\r\n  getDataSymetry,\r\n} from \"../../../../actions/datamaster_action\";\r\n\r\nimport {\r\n  React,\r\n  connect,\r\n  Link,\r\n  reduxForm,\r\n  Panel,\r\n  PanelHeader,\r\n  PanelBody,\r\n  ModalGlobal,\r\n  Tabel,\r\n  showModal,\r\n  deleteData,\r\n  postDataNoTImeOut,\r\n  ToastNotification,\r\n  reset,\r\n  putDataNoTImeOut,\r\n  hideModal,\r\n  Swal,\r\n} from \"../../../../components/helpers/library\";\r\nimport HeadBatuSymetry from \"./HeadBatuSymetry\";\r\n\r\nconst maptostate = (state) => {\r\n  return {\r\n    data: state.datamaster.getDataSymetry,\r\n  };\r\n};\r\nclass BatuSymetry extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      columns: [\r\n        {\r\n          dataField: \"kode_symmetry\",\r\n          text: \"Kode Symetry\",\r\n        },\r\n        {\r\n          dataField: \"nama_symmetry\",\r\n          text: \"Nama Symetry\",\r\n        },\r\n        {\r\n          dataField: \"action\",\r\n          text: \"Action\",\r\n          csvExport: false,\r\n          headerClasses: \"text-center\",\r\n          formatter: (rowcontent, row) => {\r\n            let dataEdit = {\r\n              id: row._id || 1,\r\n              kode_symmetry: row.kode_symmetry,\r\n              nama_symmetry: row.nama_symmetry,\r\n            };\r\n            return (\r\n              <div className=\"row text-center\">\r\n                <div className=\"col-12\">\r\n                  <button\r\n                    onClick={() => this.editData(dataEdit)}\r\n                    className=\"btn btn-primary mr-3\"\r\n                  >\r\n                    <i className=\"fa fa-edit\"></i>\r\n                  </button>\r\n                  <button\r\n                    onClick={() => this.hapusData(row)}\r\n                    className=\"btn btn-danger\"\r\n                  >\r\n                    <i className=\"fa fa-trash\"></i>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n      ],\r\n    };\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    // this.print = this.print.bind(this);\r\n  }\r\n\r\n  handleSubmit(data) {\r\n    this.setState({\r\n      isLoading: true,\r\n    });\r\n    this.state.isEdit\r\n      ? putDataNoTImeOut(\"batu-symmetry/\"+ data.id, data)\r\n          .then((res) => {\r\n            this.setState({\r\n              isLoading: false,\r\n            });\r\n            ToastNotification(\r\n              \"success\",\r\n              res.data.message || \"Data Berhasil Disimpan\"\r\n            );\r\n            this.props.dispatch(getDataSymetry());\r\n            this.props.dispatch(hideModal());\r\n            this.props.dispatch(reset());\r\n          })\r\n          .catch((err) => {\r\n            this.setState({\r\n              isLoading: false,\r\n            });\r\n            ToastNotification(\r\n              \"success\",\r\n              err.response?.data?.message || \"Data Gagak Disimpan\"\r\n            );\r\n          })\r\n      : postDataNoTImeOut(\"batu-symmetry\", data)\r\n          .then((res) => {\r\n            this.setState({\r\n              isLoading: false,\r\n            });\r\n            this.props.dispatch(hideModal());\r\n            ToastNotification(\r\n              \"success\",\r\n              res.data.message || \"Data Berhasil Disimpan\"\r\n            );\r\n            this.props.dispatch(getDataSymetry());\r\n            this.props.dispatch(reset());\r\n          })\r\n          .catch((err) => {\r\n            this.setState({\r\n              isLoading: false,\r\n            });\r\n            ToastNotification(\r\n              \"success\",\r\n              err.response?.data?.message || \"Data Gagak Disimpan\"\r\n            );\r\n          });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.dispatch(getDataSymetry());\r\n  }\r\n\r\n  editData(data) {\r\n    this.props.dispatch(showModal());\r\n    this.props.dispatch(ShowDataModal(data));\r\n    this.setState({\r\n      isEdit: true,\r\n    });\r\n  }\r\n  showModal() {\r\n    this.props.dispatch(showModal());\r\n    this.props.dispatch(ShowDataModal(true));\r\n    this.setState({\r\n      isEdit: false,\r\n    });\r\n  }\r\n\r\n  hapusData(row) {\r\n    Swal.fire({\r\n      // title: \"Anda Yakin !!\",\r\n      // text: \"Ingin Menghapus Data Ini ?\",\r\n      html:\r\n        \"Apakah Anda Yakin Ingin \" +\r\n        \"Menghapus \" +\r\n        \"<h1><b>Kode Syemetry \" +\r\n        row.kode_symmetry +\r\n        \"</b> ?</h1>\",\r\n      icon: \"warning\",\r\n      position: \"top-center\",\r\n      cancelButtonText: \"Tidak\",\r\n      showCancelButton: true,\r\n      confirmButtonText: \"OK\",\r\n      showConfirmButton: true,\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        deleteData('batu-symmetry/'+row._id).then((res)=>{\r\n          ToastNotification('success',res.data.message || \"Data Berhasil Dihapus\")\r\n          this.props.dispatch(getDataSymetry())\r\n        }).catch((err)=>{\r\n          ToastNotification('info',err.response.data || \"Data Berhasil Dihapus\")\r\n\r\n        })\r\n      }\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ol className=\"breadcrumb float-xl-right\">\r\n          <li className=\"breadcrumb-item\">\r\n            <Link to=\"#\">Data Master</Link>\r\n          </li>\r\n          <li className=\"breadcrumb-item\">\r\n            <Link to=\"#\">Data Berlian</Link>\r\n          </li>\r\n          <li className=\"breadcrumb-item active\">Batu Symetry</li>\r\n        </ol>\r\n        <h1 className=\"page-header\">Batu Symetry </h1>\r\n        <Panel>\r\n          <PanelHeader>Batu Symetry</PanelHeader>\r\n          <PanelBody>\r\n            <Tabel\r\n              keyField=\"kode_symmetry\"\r\n              tambahData={true}\r\n              handleClick={() => this.showModal()}\r\n              exportCsv={true}\r\n              data={this.props.data}\r\n              columns={this.state.columns}\r\n              empty={this.props.data}\r\n              textEmpty=\"Batu Symetry Kosong\"\r\n            />\r\n          </PanelBody>\r\n        </Panel>\r\n\r\n        <ModalGlobal\r\n          size=\"P\"\r\n          title={\r\n            this.state.isEdit ? \"Edit Data Symetry\" : \"Tambah Data Symetry\"\r\n          }\r\n          content={\r\n            <HeadBatuSymetry\r\n              isLoading={this.state.isLoading}\r\n              isEdit={this.state.isEdit}\r\n              onSubmit={(data) => this.handleSubmit(data)}\r\n            />\r\n          }\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nBatuSymetry = reduxForm({\r\n  form: \"BatuSymetry\",\r\n  enableReinitialize: true,\r\n})(BatuSymetry);\r\nexport default connect(maptostate)(BatuSymetry);\r\n"],"sourceRoot":""}