{"version":3,"sources":["pages/Laporan/LaporanBarang/LaporanPindahBarang/exel/LaporanPindahBarangExel.jsx","pages/Laporan/LaporanBarang/LaporanPindahBarang/pdf/CetakLaporanPindahBarang.jsx","pages/Laporan/LaporanBarang/LaporanPindahBarang/HeadPindahBarang.jsx","pages/Laporan/LaporanBarang/LaporanPindahBarang/FormLaporanPindahBarang.jsx","../node_modules/react-html-table-to-excel/index.js","Validasi/ValidasiTanggalLaporan.jsx"],"names":["LaporanPindahBarangExel","props","_this","Object","classCallCheck","this","_super","call","state","berat","berat_atribut","data","forEach","barang","index","detail","item","stock_on_hand","length","react_default","a","createElement","Fragment","react_html_table_to_excel_default","id","className","table","filename","sheet","buttonText","rowkey","style","display","colSpan","localStoragedecryp","JSON","parse","tgl_awal","tgl_akhir","getUserdata","nama_toko","alamat_toko","backgroundColor","color","map","no","row","key","no_pindah","textAlign","kode_gudang_asal","kode_baki_asal","kode_gudang","kode_baki","kode_barcode","nama_barang","nama_atribut","formatGram","Component","CetakLaporanPindahBarang","arguments","undefined","doc","jsPDF","tableRows","footRows","finalY","grantotalberat","grantotalberatatr","setFontSize","text","jml_alamat","slice","setProperties","title","concat","i","rows","content","styles","halign","parseFloat","push","footer","fillColor","textColor","printed","user_id","getToday","fontStyle","autoTable","head","body","foot","startY","theme","rowPageBreak","margin","top","footStyles","fontSize","bodyStyles","headStyles","autoTableEndPosY","pages","internal","getNumberOfPages","pageWidth","pageSize","width","pageHeight","height","j","horizontalPos","verticalPos","setPage","align","save","HeadPindahBarang","date","Date","setStartDate","bind","assertThisInitialized","setLastDate","LaporanDataBarang","setState","_this2","databarang","element","columns","dataField","footerAttrs","cell","num","headerClasses","formatter","columnData","reduce","acc","onSubmit","handleSubmit","autoComplete","Field","name","component","InputDate","label","type","selected","onChange","placeholder","value","isLoading","tabel","keyField","export","empty","textEmpty","onClick","exportPdf","exel_LaporanPindahBarangExel","loading_default","loading","background","loaderColor","reduxForm","form","enableReinitialize","validate","ValidasiTanggalLaporan","connect","initialValues","getTglSystem","FormLaporanPindahBarang","isEdit","modalDialog","username","data_post","formatDate","moment","format","postDataNoTImeOut","then","res","ToastNotification","localStorageencryp","stringify","catch","error","errorHandling","err","NotifError","_this3","react_router_dom","to","panel","LaporanPindahBarang_HeadPindahBarang","React","hideModal","datamaster","defineProperty","exports","_createClass","defineProperties","target","descriptor","enumerable","configurable","writable","Constructor","protoProps","staticProps","prototype","_react","__webpack_require__","_react2","_interopRequireDefault","_propTypes2","obj","__esModule","default","propTypes","string","isRequired","ReactHTMLTableToExcel","_Component","instance","TypeError","_classCallCheck","self","ReferenceError","_possibleConstructorReturn","__proto__","getPrototypeOf","handleDownload","subClass","superClass","create","constructor","setPrototypeOf","_inherits","document","getElementById","nodeType","nodeName","outerHTML","String","context","worksheet","window","navigator","msSaveOrOpenBlob","blobObject","Blob","click","href","base64","download","appendChild","removeChild","s","btoa","unescape","encodeURIComponent","c","replace","m","p","defaultProps","event","errors"],"mappings":"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","file":"static/js/31.0b2a24a5.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport ReactHTMLTableToExcel from \"react-html-table-to-excel\";\r\nimport { localStoragedecryp,formatGram, getUserdata } from \"../../../../../components/helpers/function\";\r\nclass LaporanPindahBarangExel extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  render() {\r\n    let stock_on_hand = 0;\r\n    let berat = 0;\r\n    let berat_atribut = 0;\r\n    let total_barang = 0;\r\n    this.props.data.forEach((barang, index) => {\r\n      barang.detail.forEach((item, index) => {\r\n        stock_on_hand = stock_on_hand + item.stock_on_hand;\r\n        berat_atribut = berat_atribut + item.berat_atribut;\r\n        berat = berat + item.berat;\r\n      });\r\n      total_barang = total_barang + barang.detail.length;\r\n    });\r\n    return (\r\n      <>\r\n        <ReactHTMLTableToExcel\r\n          id=\"test-table-xls-button\"\r\n          className=\"btn btn-success btn-block\"\r\n          table=\"table-to-xls\"\r\n          filename=\"Laporan Pindah Barang\"\r\n          sheet=\"Laporan Pindah Barang\"\r\n          buttonText=\"Export Exel\"\r\n        />\r\n        <table\r\n          rowkey=\"kode_member\"\r\n          id=\"table-to-xls\"\r\n          style={{ display: \"none\" }}\r\n        >\r\n          <thead>\r\n            <tr>\r\n              <th colSpan=\"10\"> Laporan Pindah Barang </th>\r\n            </tr>\r\n            <tr>\r\n              <th colSpan=\"10\"> Periode </th>\r\n            </tr>\r\n            <tr>\r\n              <th colSpan=\"10\">\r\n                {\" \"}\r\n                {localStoragedecryp(\"tgl_laporan\").length === 0\r\n                  ? null\r\n                  : JSON.parse(localStoragedecryp(\"tgl_laporan\")).tgl_awal +\r\n                    \" s/d \" +\r\n                    JSON.parse(localStoragedecryp(\"tgl_laporan\"))\r\n                      .tgl_akhir}{\" \"}\r\n              </th>\r\n            </tr>\r\n            <tr>\r\n              <th colSpan=\"10\"> TOKO :  {getUserdata().nama_toko} </th>\r\n            </tr>\r\n           \r\n            <tr>\r\n              <th colSpan=\"10\"> ALAMAT :  {getUserdata().alamat_toko} </th>\r\n            </tr>\r\n            <tr>\r\n              <th colSpan=\"10\"></th>\r\n            </tr>\r\n            <tr>\r\n              <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>NO</th>\r\n              <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>\r\n                GUDANG ASAL\r\n              </th>\r\n              <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>\r\n                BAKI ASAl\r\n              </th>\r\n              <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>\r\n                GUDANG\r\n              </th>\r\n              <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>\r\n                BAKI TUJUAN\r\n              </th>\r\n              <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>\r\n                BARCODE\r\n              </th>\r\n              <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>\r\n                NAMA BARANG\r\n              </th>\r\n             \r\n              <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>\r\n                NAMA ATRIBUT\r\n              </th>\r\n              <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>\r\n                BERAT ATRIBUT\r\n              </th>\r\n              <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>\r\n                BERAT\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.props.data.map((item, no) => (\r\n              <>\r\n                {/* <tr>\r\n                  <th style={{ textAlign: \"left\" }}> No Pindah </th>\r\n                  <th colSpan=\"9\" style={{ textAlign: \"left\" }}>\r\n                    {\" \"}\r\n                    {item._id.no_pindah}{\" \"}\r\n                  </th>\r\n                </tr> */}\r\n\r\n                {item.detail.map((row, index) => (\r\n                  <tr key={row.no_pindah}>\r\n                    <td style={{textAlign : \"center\"}}> {++no}</td>\r\n                    <td> {row.kode_gudang_asal}</td>\r\n                    <td> {row.kode_baki_asal}</td>\r\n                    <td style={{textAlign : \"center\"}}> {row.kode_gudang}</td>\r\n                    <td style={{textAlign : \"center\"}}> {row.kode_baki}</td>\r\n                    <td>&nbsp;{row.kode_barcode}</td>\r\n                    <td> {row.nama_barang}</td>\r\n                    <td> {row.nama_atribut}</td>\r\n                    <td> {formatGram(row.berat_atribut,2)}</td>\r\n                    <td> {formatGram(row.berat,3)}</td>\r\n                  </tr>\r\n                ))}\r\n                {/* <tr>\r\n                <td colSpan=\"6\" style={{ backgroundColor: \"#E8E5E5\", color: \"#000\",textAlign:\"center\" }}>\r\n                  {\" \"}\r\n                  Total\r\n                </td>\r\n                <td style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>\r\n                  {\" \"}\r\n                  {item.detail\r\n                    .map((list) => list.berat)\r\n                    .reduce((a, b) => a + b, 0)}{\" \"}\r\n                </td>\r\n                <td style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}> </td>\r\n                <td style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>\r\n                  {\" \"}\r\n                  {item.detail\r\n                    .map((list) => list.berat_atribut)\r\n                    .reduce((a, b) => a + b, 0)}{\" \"}\r\n                </td>\r\n              </tr> */}\r\n              </>\r\n            ))}\r\n          </tbody>\r\n          <tfoot>\r\n            <tr>\r\n              <td\r\n                colSpan=\"7\"\r\n                style={{\r\n                  backgroundColor: \"#E8E5E5\",\r\n                  color: \"#000\",\r\n                  textAlign: \"center\",\r\n                }}\r\n              >\r\n                Total\r\n              </td>\r\n             \r\n              <td style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}> </td>\r\n              <td style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>\r\n                {formatGram(berat_atribut,2)}\r\n              </td>\r\n              <td style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>\r\n                {formatGram(berat,3)}\r\n              </td>\r\n              {/* <th\r\n              colSpan=\"9\"\r\n              style={{ backgroundColor: \"#E8E5E5\", color: \"#000\",textAlign:\"left\" }}\r\n            >\r\n              Total Brang : {total_barang} Pcs<br />\r\n              Total Berat : {berat.toFixed(3)} <br />\r\n              Total Berat Atribut : {berat_atribut.toFixed(3)}\r\n            </th> */}\r\n            </tr>\r\n          </tfoot>\r\n        </table>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default LaporanPindahBarangExel;\r\n","import jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\nimport { getToday, localStoragedecryp,formatGram, getUserdata } from \"../../../../../components/helpers/function\";\r\n// Date Fns is used to format the dates we receive\r\n\r\n// define a generatePDF function that accepts a tickets argument\r\nconst CetakLaporanPindahBarang = (\r\n  data = \"\",\r\n  username = \"\",\r\n  tanggal_dari = \"\",\r\n  tanggal_sampai = \"\",\r\n) => {\r\n  // initialize jsPDF\r\n  const doc = new jsPDF(\"l\", \"mm\", [297, 210]);\r\n  //   let data = JSON.parse(localStorage.getItem(\"tt_pengeluaran_barang\")) || [];\r\n  let tableRows = [];\r\n  let footRows = [];\r\n  let finalY = 30;\r\n  let grantotalberat = 0;\r\n  let grantotalberatatr = 0;\r\n  let total_barang = 0;\r\n\r\n  doc.setFontSize(15);\r\n  doc.text(\"LAPORAN PINDAH BARANG\", 14, 15);\r\n  doc.setFontSize(20);\r\n  doc.text(getUserdata().nama_toko, 200, 15);\r\n  doc.setFontSize(8);\r\n  let jml_alamat = getUserdata().alamat_toko.length;\r\n  if (jml_alamat > 20) {\r\n    doc.text(getUserdata().alamat_toko.slice(0,48), 200, 20);\r\n  }\r\n  if (jml_alamat > 50) {\r\n    doc.text(getUserdata().alamat_toko.slice(48,90), 200, 25);\r\n  }\r\n  doc.setFontSize(10);\r\n  doc.setProperties({\r\n    title: \"Laporan Pindah Barang\"\r\n  });\r\n  //row 1\r\n  doc.text(\r\n    `PERIODE : ${\r\n      localStoragedecryp(\"tgl_laporan\").length === 0\r\n        ? null\r\n        : JSON.parse(localStoragedecryp(\"tgl_laporan\")).tgl_awal +\r\n          \" s/d \" +\r\n          JSON.parse(localStoragedecryp(\"tgl_laporan\")).tgl_akhir\r\n    }`,\r\n    14,\r\n    25\r\n  );\r\n  let tableColumn = [\r\n    // [\r\n    //   {\r\n    //     content: `NO Pindah : ${item._id.no_pindah}`,\r\n    //     colSpan: 9,\r\n    //   },\r\n    // ],\r\n    [\r\n      {\r\n        content: `NO`,\r\n      },\r\n      {\r\n        content: `GUDANG ASAL`,\r\n      },\r\n      {\r\n        content: `BAKI ASAL`,\r\n      },\r\n      {\r\n        content: `GUDANG`,\r\n      },\r\n      {\r\n        content: `BAKI TUJUAN`,\r\n      },\r\n      {\r\n        content: `BARCODE`,\r\n      },\r\n      {\r\n        content: `NAMA BARANG`,\r\n      },\r\n    \r\n      {\r\n        content: `NAMA ATR`,\r\n      },\r\n      {\r\n        content: `BRT ATR`,\r\n        styles: {\r\n          halign: 'right'\r\n        },\r\n      },\r\n      {\r\n        content: `BERAT`,\r\n        styles: {\r\n          halign: 'right'\r\n        },\r\n      },\r\n    ],\r\n  ];\r\n  let i = 1;\r\n  data.forEach((item, index) => {\r\n    let total_berat_atribut = 0;\r\n    let total_berat = 0;\r\n    // let data = [\r\n    //   {\r\n    //     content: `NO PINDAH : ${item._id.no_pindah}`,\r\n    //     colSpan: \"9\",\r\n    //   },\r\n    // ];\r\n    // tableRows.push(data);\r\n    \r\n    item.detail.forEach((barang, index) => {\r\n      let rows = [\r\n        i,\r\n        barang.kode_gudang_asal,\r\n        barang.kode_baki_asal,\r\n        barang.kode_gudang,\r\n        barang.kode_baki,\r\n        barang.kode_barcode,\r\n        barang.nama_barang,\r\n        barang.nama_atribut,\r\n        {\r\n          content: formatGram(barang.berat_atribut, 3),\r\n          styles: {\r\n            halign: 'right'\r\n          },\r\n        },\r\n        {\r\n          content: formatGram(barang.berat, 3),\r\n          styles: {\r\n            halign: 'right'\r\n          },\r\n        }\r\n      ];\r\n      total_berat = total_berat + parseFloat(barang.berat);\r\n      total_berat_atribut = total_berat_atribut + parseFloat(barang.berat_atribut);\r\n      \r\n      grantotalberat = grantotalberat + parseFloat(barang.berat);\r\n      grantotalberatatr = grantotalberatatr + parseFloat(barang.berat_atribut);\r\n      tableRows.push(rows);\r\n      ++i\r\n    })\r\n    total_barang = total_barang+item.detail.length;\r\n    // localStorage.setItem('hasil',JSON.stringify(item.detail.length))\r\n    // console.log();\r\n    // let total = [\r\n    //   {\r\n    //     content: `Total`,\r\n    //     colSpan: 6,\r\n    //     styles: {\r\n    //       halign: 'center',\r\n    //       fillColor: \"#E8E5E5\",\r\n    //       textColor: \"#000\",\r\n    //     },\r\n    //   },\r\n    //   {\r\n    //     content: `${total_berat.toFixed(3)}`,\r\n    //     styles: {\r\n    //       fillColor: \"#E8E5E5\",\r\n    //       textColor: \"#000\",\r\n    //     },\r\n    //   },\r\n    //   {\r\n    //     content: ``,\r\n    //     styles: {\r\n    //       fillColor: \"#E8E5E5\",\r\n    //       textColor: \"#000\",\r\n    //     },\r\n    //   },\r\n    //   {\r\n    //     content: `${total_berat_atribut.toFixed(3)}`,\r\n    //     styles: {\r\n    //       fillColor: \"#E8E5E5\",\r\n    //       textColor: \"#000\",\r\n    //     },\r\n    //   },\r\n\r\n    //   // `${sub_qty}`,\r\n    // ];\r\n    // tableRows.push(total);\r\n  });\r\n  let footer = [\r\n    {\r\n      content: `Total`,\r\n      colSpan: 7,\r\n      styles: {\r\n        halign: 'center',\r\n        fillColor: \"#E8E5E5\",\r\n        textColor: \"#000\",\r\n      },\r\n    },\r\n  \r\n    {\r\n      content: ``,\r\n      styles: {\r\n        fillColor: \"#E8E5E5\",\r\n        textColor: \"#000\",\r\n      },\r\n    },\r\n    {\r\n      content: `${formatGram(grantotalberatatr, 3)}`,\r\n      styles: {\r\n        fillColor: \"#E8E5E5\",\r\n        textColor: \"#000\",\r\n        halign: 'right'\r\n\r\n      },\r\n    },\r\n    {\r\n      content: `${formatGram(grantotalberat, 3)}`,\r\n      styles: {\r\n        fillColor: \"#E8E5E5\",\r\n        textColor: \"#000\",\r\n        halign: 'right'\r\n      },\r\n    },\r\n\r\n    // `${sub_qty}`,\r\n    // {\r\n    //   content: `Total Barang : ${total_barang} Pcs \\nTotal Berat : ${grantotalberat.toFixed(\r\n    //     3\r\n    //   )}\\nTotal Berat Atribut : ${grantotalberatatr.toFixed(3)}`,\r\n    //   colSpan: 10,\r\n    //   styles: {\r\n    //     fillColor: \"#E8E5E5\",\r\n    //     textColor: \"#000\",\r\n    //   },\r\n    // },\r\n  ];\r\n\r\n  tableRows.push(footer);\r\n  let printed = [\r\n    {\r\n      colSpan:9,\r\n      content: `Printed By ${JSON.parse(localStoragedecryp(\"userdata\")).user_id} / ${getToday()}`,\r\n      styles: {\r\n        // lineWidth: 0.1,\r\n        fontStyle: \"italic\",\r\n        textColor: \"#000\",\r\n        // fillColor: \"#E8E5E5\"\r\n      },\r\n    },\r\n  ]\r\n  tableRows.push(printed);\r\n    // let footer = [\r\n    //   {\r\n    //     content: `total : `,\r\n    //     colSpan: 6,\r\n    //   },\r\n    //   `${sub_total.toFixed(3)}`,\r\n    //   \"\",\r\n    //   `${berat_atribut.toFixed(1)}`,\r\n    // ];\r\n    // footRows.push(footer);\r\n    doc.autoTable({\r\n      head: tableColumn,\r\n      body: tableRows,\r\n      foot: footRows,\r\n      startY: finalY,\r\n      theme: \"plain\",\r\n      rowPageBreak: \"avoid\",\r\n      // pageBreak: \"avoid\",\r\n      margin: { top: 10 },\r\n      footStyles: {\r\n        // lineWidth: 0.02, lineColor: \"#000\",\r\n        fontSize:8,\r\n      },\r\n      bodyStyles: {\r\n        // lineWidth: 0.02, lineColor: \"#000\",\r\n        fontSize:8,\r\n      },\r\n      headStyles: {\r\n        fontSize:8,\r\n        // lineWidth: 0.02,\r\n        // lineColor: \"#000\",\r\n        textColor: \"#000\",\r\n        fillColor: \"#E8E5E5\",\r\n      },\r\n    });\r\n    finalY = doc.autoTableEndPosY() + 3;\r\n    tableRows = [];\r\n    footRows = [];\r\n  // const date = Date().split(\" \");\r\n  // we use a date string to generate our filename.\r\n  // const dateStr = date[2] + date[3] + date[4];\r\n  // ticket title. and margin-top + margin-left\r\n\r\n  // doc.text(`User                        : ${JSON.parse(localStoragedecryp(\"userdata\")).user_id}`, 14, finalY + 10);\r\n  // doc.text(`Cetak                      : ${getToday()}`, 14, finalY + 16);\r\n  // doc.text(`Grand Total Berat   : ${parseFloat(grantotalberat).toFixed(3)}`, 14, finalY + 22);\r\n  // doc.text(`Grand Total Barang: ${parseFloat(total_barang)}`, 14, finalY + 28);\r\n  const pages = doc.internal.getNumberOfPages();\r\n  const pageWidth = doc.internal.pageSize.width; //Optional\r\n  const pageHeight = doc.internal.pageSize.height; //Optional\r\n  doc.setFontSize(10); //Optional\r\n  for (let j = 1; j < pages + 1; j++) {\r\n    let horizontalPos = pageWidth / 2; //Can be fixed number\r\n    let verticalPos = pageHeight - 10; //Can be fixed number\r\n    doc.setPage(j);\r\n    doc.text(`${j} of ${pages}`, horizontalPos, verticalPos, {\r\n      align: \"center\",\r\n    });\r\n  }\r\n  // doc.autoPrint();\r\n  doc.save(`Laporan Pindah Barang.pdf`);\r\n  // var string = doc.output(\"datauristring\");\r\n  // // var embed = \"<embed width='100%' height='100%' src='\" + string + \"'/>\";\r\n  // var x = window.open();\r\n  // x.document.open();\r\n  // x.document.write(\"<html><head><title>Laporan Pindah Barang</title></head><body style='margin:0 !important'><embed width='100%' height='100%'  src=\" + \r\n  // string + \"></embed></body></html>\");\r\n  // x.document.write(embed);\r\n  // setInterval(() => {\r\n  //   x.close();\r\n  // }, 1000);\r\n};\r\n\r\nexport default CetakLaporanPindahBarang;\r\n\r\n\r\n// import jsPDF from \"jspdf\";\r\n// import \"jspdf-autotable\";\r\n// import { getToday } from \"../../../../components/helpers/function\";\r\n// // Date Fns is used to format the dates we receive\r\n\r\n// // define a generatePDF function that accepts a tickets argument\r\n// const CetakLaporanPindahBarang = (\r\n//   data = \"\",\r\n//   username = \"\",\r\n//   tanggal_dari = \"\",\r\n//   tanggal_sampai = \"\",\r\n// ) => {\r\n//   const doc = new jsPDF('l');\r\n//   doc.setFontSize(15);\r\n//   doc.text(\"LAPORAN Pindah BARANG\", 14, 15);\r\n//   doc.setFontSize(10);\r\n//   //row 1\r\n//   doc.text(`PERIODE : ${tanggal_dari} S/d ${tanggal_sampai}`, 14, 25);\r\n//   let tableRows = [];\r\n//   let finalY = 40;\r\n//   let total = 0;\r\n//   let tableColumn = [\r\n//     \"NO\",\r\n//     \"GUDANG\",\r\n//     \"BAKI\",\r\n//     \"KODE BARANG\",\r\n//     \"KODE BARCODE\",\r\n//     \"NAMA BARANG\",\r\n//     \"JUMLAH\",\r\n//     \"BERAT\",\r\n//     \"NAMA ATRIBUTE\",\r\n//     \"BERAT ATRIBUTE\",\r\n//   ];\r\n//   data.forEach((item, index) => {\r\n//       let rows = [\r\n//         ++index,\r\n//         item.kode_gudang,\r\n//         item.kode_toko,\r\n//         item.kode_barang,\r\n//         item.kode_barcode,\r\n//         item.nama_barang,\r\n//         item.stock_on_hand,\r\n//         item.berat,\r\n//         item.nama_atribut,\r\n//         item.berat_atribut,\r\n//     ];\r\n//     total = index;\r\n//     tableRows.push(rows);\r\n  \r\n//     doc.autoTable(tableColumn, tableRows, {\r\n//       startY: 40\r\n//     });\r\n    \r\n//   });\r\n//    finalY = doc.lastAutoTable.finalY + 10;\r\n//    tableRows = [];\r\n\r\n//   doc.text(`Total Barang\t: ${total}`, 14, finalY + 5);\r\n//   doc.text(`User\t             : ${username}`, 14, finalY + 10);\r\n//   doc.text(`Tgl Cetak             : ${getToday()}`, 14, finalY + 16);\r\n\r\n//   doc.autoPrint();\r\n//   doc.save(`Laporan Pindah Barang.pdf`);\r\n// };\r\n\r\n// export default CetakLaporanPindahBarang;\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { InputDate } from \"../../../../components/helpers/field\";\r\nimport { getTglSystem,formatGram } from \"../../../../components/helpers/function\";\r\nimport Tabel from \"../../../../components/helpers/tabel\";\r\nimport ValidasiTanggalLaporan from \"../../../../Validasi/ValidasiTanggalLaporan\";\r\nimport LaporanPindahBarangExel from \"./exel/LaporanPindahBarangExel\";\r\n// import LaporanBatalServiceExel from \"./exel/LaporanBatalServiceExel\";\r\nimport CetakLaporanPindahBarang from \"./pdf/CetakLaporanPindahBarang\";\r\nimport Loading from 'react-fullscreen-loading';\r\n\r\nclass HeadPindahBarang extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      date: new Date(),\r\n    };\r\n    // this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.setStartDate = this.setStartDate.bind(this);\r\n    this.setLastDate = this.setLastDate.bind(this);\r\n  }\r\n\r\n  exportPdf() {\r\n    CetakLaporanPindahBarang(this.props.LaporanDataBarang);\r\n  }\r\n  setStartDate(date) {\r\n    this.setState({\r\n      tgl_awal: new Date(date),\r\n    });\r\n  }\r\n  setLastDate(date) {\r\n    this.setState({\r\n      tgl_akhir: new Date(date),\r\n    });\r\n  }\r\n\r\n  render() {\r\n    let databarang = [];\r\n    let berat = 0;\r\n    this.props.LaporanDataBarang.forEach((element) => {\r\n      element.detail.forEach((detail) => {\r\n        databarang.push(detail);\r\n        berat = berat + detail.berat\r\n      });\r\n    });\r\n    const columns = [\r\n  \r\n      {\r\n        dataField: \"kode_gudang_asal\",\r\n        text: \"Gudang Asal\",\r\n        footerAttrs: {\r\n          colSpan: \"5\",\r\n        },\r\n        footer: (cell, row, num, index) => {\r\n          return <div>Total Barang : {databarang.length} </div>;\r\n        },\r\n      },\r\n      {\r\n        dataField: \"kode_baki_asal\",\r\n        text: \"Baki Asal\",\r\n      },\r\n      {\r\n        dataField: \"kode_barcode\",\r\n        text: \"Kode Barcode\",\r\n      },\r\n\r\n      {\r\n        dataField: \"kode_gudang\",\r\n        text: \"Gudang\",\r\n      },\r\n      {\r\n        dataField: \"kode_baki\",\r\n        text: \"Baki Tujuan\",\r\n      },\r\n     \r\n      {\r\n        dataField: \"berat\",\r\n        text: \"Berat\",\r\n        headerClasses: 'text-right',\r\n        formatter: (cell) => {\r\n          return <div className=\"text-right\"> {formatGram(cell, 2)} </div>;\r\n        },\r\n        footer: (columnData) => {\r\n          return <div className=\"text-right\"> {formatGram(columnData.reduce((acc, item) => acc + item, 0), 2)} </div>\r\n        }\r\n      }\r\n    ];\r\n    return (\r\n      <form onSubmit={this.props.handleSubmit} autoComplete=\"off\">\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-4\">\r\n            <Field\r\n              name=\"tgl_awal\"\r\n              component={InputDate}\r\n              label=\"Tanggal Dari\"\r\n              type=\"text\"\r\n              selected={this.state.tgl_awal}\r\n              onChange={(date) => this.setStartDate(date)}\r\n              placeholder=\"Masukan Tanggal Dari\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"col-lg-4\">\r\n            <Field\r\n              name=\"tgl_akhir\"\r\n              component={InputDate}\r\n              type=\"text\"\r\n              selected={this.state.tgl_akhir}\r\n              onChange={(date) => this.setLastDate(date)}\r\n              label=\"Tanggal Akhir\"\r\n              placeholder=\"Masukan Tanggal Akhir\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"col-lg-4\">\r\n            <div className=\"text-right\">\r\n              <label>&nbsp;</label>\r\n              <button\r\n                type=\"submit\"\r\n                value=\"PDF\"\r\n                name=\"type_btn\"\r\n                className=\"btn btn-primary btn-block\"\r\n              >\r\n                {this.props.isLoading ? (\r\n                  <>\r\n                    <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Sedang\r\n                    Mencari\r\n                  </>\r\n                ) : (\r\n                  \"Cari Laporan\"\r\n                )}\r\n              </button>\r\n            </div>\r\n          </div>\r\n           <div className=\"col-12\">\r\n            <Tabel\r\n              keyField=\"no_pindah\"\r\n              data={this.props.export ? databarang  :  []}\r\n              columns={columns}\r\n              empty={true}\r\n              textEmpty=\"Data Laporan Pindah Barang Kosong\"\r\n            />\r\n          </div>\r\n          <div className={this.props.export ? \"col-lg-12\" : \"col-lg-12 d-none\"}>\r\n            {/* <label htmlFor=\"\">&nbsp;</label> */}\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-6\">\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => this.exportPdf()}\r\n                  className=\"btn btn-warning btn-block\"\r\n                >\r\n                  {\" \"}\r\n                  Export PDF{\" \"}\r\n                </button>\r\n              </div>\r\n              <div className=\"col-lg-6\">\r\n                <LaporanPindahBarangExel data={this.props.LaporanDataBarang} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {this.props.isLoading ? (\r\n        <Loading \r\n        loading\r\n        background=\"rgba(0, 0, 0, 0.35)\"\r\n         loaderColor=\"rgba(94, 147, 117, 1)\" />\r\n      ) : null}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nHeadPindahBarang = reduxForm({\r\n  form: \"HeadPindahBarang\",\r\n    enableReinitialize: true,\r\n  validate: ValidasiTanggalLaporan \r\n})(HeadPindahBarang);\r\nexport default connect((state) => {\r\n  return {\r\n    initialValues: {\r\n      tgl_awal: getTglSystem(),\r\n      tgl_akhir: getTglSystem(),\r\n    },\r\n  };\r\n})(HeadPindahBarang);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Panel, PanelHeader } from \"../../../../components/panel/panel.jsx\";\r\nimport { connect } from \"react-redux\";\r\nimport { postDataNoTImeOut } from \"../../../../config/axios.jsx\";\r\nimport { reduxForm } from \"redux-form\";\r\nimport {\r\n  formatDate, localStorageencryp,\r\n} from \"../../../../components/helpers/function.jsx\";\r\nimport {\r\n  NotifError,\r\n  ToastNotification,\r\n} from \"../../../../components/helpers/notification.jsx\";\r\nimport * as moment from \"moment-timezone\";\r\nimport HeadPindahBarang from \"./HeadPindahBarang.jsx\";\r\n\r\n\r\nconst maptostate = (state) => {\r\n  return {\r\n    hideModal: state.datamaster.modalDialog,\r\n  };\r\n};\r\n\r\nclass FormLaporanPindahBarang extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isEdit: false,\r\n      modalDialog: false,\r\n      isLoading: false,\r\n      username: false,\r\n      export: false,\r\n      LaporanDataBarang: [],\r\n      tgl_awal: new Date(),\r\n      tgl_akhir: new Date(),\r\n    };\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleSubmit(data) {\r\n    this.setState({\r\n      isLoading: true,\r\n    });\r\n    let data_post = {\r\n      tgl_awal: formatDate(moment(new Date(data.tgl_awal)).format('YYYY-MM-DD')),\r\n      tgl_akhir: formatDate(moment(new Date(data.tgl_akhir)).format('YYYY-MM-DD')),\r\n    };\r\n    postDataNoTImeOut(\"pindahbarang/get/report\", data_post)\r\n      .then((res) => {\r\n        // console.log(res.data);\r\n        if (res.data.length === 0) {\r\n          ToastNotification(\"info\", \"Data Yang Anda Cari Tidak Ada\");\r\n          this.setState({\r\n            isLoading: false,\r\n            export: false,\r\n            LaporanDataBarang : []\r\n          });\r\n        } else {\r\n          localStorageencryp(\"tgl_laporan\", JSON.stringify(data_post));\r\n          ToastNotification(\"success\", \"Laporan Pindah Barang Tersedia\");\r\n          this.setState({\r\n            LaporanDataBarang: res.data,\r\n            isLoading: false,\r\n            export: true,\r\n          })\r\n        }\r\n      })\r\n      .catch((error) => this.errorHandling(error));\r\n  }\r\n\r\n  errorHandling(err) {\r\n    NotifError(err);\r\n    this.setState({\r\n      isLoading: false,\r\n      export: false,\r\n    });\r\n  }\r\n\r\n  \r\n  render() {\r\n    return (\r\n      <div>\r\n        <ol className=\"breadcrumb float-xl-right\">\r\n          <li className=\"breadcrumb-item\">\r\n            <Link to=\"#\">Laporan Barang</Link>\r\n          </li>\r\n          <li className=\"breadcrumb-item active\">Laporan Pindah Barang</li>\r\n        </ol>\r\n        <h1 className=\"page-header\">Laporan Pindah Barang </h1>\r\n        <Panel>\r\n          <PanelHeader>Filter Laporan</PanelHeader>\r\n          <br />\r\n          <div className=\"container\">\r\n          <HeadPindahBarang\r\n              export={this.state.export}\r\n              LaporanDataBarang={this.state.LaporanDataBarang}\r\n              isLoading={this.state.isLoading}\r\n              onSubmit={(data) => this.handleSubmit(data)}\r\n            />\r\n          </div>\r\n          <br/>\r\n        </Panel>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nFormLaporanPindahBarang = reduxForm({\r\n  form: \"FormLaporanPindahBarang\",\r\n  enableReinitialize: true,\r\n})(FormLaporanPindahBarang);\r\nexport default connect(maptostate, null)(FormLaporanPindahBarang);\r\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n/* global window, document, Blob */\n\n\nvar propTypes = {\n  table: _propTypes2.default.string.isRequired,\n  filename: _propTypes2.default.string.isRequired,\n  sheet: _propTypes2.default.string.isRequired,\n  id: _propTypes2.default.string,\n  className: _propTypes2.default.string,\n  buttonText: _propTypes2.default.string\n};\nvar defaultProps = {\n  id: 'button-download-as-xls',\n  className: 'button-download',\n  buttonText: 'Download'\n};\n\nvar ReactHTMLTableToExcel = function (_Component) {\n  _inherits(ReactHTMLTableToExcel, _Component);\n\n  function ReactHTMLTableToExcel(props) {\n    _classCallCheck(this, ReactHTMLTableToExcel);\n\n    var _this = _possibleConstructorReturn(this, (ReactHTMLTableToExcel.__proto__ || Object.getPrototypeOf(ReactHTMLTableToExcel)).call(this, props));\n\n    _this.handleDownload = _this.handleDownload.bind(_this);\n    return _this;\n  }\n\n  _createClass(ReactHTMLTableToExcel, [{\n    key: 'handleDownload',\n    value: function handleDownload() {\n      if (!document) {\n        if (process.env.NODE_ENV !== 'production') {\n          console.error('Failed to access document object');\n        }\n\n        return null;\n      }\n\n      if (document.getElementById(this.props.table).nodeType !== 1 || document.getElementById(this.props.table).nodeName !== 'TABLE') {\n        if (process.env.NODE_ENV !== 'production') {\n          console.error('Provided table property is not html table element');\n        }\n\n        return null;\n      }\n\n      var table = document.getElementById(this.props.table).outerHTML;\n      var sheet = String(this.props.sheet);\n      var filename = String(this.props.filename) + '.xls';\n      var uri = 'data:application/vnd.ms-excel;base64,';\n      var template = '<html xmlns:o=\"urn:schemas-microsoft-com:office:office\" xmlns:x=\"urn:schemas-mic' + 'rosoft-com:office:excel\" xmlns=\"http://www.w3.org/TR/REC-html40\"><head><meta cha' + 'rset=\"UTF-8\"><!--[if gte mso 9]><xml><x:ExcelWorkbook><x:ExcelWorksheets><x:Exce' + 'lWorksheet><x:Name>{worksheet}</x:Name><x:WorksheetOptions><x:DisplayGridlines/>' + '</x:WorksheetOptions></x:ExcelWorksheet></x:ExcelWorksheets></x:ExcelWorkbook></' + 'xml><![endif]--></head><body>{table}</body></html>';\n      var context = {\n        worksheet: sheet || 'Worksheet',\n        table: table\n      }; // If IE11\n\n      if (window.navigator.msSaveOrOpenBlob) {\n        var fileData = ['' + ('<html xmlns:o=\"urn:schemas-microsoft-com:office:office\" xmlns:x=\"urn:schemas-mic' + 'rosoft-com:office:excel\" xmlns=\"http://www.w3.org/TR/REC-html40\"><head><meta cha' + 'rset=\"UTF-8\"><!--[if gte mso 9]><xml><x:ExcelWorkbook><x:ExcelWorksheets><x:Exce' + 'lWorksheet><x:Name>{worksheet}</x:Name><x:WorksheetOptions><x:DisplayGridlines/>' + '</x:WorksheetOptions></x:ExcelWorksheet></x:ExcelWorksheets></x:ExcelWorkbook></' + 'xml><![endif]--></head><body>') + table + '</body></html>'];\n        var blobObject = new Blob(fileData);\n        document.getElementById('react-html-table-to-excel').click()(function () {\n          window.navigator.msSaveOrOpenBlob(blobObject, filename);\n        });\n        return true;\n      }\n\n      var element = window.document.createElement('a');\n      element.href = uri + ReactHTMLTableToExcel.base64(ReactHTMLTableToExcel.format(template, context));\n      element.download = filename;\n      document.body.appendChild(element);\n      element.click();\n      document.body.removeChild(element);\n      return true;\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      return _react2.default.createElement('button', {\n        id: this.props.id,\n        className: this.props.className,\n        type: 'button',\n        onClick: this.handleDownload\n      }, this.props.buttonText);\n    }\n  }], [{\n    key: 'base64',\n    value: function base64(s) {\n      return window.btoa(unescape(encodeURIComponent(s)));\n    }\n  }, {\n    key: 'format',\n    value: function format(s, c) {\n      return s.replace(/{(\\w+)}/g, function (m, p) {\n        return c[p];\n      });\n    }\n  }]);\n\n  return ReactHTMLTableToExcel;\n}(_react.Component);\n\nReactHTMLTableToExcel.propTypes = propTypes;\nReactHTMLTableToExcel.defaultProps = defaultProps;\nexports.default = ReactHTMLTableToExcel;","const ValidasiTanggalLaporan = (value, event) => {\r\n    const errors = {};\r\n    // console.log(event.charCode==13);\r\n    if (!value.tgl_awal) {\r\n      errors.tgl_awal = \"Tanggal Awal Tidak Boleh Kosong\";\r\n    }\r\n    if (!value.tgl_akhir) {\r\n      errors.tgl_akhir = \"Tanggal Akhir Tidak Boleh Kosong\";\r\n    }\r\n    return errors;\r\n  };\r\n  \r\n  export default ValidasiTanggalLaporan;\r\n  "],"sourceRoot":""}