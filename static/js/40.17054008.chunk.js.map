{"version":3,"sources":["pages/Laporan/LaporanPenjualan/LaporanBatalPenjualan/exel/LaporanExelBatalJual.jsx","pages/Laporan/LaporanPenjualan/LaporanBatalPenjualan/pdf/ExportBatalPenjualan.jsx","pages/Laporan/LaporanPenjualan/LaporanBatalPenjualan/HeadFormLaporanBatalPenjualan.jsx","../node_modules/react-html-table-to-excel/index.js","Validasi/ValidasiTanggalLaporan.jsx"],"names":["LaporanExelBatalJual","props","_this","Object","classCallCheck","this","_super","call","state","berat","berat_atribut","total_barang","harga_jual","harga_atribut","harga_gram","harga_total","ongkos","data","forEach","barang","index","detail","item","stock_on_hand","length","react_default","a","createElement","Fragment","react_html_table_to_excel_default","id","className","table","filename","sheet","buttonText","style","display","colSpan","textAlign","localStoragedecryp","JSON","parse","tgl_awal","tgl_akhir","getUserdata","nama_toko","alamat_toko","backgroundColor","color","map","_id","pembayaran","header_detail","jenis","parseInt","jumlah_rp","toLocaleString","row","kode_dept","kode_barcode","nama_barang","nama_atribut","formatGram","Component","ExportBatalPenjualan","tableColumn","arguments","undefined","doc","jsPDF","tableRows","footRows","finalY","total_baraang","total_berat","total_onkos","total_harga_jual","total_berat_atribut","total_harga_atribut","total_harga_gram","total_harga_total","setFontSize","text","jml_alamat","slice","setProperties","title","concat","content","styles","halign","header","push","rows","parseFloat","footer","fillColor","textColor","toFixed","printed","user_id","getToday","fontStyle","autoTable","head","body","foot","startY","theme","rowPageBreak","margin","top","footStyles","fontSize","bodyStyles","headStyles","tableLineColor","tableLineWidth","autoTableEndPosY","pages","internal","getNumberOfPages","pageWidth","pageSize","width","pageHeight","height","j","horizontalPos","verticalPos","setPage","align","string","output","x","window","open","document","write","HeadFormLaporanBatalPenjualan","date","Date","setStartDate","bind","assertThisInitialized","setLastDate","LaporanDataPenjualan","setState","_this2","databarang","element","columns","dataField","footerAttrs","cell","num","formatter","headerClasses","onSubmit","handleSubmit","autoComplete","Field","name","component","InputDate","label","type","selected","onChange","placeholder","value","isLoading","tabel","keyField","export","empty","textEmpty","onClick","exportPdf","exel_LaporanExelBatalJual","loading_default","loading","background","loaderColor","reduxForm","form","enableReinitialize","validate","ValidasiTanggalLaporan","connect","initialValues","getTglSystem","defineProperty","exports","_createClass","defineProperties","target","i","descriptor","enumerable","configurable","writable","key","Constructor","protoProps","staticProps","prototype","_react","__webpack_require__","_react2","_interopRequireDefault","_propTypes2","obj","__esModule","default","propTypes","isRequired","ReactHTMLTableToExcel","_Component","instance","TypeError","_classCallCheck","self","ReferenceError","_possibleConstructorReturn","__proto__","getPrototypeOf","handleDownload","subClass","superClass","create","constructor","setPrototypeOf","_inherits","getElementById","nodeType","nodeName","outerHTML","String","context","worksheet","navigator","msSaveOrOpenBlob","blobObject","Blob","click","href","base64","format","download","appendChild","removeChild","s","btoa","unescape","encodeURIComponent","c","replace","m","p","defaultProps","event","errors"],"mappings":"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","file":"static/js/40.17054008.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport ReactHTMLTableToExcel from \"react-html-table-to-excel\";\r\nimport { formatGram, getUserdata, localStoragedecryp } from \"../../../../../components/helpers/function\";\r\nclass LaporanExelBatalJual extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  render() {\r\n    let stock_on_hand = 0;\r\n    let berat = 0;\r\n    let berat_atribut = 0;\r\n    let total_barang = 0;\r\n    let harga_jual = 0;\r\n    let harga_atribut = 0;\r\n    let harga_gram = 0;\r\n    let harga_total = 0;\r\n    let ongkos = 0;\r\n    this.props.data.forEach((barang, index) => {\r\n      barang.detail.forEach((item, index) => {\r\n        stock_on_hand = stock_on_hand + item.stock_on_hand;\r\n        berat_atribut = berat_atribut + item.berat_atribut;\r\n        berat = berat + item.berat;\r\n        harga_jual = harga_jual + item.harga_jual;\r\n        ongkos = ongkos + item.ongkos;\r\n        harga_total = harga_total + item.harga_total;\r\n        harga_gram = harga_gram + item.harga_gram;\r\n        harga_atribut = harga_atribut + item.harga_atribut;\r\n      });\r\n      total_barang = total_barang + barang.detail.length;\r\n    });\r\n    return (\r\n      <>\r\n        <ReactHTMLTableToExcel\r\n          id=\"test-table-xls-button\"\r\n          className=\"btn btn-success btn-block\"\r\n          table=\"table-to-xls\"\r\n          filename=\"Laporan Batal Penjualan\"\r\n          sheet=\"Laporan Batal Penjualan\"\r\n          buttonText=\"Export Exel\"\r\n        />\r\n        <table id=\"table-to-xls\" style={{ display: \"none\" }}>\r\n          <thead>\r\n            <tr>\r\n              <th colSpan=\"11\" style={{ textAlign: \"center\" }}>\r\n                {\" \"}\r\n                LAPORAN BATAL PENJUALAN{\" \"}\r\n              </th>\r\n            </tr>\r\n            <tr>\r\n              <th colSpan=\"11\"> Periode </th>\r\n            </tr>\r\n            <tr>\r\n              <th colSpan=\"11\">\r\n                {\" \"}\r\n                {localStoragedecryp(\"tgl_laporan\").length === 0\r\n                  ? null\r\n                  : JSON.parse(localStoragedecryp(\"tgl_laporan\")).tgl_awal +\r\n                    \" s/d \" +\r\n                    JSON.parse(localStoragedecryp(\"tgl_laporan\"))\r\n                      .tgl_akhir}{\" \"}\r\n              </th>\r\n            </tr>\r\n            <tr>\r\n              <th colSpan=\"11\"> TOKO :  {getUserdata().nama_toko} </th>\r\n            </tr>\r\n           \r\n            <tr>\r\n              <th colSpan=\"11\"> ALAMAT :  {getUserdata().alamat_toko} </th>\r\n            </tr>\r\n            <tr></tr>\r\n            <tr>\r\n                  <td style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>\r\n                    KODE DEPT\r\n                  </td>\r\n                  <td style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>\r\n                    KODE BARCODE\r\n                  </td>\r\n                  <td style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>\r\n                    NAMA BARANG\r\n              </td>\r\n              <td style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>\r\n                    NAMA ATRIBUT\r\n                  </td>\r\n                  <td style={{ backgroundColor: \"#E8E5E5\", color: \"#000\",textAlign: \"right\" }}>\r\n                    BERAT\r\n                  </td>\r\n                  <td style={{ backgroundColor: \"#E8E5E5\", color: \"#000\",textAlign: \"right\" }}>\r\n                    ONGKOS\r\n                  </td>\r\n                  <td style={{ backgroundColor: \"#E8E5E5\", color: \"#000\",textAlign: \"right\" }}>\r\n                    HARGA JUAL\r\n                  </td>\r\n                \r\n                  <td style={{ backgroundColor: \"#E8E5E5\", color: \"#000\",textAlign: \"right\" }}>\r\n                    BERAT ATRIBUT\r\n                  </td>\r\n                  <td style={{ backgroundColor: \"#E8E5E5\", color: \"#000\",textAlign: \"right\" }}>\r\n                    HARGA ATRIBUT\r\n                  </td>\r\n                  <td style={{ backgroundColor: \"#E8E5E5\", color: \"#000\",textAlign: \"right\" }}>\r\n                    HARGA GRAM\r\n                  </td>\r\n                  <td style={{ backgroundColor: \"#E8E5E5\", color: \"#000\",textAlign: \"right\" }}>\r\n                    HARGA TOTAL\r\n                  </td>\r\n                </tr>\r\n          </thead>\r\n          {this.props.data.map((item, index) => (\r\n            <>\r\n              <tbody>\r\n                {item._id.pembayaran.map((header_detail, index) => (\r\n                  <>\r\n                    {/* <tr>\r\n                      <td style={{ textAlign: \"center\" }}>No Faktur Group</td>\r\n                      <td colSpan=\"10\" style={{border: \"1px solid #000\"}}> {header_detail.no_faktur_group}</td>\r\n                    </tr> */}\r\n                    <tr>\r\n                      <td colSpan=\"11\">\r\n                        {header_detail.jenis}{\" \"}\r\n                        {parseInt(header_detail.jumlah_rp).toLocaleString(\r\n                          \"kr-KO\"\r\n                        )}\r\n                      </td>\r\n                    </tr>\r\n                  </>\r\n                ))}\r\n               \r\n                {item.detail.map((row, index) => (\r\n                  <tr>\r\n                    <td>\r\n                      {row.kode_dept}\r\n                    </td>\r\n                    <td>\r\n                      &nbsp;{row.kode_barcode}\r\n                    </td>\r\n                    <td>\r\n                      {row.nama_barang}\r\n                    </td>\r\n                    <td>\r\n                      {row.nama_atribut}\r\n                    </td>\r\n                    <td style={{textAlign: \"right\"}}>\r\n                      {formatGram(row.berat,3)}\r\n                    </td>\r\n                    <td style={{textAlign: \"right\"}}>\r\n                      {row.ongkos.toLocaleString(\"kr-KO\")}\r\n                    </td>\r\n                    <td style={{textAlign: \"right\"}}>\r\n                      {row.harga_jual.toLocaleString(\"kr-KO\")}\r\n                    </td>\r\n                    <td style={{textAlign: \"right\"}}>\r\n                      {formatGram(row.berat_atribut,2)}\r\n                    </td>\r\n                    <td style={{textAlign: \"right\"}}>\r\n                      {row.harga_atribut.toLocaleString(\"kr-KO\")}\r\n                    </td>\r\n                    <td style={{textAlign: \"right\"}}>\r\n                      {row.harga_gram.toLocaleString(\"kr-KO\")}\r\n                    </td>\r\n                    <td style={{textAlign: \"right\"}}>\r\n                      &nbsp;{row.harga_total.toLocaleString(\"kr-KO\")}\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n              <tfoot>\r\n               \r\n              </tfoot>\r\n            </>\r\n          ))}\r\n          <tr>\r\n            <td colSpan=\"4\" style={{ backgroundColor: \"#E8E5E5\", color: \"#000\",  textAlign: \"center\" }}>\r\n             Grand Total Barang : {total_barang}\r\n            </td>\r\n\r\n            <td style={{ backgroundColor: \"#E8E5E5\", color: \"#000\", textAlign: \"right\"  }}>\r\n              {formatGram(berat,3)}\r\n            </td>\r\n            <td style={{ backgroundColor: \"#E8E5E5\", color: \"#000\",textAlign: \"right\"   }}>\r\n              {ongkos.toLocaleString(\"kr-KO\")}\r\n            </td>\r\n            <td style={{ backgroundColor: \"#E8E5E5\", color: \"#000\",  textAlign: \"right\" }}>\r\n              {harga_jual.toLocaleString(\"kr-KO\")}\r\n            </td>\r\n            <td style={{ backgroundColor: \"#E8E5E5\", color: \"#000\", textAlign: \"right\"  }}>\r\n              {formatGram(berat_atribut,2)}\r\n            </td>\r\n            <td style={{ backgroundColor: \"#E8E5E5\", color: \"#000\",  textAlign: \"right\" }}>\r\n              {harga_atribut.toLocaleString(\"kr-KO\")}\r\n            </td>\r\n            <td style={{ backgroundColor: \"#E8E5E5\", color: \"#000\",  textAlign: \"right\" }}>\r\n              {harga_gram.toLocaleString(\"kr-KO\")}\r\n            </td>\r\n            <td style={{ backgroundColor: \"#E8E5E5\", color: \"#000\",  textAlign: \"right\" }}>\r\n              {harga_total.toLocaleString(\"kr-KO\")}\r\n            </td>\r\n          </tr>\r\n        </table>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default LaporanExelBatalJual;\r\n","import jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\nimport {\r\n  formatGram,\r\n  getToday,\r\n  getUserdata,\r\n  localStoragedecryp,\r\n} from \"../../../../../components/helpers/function\";\r\n// Date Fns is used to format the dates we receive\r\n\r\n// define a generatePDF function that accepts a tickets argument\r\nconst ExportBatalPenjualan = (\r\n  data = \"\",\r\n  username = \"\",\r\n  tanggal_dari = \"\",\r\n  tanggal_sampai = \"\"\r\n) => {\r\n  // initialize jsPDF\r\n  const doc = new jsPDF(\"l\", \"mm\", [297, 210]);\r\n  //   let data = JSON.parse(localStorage.getItem(\"tt_pengeluaran_barang\")) || [];\r\n  let tableRows = [];\r\n  let footRows = [];\r\n  let tableColumn = [];\r\n  let finalY = 30;\r\n  let total_baraang = 0;\r\n  let total_berat = 0;\r\n  let total_onkos = 0;\r\n  let total_harga_jual = 0;\r\n  let total_berat_atribut = 0;\r\n  let total_harga_atribut = 0;\r\n  let total_harga_gram = 0;\r\n  let total_harga_total = 0;\r\n\r\n  doc.setFontSize(15);\r\n  doc.text(\"LAPORAN BATAL PENJUALAN\", 14, 15);\r\n  doc.setFontSize(20);\r\n  doc.text(getUserdata().nama_toko, 200, 15);\r\n  doc.setFontSize(8);\r\n  let jml_alamat = getUserdata().alamat_toko.length;\r\n  if (jml_alamat > 20) {\r\n    doc.text(getUserdata().alamat_toko.slice(0,48), 200, 20);\r\n  }\r\n  if (jml_alamat > 50) {\r\n    doc.text(getUserdata().alamat_toko.slice(48,90), 200, 25);\r\n  }\r\n  doc.setFontSize(10);\r\n  doc.setProperties({\r\n    title: \"LAPORAN BATAL PENJUALAN\",\r\n  });\r\n  //row 1\r\n  doc.text(\r\n    `PERIODE : ${\r\n      localStoragedecryp(\"tgl_laporan\").length === 0\r\n        ? null\r\n        : JSON.parse(localStoragedecryp(\"tgl_laporan\")).tgl_awal +\r\n          \" s/d \" +\r\n          JSON.parse(localStoragedecryp(\"tgl_laporan\")).tgl_akhir\r\n    }`,\r\n    14,\r\n    25\r\n  );\r\n  tableColumn = [\r\n    [\r\n      {\r\n        content: `KODE DEPT`,\r\n      },\r\n      {\r\n        content: `KODE BARCODE`,\r\n      },\r\n      {\r\n        content: `NAMA BARAG`,\r\n      },\r\n      {\r\n        content: `NAMA ATRIBUT`,\r\n      },\r\n      {\r\n        content: `BERAT`,\r\n        styles: {\r\n          halign: 'right'\r\n        },\r\n      },\r\n      {\r\n        content: `ONGKOS`,\r\n        styles: {\r\n          halign: 'right'\r\n        },\r\n      },\r\n      {\r\n        content: `HARGA JUAL`,\r\n        styles: {\r\n          halign: 'right'\r\n        },\r\n      },\r\n    \r\n      {\r\n        content: `HARGA ATRIBUT`,\r\n        styles: {\r\n          halign: 'right'\r\n        },\r\n      },\r\n      {\r\n        content: `BERAT ATRIBUT`,\r\n        styles: {\r\n          halign: 'right'\r\n        },\r\n      },\r\n      {\r\n        content: `HARGA GRAM`,\r\n        styles: {\r\n          halign: 'right'\r\n        },\r\n      },\r\n      {\r\n        content: `HARGA TOTAL`,\r\n        styles: {\r\n          halign: 'right'\r\n        },\r\n      },\r\n    ],\r\n  ];\r\n  data.forEach((item, index) => {\r\n    let tot_berat = 0;\r\n    let tot_onkos = 0;\r\n    let tot_harga_jual = 0;\r\n    let tot_harga_gram = 0;\r\n    let tot_berat_atribut = 0;\r\n    let tot_harga_atribut = 0;\r\n    let tot_harga_total = 0;\r\n    item._id.pembayaran.forEach((header_detail, index) => {\r\n      let header = [\r\n        {\r\n          content: `${\r\n            header_detail.jenis\r\n          }  (${parseInt(header_detail.jumlah_rp).toLocaleString(\"kr-KO\")})`,\r\n          colSpan: 11,\r\n        },\r\n      ];\r\n      tableRows.push(header);\r\n    });\r\n\r\n    item.detail.forEach((item, index) => {\r\n      let rows = [\r\n        item.kode_dept,\r\n        item.kode_barcode,\r\n        item.nama_barang,\r\n        item.nama_atribut,\r\n        {\r\n          content: formatGram(item.berat,3),\r\n          styles: {\r\n            halign: 'right',\r\n          },\r\n        },\r\n        {\r\n          content:parseInt(item.ongkos).toLocaleString(\"kr-KO\"),\r\n          styles: {\r\n            halign: 'right',\r\n          },\r\n        },\r\n        {\r\n          content:parseInt(item.harga_jual).toLocaleString(\"kr-KO\"),\r\n          styles: {\r\n            halign: 'right',\r\n          },\r\n        },\r\n        {\r\n          content:  parseInt(item.harga_atribut).toLocaleString(\"kr-KO\"),\r\n          styles: {\r\n            halign: 'right',\r\n          },\r\n        },\r\n        {\r\n          content:  formatGram(item.berat_atribut,3),\r\n          styles: {\r\n            halign: 'right',\r\n          },\r\n        },\r\n        {\r\n          content:  parseInt(item.harga_gram).toLocaleString(\"kr-KO\"),\r\n          styles: {\r\n            halign: 'right',\r\n          },\r\n        },\r\n        {\r\n          content:  parseInt(item.harga_total).toLocaleString(\"kr-KO\"),\r\n          styles: {\r\n            halign: 'right',\r\n          },\r\n        },\r\n       \r\n      ];\r\n      total_berat = parseFloat(total_berat) + parseFloat(item.berat);\r\n      total_onkos = total_onkos + parseInt(item.ongkos);\r\n      total_harga_jual = total_harga_jual + parseInt(item.harga_jual);\r\n      total_berat_atribut = total_berat_atribut + parseInt(item.berat_atribut);\r\n      total_harga_atribut = total_harga_atribut + parseInt(item.harga_atribut);\r\n      total_harga_gram = total_harga_gram + parseInt(item.harga_gram);\r\n      total_harga_total = total_harga_total + parseInt(item.harga_total);\r\n\r\n      tot_berat = tot_berat + parseFloat(item.berat);\r\n      tot_onkos = tot_onkos + parseInt(item.ongkos);\r\n      tot_harga_jual = tot_harga_jual + parseInt(item.harga_jual);\r\n      tot_berat_atribut = tot_berat_atribut + parseInt(item.berat_atribut);\r\n      tot_harga_atribut = tot_harga_atribut + parseInt(item.harga_atribut);\r\n      tot_harga_gram = tot_harga_gram + parseInt(item.harga_gram);\r\n      tot_harga_total = tot_harga_total + parseInt(item.harga_total);\r\n      tableRows.push(rows);\r\n    });\r\n\r\n    total_baraang = total_baraang + item.detail.length;\r\n    // localStorage.setItem('hasil',JSON.stringify(item.detail.length))\r\n    // console.log();\r\n  //   let total = [\r\n  //     {\r\n  //       content: `Total Barang : ${item.detail.length}`,\r\n  //       colSpan: 3,\r\n  //       styles: {\r\n  //         halign: 'center',\r\n  //         fillColor: \"#E8E5E5\",\r\n  //         textColor: \"#000\",\r\n  //       },\r\n  //     },\r\n  //     {\r\n  //       content: ``,\r\n  //       styles: {\r\n  //         // halign: 'center',\r\n  //         fillColor: \"#E8E5E5\",\r\n  //         textColor: \"#000\",\r\n  //       },\r\n  //     },\r\n  //     {\r\n  //       content: `${tot_berat.toFixed(3)}`,\r\n  //       styles: {\r\n  //         halign: 'right',\r\n  //         fillColor: \"#E8E5E5\",\r\n  //         textColor: \"#000\",\r\n  //       },\r\n  //     },\r\n  //     {\r\n  //       content: `${parseInt(tot_onkos).toLocaleString(\"kr-KO\")}`,\r\n  //       styles: {\r\n  //         halign: 'right',\r\n  //         fillColor: \"#E8E5E5\",\r\n  //         textColor: \"#000\",\r\n  //       },\r\n  //     },\r\n  //     {\r\n  //       content: `${parseInt(tot_harga_jual).toLocaleString(\"kr-KO\")}`,\r\n  //       styles: {\r\n  //         halign: 'right',\r\n  //         fillColor: \"#E8E5E5\",\r\n  //         textColor: \"#000\",\r\n  //       },\r\n  //     },\r\n     \r\n  //     {\r\n  //       content: `${parseInt(tot_harga_atribut).toLocaleString(\"kr-KO\")}`,\r\n  //       styles: {\r\n  //         halign: 'right',\r\n  //         fillColor: \"#E8E5E5\",\r\n  //         textColor: \"#000\",\r\n  //       },\r\n  //     },\r\n  //     {\r\n  //       content: `${tot_berat_atribut.toFixed(3)}`,\r\n  //       styles: {\r\n  //         halign: 'right',\r\n  //         fillColor: \"#E8E5E5\",\r\n  //         textColor: \"#000\",\r\n  //       },\r\n  //     },\r\n     \r\n  //     {\r\n  //       content: `${parseInt(tot_harga_gram).toLocaleString(\"kr-KO\")}`,\r\n  //       styles: {\r\n  //         halign: 'right',\r\n  //         fillColor: \"#E8E5E5\",\r\n  //         textColor: \"#000\",\r\n  //       },\r\n  //     },\r\n  //     {\r\n  //       content: `${parseInt(tot_harga_total).toLocaleString(\"kr-KO\")}`,\r\n  //       styles: {\r\n  //         // halign: 'center',\r\n  //         halign: 'right',\r\n  //         fillColor: \"#E8E5E5\",\r\n  //         textColor: \"#000\",\r\n  //       },\r\n  //     },\r\n  //   ];\r\n  //   tableRows.push(total);\r\n\r\n  });\r\n  let footer = [\r\n    {\r\n      content: `Grand Barang : ${total_baraang}`,\r\n      colSpan: 3,\r\n      styles: {\r\n        halign: 'center',\r\n        fillColor: \"#E8E5E5\",\r\n        textColor: \"#000\",\r\n      },\r\n    },\r\n    {\r\n      content: ``,\r\n      styles: {\r\n        fillColor: \"#E8E5E5\",\r\n        textColor: \"#000\",\r\n      },\r\n    },\r\n    {\r\n      content: `${total_berat.toFixed(3)}`,\r\n      styles: {\r\n        fillColor: \"#E8E5E5\",\r\n        textColor: \"#000\",\r\n        halign: 'right',\r\n\r\n      },\r\n    },\r\n    {\r\n      content: `${parseInt(total_onkos).toLocaleString(\"kr-KO\")}`,\r\n      styles: {\r\n        fillColor: \"#E8E5E5\",\r\n        textColor: \"#000\",\r\n        halign: 'right',\r\n\r\n      },\r\n    },\r\n    {\r\n      content: `${parseInt(total_harga_jual).toLocaleString(\"kr-KO\")}`,\r\n      styles: {\r\n        fillColor: \"#E8E5E5\",\r\n        textColor: \"#000\",\r\n        halign: 'right',\r\n\r\n      },\r\n    },\r\n   \r\n    {\r\n      content: `${parseInt(total_harga_atribut).toLocaleString(\"kr-KO\")}`,\r\n      styles: {\r\n        fillColor: \"#E8E5E5\",\r\n        textColor: \"#000\",\r\n        halign: 'right',\r\n\r\n      },\r\n    },\r\n    {\r\n      content: `${total_berat_atribut.toFixed(3)}`,\r\n      styles: {\r\n        fillColor: \"#E8E5E5\",\r\n        textColor: \"#000\",\r\n        halign: 'right',\r\n\r\n      },\r\n    },\r\n    {\r\n      content: `${parseInt(total_harga_gram).toLocaleString(\"kr-KO\")}`,\r\n      styles: {\r\n        fillColor: \"#E8E5E5\",\r\n        textColor: \"#000\",\r\n        halign: 'right',\r\n\r\n      },\r\n    },\r\n    {\r\n      content: `${parseInt(total_harga_total).toLocaleString(\"kr-KO\")}`,\r\n      styles: {\r\n        fillColor: \"#E8E5E5\",\r\n        textColor: \"#000\",\r\n        halign: 'right',\r\n\r\n      },\r\n    },\r\n  ];\r\n  tableRows.push(footer);\r\n\r\n  let printed = [\r\n    {\r\n      content: `Printed By ${JSON.parse(localStoragedecryp(\"userdata\")).user_id} / ${getToday()}`,\r\n      colSpan: 11,\r\n      styles: {\r\n        // lineWidth: 0.1,\r\n        fontStyle: \"italic\",\r\n        textColor: \"#000\",\r\n        // fillColor: \"#E8E5E5\"\r\n      },\r\n    },\r\n  ]\r\n  tableRows.push(printed);\r\n\r\n  doc.autoTable({\r\n    head: tableColumn,\r\n    body: tableRows,\r\n    foot: footRows,\r\n    startY: finalY,\r\n    theme: \"plain\",\r\n    rowPageBreak: \"avoid\",\r\n    // pageBreak: \"avoid\",\r\n    margin: { top: 10 },\r\n    footStyles: {\r\n      // lineWidth: 0.02,\r\n      // lineColor: \"#000\",\r\n      fontSize: 8,\r\n    },\r\n    bodyStyles: {\r\n      // lineWidth: 0.02,\r\n      // lineColor: \"#000\",\r\n      fontSize: 8,\r\n    },\r\n    headStyles: {\r\n      fontSize: 8,\r\n      // lineWidth: 0.02,\r\n      // lineColor: \"#000\",\r\n      textColor: \"#000\",\r\n      fillColor: \"#E8E5E5\",\r\n    },\r\n    tableLineColor: [255, 255, 255],\r\n    tableLineWidth: 1,\r\n  });\r\n  finalY = doc.autoTableEndPosY() + 3;\r\n  tableRows = [];\r\n  footRows = [];\r\n  // total_baraang = 0;\r\n  // tot_berat = 0;\r\n  // tot_onkos = 0;\r\n  // tot_harga_jual = 0;\r\n  // tot_harga_gram = 0;\r\n  // tot_berat_atribut = 0;\r\n  // tot_harga_atribut = 0;\r\n  // tot_harga_total = 0;\r\n  // const date = Date().split(\" \");\r\n  // we use a date string to generate our filename.\r\n  // const dateStr = date[2] + date[3] + date[4];\r\n  // ticket title. and margin-top + margin-left\r\n  // doc.text(\r\n  //   `User                           :  ${\r\n  //     JSON.parse(localStoragedecryp(\"userdata\")).user_id\r\n  //   }`,\r\n  //   14,\r\n  //   finalY + 10\r\n  // );\r\n  // doc.text(`Cetak                        : ${getToday()}`, 14, finalY + 16);\r\n  // doc.text(`Total Barang Yang Di batal : ${total_baraang}`, 14, finalY + 20);\r\n  const pages = doc.internal.getNumberOfPages();\r\n  const pageWidth = doc.internal.pageSize.width; //Optional\r\n  const pageHeight = doc.internal.pageSize.height; //Optional\r\n  doc.setFontSize(10); //Optional\r\n  for (let j = 1; j < pages + 1; j++) {\r\n    let horizontalPos = pageWidth / 2; //Can be fixed number\r\n    let verticalPos = pageHeight - 10; //Can be fixed number\r\n    doc.setPage(j);\r\n    doc.text(`${j} of ${pages}`, horizontalPos, verticalPos, {\r\n      align: \"center\",\r\n    });\r\n  }\r\n  // doc.autoPrint();\r\n  // doc.save(`LAPORAN BATAL PENJUALAN.pdf`);\r\n  var string = doc.output(\"datauristring\");\r\n  // var embed = \"<embed width='100%' height='100%' src='\" + string + \"'/>\";\r\n  var x = window.open();\r\n  x.document.open();\r\n  x.document.write(\r\n    \"<html><head><title>LAPORAN BATAL PENJUALAN</title></head><body style='margin:0 !important'><embed width='100%' height='100%'  src=\" +\r\n      string +\r\n      \"></embed></body></html>\"\r\n  );\r\n  // x.document.write(embed);\r\n  // setInterval(() => {\r\n  //   x.close();\r\n  // }, 1000);\r\n};\r\n\r\nexport default ExportBatalPenjualan;\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { InputDate } from \"../../../../components/helpers/field\";\r\nimport { getTglSystem } from \"../../../../components/helpers/function\";\r\nimport Tabel from \"../../../../components/helpers/tabel\";\r\nimport ValidasiTanggalLaporan from \"../../../../Validasi/ValidasiTanggalLaporan\";\r\nimport LaporanExelBatalJual from \"./exel/LaporanExelBatalJual\";\r\n// import LaporanBatalServiceExel from \"./exel/LaporanBatalServiceExel\";\r\nimport ExportBatalPenjualan from \"./pdf/ExportBatalPenjualan\";\r\nimport Loading from 'react-fullscreen-loading';\r\n\r\nclass HeadFormLaporanBatalPenjualan extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      date: new Date(),\r\n    };\r\n    // this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.setStartDate = this.setStartDate.bind(this);\r\n    this.setLastDate = this.setLastDate.bind(this);\r\n  }\r\n\r\n  exportPdf() {\r\n    ExportBatalPenjualan(this.props.LaporanDataPenjualan);\r\n  }\r\n  setStartDate(date) {\r\n    this.setState({\r\n      tgl_awal: new Date(date),\r\n    });\r\n  }\r\n  setLastDate(date) {\r\n    this.setState({\r\n      tgl_akhir: new Date(date),\r\n    });\r\n  }\r\n\r\n  render() {\r\n    let databarang = [];\r\n    let berat = 0;\r\n    let ongkos = 0;\r\n    let harga_jual = 0;\r\n    let harga_total = 0;\r\n    let harga_gram = 0;\r\n    this.props.LaporanDataPenjualan.forEach((element) => {\r\n      element.detail.forEach((detail) => {\r\n        databarang.push(detail);\r\n        berat = berat + detail.berat\r\n        ongkos = ongkos + detail.ongkos\r\n        harga_jual = harga_jual + detail.harga_jual\r\n        harga_total = harga_total + detail.harga_total\r\n        harga_gram = harga_gram + detail.harga_gram\r\n      });\r\n    });\r\n    const columns = [\r\n  \r\n      {\r\n        dataField: \"kode_dept\",\r\n        text: \"Kode Dept\",\r\n        footerAttrs: {\r\n          colSpan: \"3\",\r\n        },\r\n        footer: (cell, row, num, index) => {\r\n          return <div>Total Barang  : {databarang.length} </div>;\r\n        },\r\n      },\r\n     \r\n      {\r\n        dataField: \"kode_barcode\",\r\n        text: \"Kode Barcode\",\r\n      },\r\n\r\n      {\r\n        dataField: \"nama_barang\",\r\n        text: \"Nama Barang\",\r\n      },\r\n     \r\n      {\r\n        dataField: \"berat\",\r\n        text: \"Berat\",\r\n        footer: (cell, row, num, index) => {\r\n          return <div>{berat.toFixed(3)} </div>;\r\n        },\r\n        formatter: (cell) => {\r\n          return cell.toFixed(3);\r\n        },\r\n      },\r\n      {\r\n        dataField: \"ongkos\",\r\n        text: \"Ongkos\",\r\n        headerClasses: 'text-right',\r\n        footer: (cell, row, num, index) => {\r\n          return <div className=\"text-right\">{ongkos.toLocaleString(\"kr-KO\")} </div>;\r\n        },\r\n        formatter: (cell) => {\r\n          return <div className=\"text-right\">{cell.toLocaleString(\"kr-KO\")}</div>;\r\n        },\r\n      },\r\n      {\r\n        dataField: \"harga_jual\",\r\n        text: \"Harga Jual\",\r\n        headerClasses: 'text-right',\r\n        footer: (cell, row, num, index) => {\r\n          return <div className=\"text-right\">{harga_jual.toLocaleString(\"kr-KO\")} </div>;\r\n        },\r\n        formatter: (cell) => {\r\n          return <div className=\"text-right\">{cell.toLocaleString(\"kr-KO\")}</div>;\r\n        },\r\n      },\r\n      {\r\n        dataField: \"harga_gram\",\r\n        text: \"Harga/Gram\",\r\n        headerClasses: 'text-right',\r\n        footer: (cell, row, num, index) => {\r\n          return <div className=\"text-right\">{harga_gram.toLocaleString(\"kr-KO\")} </div>;\r\n        },\r\n        formatter: (cell) => {\r\n          return <div className=\"text-right\">{cell.toLocaleString(\"kr-KO\")}</div>;\r\n        },\r\n      },\r\n      {\r\n        dataField: \"harga_total\",\r\n        text: \"Harga Total\",\r\n        headerClasses: 'text-right',\r\n        footer: (cell, row, num, index) => {\r\n          return <div className=\"text-right\">{harga_total.toLocaleString(\"kr-KO\")} </div>;\r\n        },\r\n        formatter: (cell) => {\r\n          return <div className=\"text-right\">{cell.toLocaleString(\"kr-KO\")}</div>;\r\n        },\r\n      }\r\n    ];\r\n    return (\r\n      <form onSubmit={this.props.handleSubmit} autoComplete=\"off\">\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-4\">\r\n            <Field\r\n              name=\"tgl_awal\"\r\n              component={InputDate}\r\n              label=\"Tanggal Dari\"\r\n              type=\"text\"\r\n              selected={this.state.tgl_awal}\r\n              onChange={(date) => this.setStartDate(date)}\r\n              placeholder=\"Masukan Tanggal Dari\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"col-lg-4\">\r\n            <Field\r\n              name=\"tgl_akhir\"\r\n              component={InputDate}\r\n              type=\"text\"\r\n              selected={this.state.tgl_akhir}\r\n              onChange={(date) => this.setLastDate(date)}\r\n              label=\"Tanggal Akhir\"\r\n              placeholder=\"Masukan Tanggal Akhir\"\r\n            />\r\n          </div>\r\n          <div className=\"col-lg-4\">\r\n            <div className=\"text-right\">\r\n              <label>&nbsp;</label>\r\n              <button\r\n                type=\"submit\"\r\n                value=\"PDF\"\r\n                name=\"type_btn\"\r\n                className=\"btn btn-primary btn-block\"\r\n              >\r\n                {this.props.isLoading ? (\r\n                  <>\r\n                    <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Sedang\r\n                    Mencari\r\n                  </>\r\n                ) : (\r\n                  \"Cari Laporan\"\r\n                )}\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-12\">\r\n            <Tabel\r\n              keyField=\"kode_barcode\"\r\n              data={this.props.export ? databarang  :  []}\r\n              columns={columns}\r\n              empty={true}\r\n              textEmpty=\"Data Laporan Batal Penjualan Kosong\"\r\n            />\r\n          </div>\r\n          \r\n          <div className={this.props.export ? \"col-lg-12\" : \"col-lg-12 d-none\"}>\r\n            {/* <label htmlFor=\"\">&nbsp;</label> */}\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-6\">\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => this.exportPdf()}\r\n                  className=\"btn btn-warning btn-block\"\r\n                >\r\n                  {\" \"}\r\n                  Export PDF{\" \"}\r\n                </button>\r\n              </div>\r\n              <div className=\"col-lg-6\">\r\n                <LaporanExelBatalJual data={this.props.LaporanDataPenjualan} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {this.props.isLoading ? (\r\n        <Loading \r\n        loading\r\n        background=\"rgba(0, 0, 0, 0.35)\"\r\n         loaderColor=\"rgba(94, 147, 117, 1)\" />\r\n      ) : null}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nHeadFormLaporanBatalPenjualan = reduxForm({\r\n  form: \"HeadFormLaporanBatalPenjualan\",\r\n    enableReinitialize: true,\r\n  validate: ValidasiTanggalLaporan \r\n})(HeadFormLaporanBatalPenjualan);\r\nexport default connect((state) => {\r\n  return {\r\n    initialValues: {\r\n      tgl_awal: getTglSystem(),\r\n      tgl_akhir: getTglSystem(),\r\n    },\r\n  };\r\n})(HeadFormLaporanBatalPenjualan);\r\n\r\n\r\n// import React, { Component } from \"react\";\r\n// import { connect } from \"react-redux\";\r\n// import { Field, reduxForm } from \"redux-form\";\r\n// import { ReanderField } from \"../../../../components/helpers/field\";\r\n// import { getToday } from \"../../../../components/helpers/function\";\r\n// import ValidasiLaporanPenjualanSales from \"../../../../Validasi/Penjualan/ValidasiLaporanPenjualanSales\";\r\n\r\n// class HeadFormLaporanBatalPenjualan extends Component {\r\n//   constructor(props) {\r\n//     super(props);\r\n//     this.state = {\r\n//       date: new Date(),\r\n//     };\r\n//   }\r\n//   render() {\r\n//     return (\r\n//       <form onSubmit={this.props.handleSubmit} autoComplete=\"off\">\r\n//         <div className=\"row\">\r\n//           <div className=\"col-lg-4\">\r\n//             <Field\r\n//               name=\"tanggal_awal\"\r\n//               component={ReanderField}\r\n//               type=\"date\"\r\n//               label=\"Dari Tanggal\"\r\n//               placeholder=\"Masukan Tanggal Awal\"\r\n//             />\r\n//           </div>\r\n//           <div className=\"col-lg-4\">\r\n//             <Field\r\n//               name=\"sampai_tgl\"\r\n//               component={ReanderField}\r\n//               type=\"date\"\r\n//               label=\"Sampai Tanggal\"\r\n//             />\r\n//           </div>\r\n\r\n//           <div className=\"col-lg-4\">\r\n//             <div className=\"text-right\">\r\n//               <label>&nbsp;</label>\r\n//               <button\r\n//                 type=\"submit\"\r\n//                 value=\"PDF\"\r\n//                 name=\"type_btn\"\r\n//                 className=\"btn btn-primary btn-block\"\r\n//                 disabled={this.props.isLoading}\r\n//               >\r\n//                 {this.props.isLoading ? (\r\n//                   <>\r\n//                     <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Sedang\r\n//                     Mencari\r\n//                   </>\r\n//                 ) : (\r\n//                   \"Cari Laporan\"\r\n//                 )}\r\n//               </button>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       </form>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// HeadFormLaporanBatalPenjualan = reduxForm({\r\n//   form: \"HeadFormLaporanBatalPenjualan\",\r\n//   enableReinitialize: true,\r\n//   validate: ValidasiLaporanPenjualanSales,\r\n// })(HeadFormLaporanBatalPenjualan);\r\n// // export default connect(null)(HeadFormLaporanBatalPenjualan);\r\n\r\n// export default connect((state) => {\r\n//   return {\r\n//     initialValues: {\r\n//       tanggal_awal : getToday(),\r\n//       sampai_tgl : getToday(),\r\n//     },\r\n//   };\r\n// })(HeadFormLaporanBatalPenjualan);\r\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n/* global window, document, Blob */\n\n\nvar propTypes = {\n  table: _propTypes2.default.string.isRequired,\n  filename: _propTypes2.default.string.isRequired,\n  sheet: _propTypes2.default.string.isRequired,\n  id: _propTypes2.default.string,\n  className: _propTypes2.default.string,\n  buttonText: _propTypes2.default.string\n};\nvar defaultProps = {\n  id: 'button-download-as-xls',\n  className: 'button-download',\n  buttonText: 'Download'\n};\n\nvar ReactHTMLTableToExcel = function (_Component) {\n  _inherits(ReactHTMLTableToExcel, _Component);\n\n  function ReactHTMLTableToExcel(props) {\n    _classCallCheck(this, ReactHTMLTableToExcel);\n\n    var _this = _possibleConstructorReturn(this, (ReactHTMLTableToExcel.__proto__ || Object.getPrototypeOf(ReactHTMLTableToExcel)).call(this, props));\n\n    _this.handleDownload = _this.handleDownload.bind(_this);\n    return _this;\n  }\n\n  _createClass(ReactHTMLTableToExcel, [{\n    key: 'handleDownload',\n    value: function handleDownload() {\n      if (!document) {\n        if (process.env.NODE_ENV !== 'production') {\n          console.error('Failed to access document object');\n        }\n\n        return null;\n      }\n\n      if (document.getElementById(this.props.table).nodeType !== 1 || document.getElementById(this.props.table).nodeName !== 'TABLE') {\n        if (process.env.NODE_ENV !== 'production') {\n          console.error('Provided table property is not html table element');\n        }\n\n        return null;\n      }\n\n      var table = document.getElementById(this.props.table).outerHTML;\n      var sheet = String(this.props.sheet);\n      var filename = String(this.props.filename) + '.xls';\n      var uri = 'data:application/vnd.ms-excel;base64,';\n      var template = '<html xmlns:o=\"urn:schemas-microsoft-com:office:office\" xmlns:x=\"urn:schemas-mic' + 'rosoft-com:office:excel\" xmlns=\"http://www.w3.org/TR/REC-html40\"><head><meta cha' + 'rset=\"UTF-8\"><!--[if gte mso 9]><xml><x:ExcelWorkbook><x:ExcelWorksheets><x:Exce' + 'lWorksheet><x:Name>{worksheet}</x:Name><x:WorksheetOptions><x:DisplayGridlines/>' + '</x:WorksheetOptions></x:ExcelWorksheet></x:ExcelWorksheets></x:ExcelWorkbook></' + 'xml><![endif]--></head><body>{table}</body></html>';\n      var context = {\n        worksheet: sheet || 'Worksheet',\n        table: table\n      }; // If IE11\n\n      if (window.navigator.msSaveOrOpenBlob) {\n        var fileData = ['' + ('<html xmlns:o=\"urn:schemas-microsoft-com:office:office\" xmlns:x=\"urn:schemas-mic' + 'rosoft-com:office:excel\" xmlns=\"http://www.w3.org/TR/REC-html40\"><head><meta cha' + 'rset=\"UTF-8\"><!--[if gte mso 9]><xml><x:ExcelWorkbook><x:ExcelWorksheets><x:Exce' + 'lWorksheet><x:Name>{worksheet}</x:Name><x:WorksheetOptions><x:DisplayGridlines/>' + '</x:WorksheetOptions></x:ExcelWorksheet></x:ExcelWorksheets></x:ExcelWorkbook></' + 'xml><![endif]--></head><body>') + table + '</body></html>'];\n        var blobObject = new Blob(fileData);\n        document.getElementById('react-html-table-to-excel').click()(function () {\n          window.navigator.msSaveOrOpenBlob(blobObject, filename);\n        });\n        return true;\n      }\n\n      var element = window.document.createElement('a');\n      element.href = uri + ReactHTMLTableToExcel.base64(ReactHTMLTableToExcel.format(template, context));\n      element.download = filename;\n      document.body.appendChild(element);\n      element.click();\n      document.body.removeChild(element);\n      return true;\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      return _react2.default.createElement('button', {\n        id: this.props.id,\n        className: this.props.className,\n        type: 'button',\n        onClick: this.handleDownload\n      }, this.props.buttonText);\n    }\n  }], [{\n    key: 'base64',\n    value: function base64(s) {\n      return window.btoa(unescape(encodeURIComponent(s)));\n    }\n  }, {\n    key: 'format',\n    value: function format(s, c) {\n      return s.replace(/{(\\w+)}/g, function (m, p) {\n        return c[p];\n      });\n    }\n  }]);\n\n  return ReactHTMLTableToExcel;\n}(_react.Component);\n\nReactHTMLTableToExcel.propTypes = propTypes;\nReactHTMLTableToExcel.defaultProps = defaultProps;\nexports.default = ReactHTMLTableToExcel;","const ValidasiTanggalLaporan = (value, event) => {\r\n    const errors = {};\r\n    // console.log(event.charCode==13);\r\n    if (!value.tgl_awal) {\r\n      errors.tgl_awal = \"Tanggal Awal Tidak Boleh Kosong\";\r\n    }\r\n    if (!value.tgl_akhir) {\r\n      errors.tgl_akhir = \"Tanggal Akhir Tidak Boleh Kosong\";\r\n    }\r\n    return errors;\r\n  };\r\n  \r\n  export default ValidasiTanggalLaporan;\r\n  "],"sourceRoot":""}